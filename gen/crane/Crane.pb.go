//*
// Copyright (c) 2024 Peking University and Peking University
// Changsha Institute for Computing and Digital Economy
//
// This program is free software: you can redistribute it and/or modify
// it under the terms of the GNU Affero General Public License as
// published by the Free Software Foundation, either version 3 of the
// License, or (at your option) any later version.
//
// This program is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU Affero General Public License for more details.
//
// You should have received a copy of the GNU Affero General Public License
// along with this program.  If not, see <https://www.gnu.org/licenses/>.

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.10
// 	protoc        (unknown)
// source: Crane.proto

package gen

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	emptypb "google.golang.org/protobuf/types/known/emptypb"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type ModifyTaskRequest_TargetAttributes int32

const (
	ModifyTaskRequest_TimeLimit ModifyTaskRequest_TargetAttributes = 0
	ModifyTaskRequest_Priority  ModifyTaskRequest_TargetAttributes = 1
	ModifyTaskRequest_Hold      ModifyTaskRequest_TargetAttributes = 2
)

// Enum value maps for ModifyTaskRequest_TargetAttributes.
var (
	ModifyTaskRequest_TargetAttributes_name = map[int32]string{
		0: "TimeLimit",
		1: "Priority",
		2: "Hold",
	}
	ModifyTaskRequest_TargetAttributes_value = map[string]int32{
		"TimeLimit": 0,
		"Priority":  1,
		"Hold":      2,
	}
)

func (x ModifyTaskRequest_TargetAttributes) Enum() *ModifyTaskRequest_TargetAttributes {
	p := new(ModifyTaskRequest_TargetAttributes)
	*p = x
	return p
}

func (x ModifyTaskRequest_TargetAttributes) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ModifyTaskRequest_TargetAttributes) Descriptor() protoreflect.EnumDescriptor {
	return file_Crane_proto_enumTypes[0].Descriptor()
}

func (ModifyTaskRequest_TargetAttributes) Type() protoreflect.EnumType {
	return &file_Crane_proto_enumTypes[0]
}

func (x ModifyTaskRequest_TargetAttributes) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ModifyTaskRequest_TargetAttributes.Descriptor instead.
func (ModifyTaskRequest_TargetAttributes) EnumDescriptor() ([]byte, []int) {
	return file_Crane_proto_rawDescGZIP(), []int{40, 0}
}

type StreamCallocRequest_CallocRequestType int32

const (
	StreamCallocRequest_TASK_REQUEST            StreamCallocRequest_CallocRequestType = 0
	StreamCallocRequest_TASK_COMPLETION_REQUEST StreamCallocRequest_CallocRequestType = 1
)

// Enum value maps for StreamCallocRequest_CallocRequestType.
var (
	StreamCallocRequest_CallocRequestType_name = map[int32]string{
		0: "TASK_REQUEST",
		1: "TASK_COMPLETION_REQUEST",
	}
	StreamCallocRequest_CallocRequestType_value = map[string]int32{
		"TASK_REQUEST":            0,
		"TASK_COMPLETION_REQUEST": 1,
	}
)

func (x StreamCallocRequest_CallocRequestType) Enum() *StreamCallocRequest_CallocRequestType {
	p := new(StreamCallocRequest_CallocRequestType)
	*p = x
	return p
}

func (x StreamCallocRequest_CallocRequestType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (StreamCallocRequest_CallocRequestType) Descriptor() protoreflect.EnumDescriptor {
	return file_Crane_proto_enumTypes[1].Descriptor()
}

func (StreamCallocRequest_CallocRequestType) Type() protoreflect.EnumType {
	return &file_Crane_proto_enumTypes[1]
}

func (x StreamCallocRequest_CallocRequestType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use StreamCallocRequest_CallocRequestType.Descriptor instead.
func (StreamCallocRequest_CallocRequestType) EnumDescriptor() ([]byte, []int) {
	return file_Crane_proto_rawDescGZIP(), []int{88, 0}
}

type StreamCallocReply_CforedReplyType int32

const (
	StreamCallocReply_TASK_ID_REPLY             StreamCallocReply_CforedReplyType = 0
	StreamCallocReply_TASK_RES_ALLOC_REPLY      StreamCallocReply_CforedReplyType = 1
	StreamCallocReply_TASK_CANCEL_REQUEST       StreamCallocReply_CforedReplyType = 2
	StreamCallocReply_TASK_COMPLETION_ACK_REPLY StreamCallocReply_CforedReplyType = 3
)

// Enum value maps for StreamCallocReply_CforedReplyType.
var (
	StreamCallocReply_CforedReplyType_name = map[int32]string{
		0: "TASK_ID_REPLY",
		1: "TASK_RES_ALLOC_REPLY",
		2: "TASK_CANCEL_REQUEST",
		3: "TASK_COMPLETION_ACK_REPLY",
	}
	StreamCallocReply_CforedReplyType_value = map[string]int32{
		"TASK_ID_REPLY":             0,
		"TASK_RES_ALLOC_REPLY":      1,
		"TASK_CANCEL_REQUEST":       2,
		"TASK_COMPLETION_ACK_REPLY": 3,
	}
)

func (x StreamCallocReply_CforedReplyType) Enum() *StreamCallocReply_CforedReplyType {
	p := new(StreamCallocReply_CforedReplyType)
	*p = x
	return p
}

func (x StreamCallocReply_CforedReplyType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (StreamCallocReply_CforedReplyType) Descriptor() protoreflect.EnumDescriptor {
	return file_Crane_proto_enumTypes[2].Descriptor()
}

func (StreamCallocReply_CforedReplyType) Type() protoreflect.EnumType {
	return &file_Crane_proto_enumTypes[2]
}

func (x StreamCallocReply_CforedReplyType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use StreamCallocReply_CforedReplyType.Descriptor instead.
func (StreamCallocReply_CforedReplyType) EnumDescriptor() ([]byte, []int) {
	return file_Crane_proto_rawDescGZIP(), []int{89, 0}
}

type StreamCforedRequest_CforedRequestType int32

const (
	StreamCforedRequest_CFORED_REGISTRATION     StreamCforedRequest_CforedRequestType = 0
	StreamCforedRequest_TASK_REQUEST            StreamCforedRequest_CforedRequestType = 1
	StreamCforedRequest_TASK_COMPLETION_REQUEST StreamCforedRequest_CforedRequestType = 2
	StreamCforedRequest_CFORED_GRACEFUL_EXIT    StreamCforedRequest_CforedRequestType = 3
)

// Enum value maps for StreamCforedRequest_CforedRequestType.
var (
	StreamCforedRequest_CforedRequestType_name = map[int32]string{
		0: "CFORED_REGISTRATION",
		1: "TASK_REQUEST",
		2: "TASK_COMPLETION_REQUEST",
		3: "CFORED_GRACEFUL_EXIT",
	}
	StreamCforedRequest_CforedRequestType_value = map[string]int32{
		"CFORED_REGISTRATION":     0,
		"TASK_REQUEST":            1,
		"TASK_COMPLETION_REQUEST": 2,
		"CFORED_GRACEFUL_EXIT":    3,
	}
)

func (x StreamCforedRequest_CforedRequestType) Enum() *StreamCforedRequest_CforedRequestType {
	p := new(StreamCforedRequest_CforedRequestType)
	*p = x
	return p
}

func (x StreamCforedRequest_CforedRequestType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (StreamCforedRequest_CforedRequestType) Descriptor() protoreflect.EnumDescriptor {
	return file_Crane_proto_enumTypes[3].Descriptor()
}

func (StreamCforedRequest_CforedRequestType) Type() protoreflect.EnumType {
	return &file_Crane_proto_enumTypes[3]
}

func (x StreamCforedRequest_CforedRequestType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use StreamCforedRequest_CforedRequestType.Descriptor instead.
func (StreamCforedRequest_CforedRequestType) EnumDescriptor() ([]byte, []int) {
	return file_Crane_proto_rawDescGZIP(), []int{90, 0}
}

type StreamCtldReply_CtldReplyType int32

const (
	StreamCtldReply_TASK_ID_REPLY             StreamCtldReply_CtldReplyType = 0
	StreamCtldReply_TASK_RES_ALLOC_REPLY      StreamCtldReply_CtldReplyType = 1
	StreamCtldReply_TASK_CANCEL_REQUEST       StreamCtldReply_CtldReplyType = 2
	StreamCtldReply_TASK_COMPLETION_ACK_REPLY StreamCtldReply_CtldReplyType = 3
	StreamCtldReply_CFORED_REGISTRATION_ACK   StreamCtldReply_CtldReplyType = 4
	StreamCtldReply_CFORED_GRACEFUL_EXIT_ACK  StreamCtldReply_CtldReplyType = 5
)

// Enum value maps for StreamCtldReply_CtldReplyType.
var (
	StreamCtldReply_CtldReplyType_name = map[int32]string{
		0: "TASK_ID_REPLY",
		1: "TASK_RES_ALLOC_REPLY",
		2: "TASK_CANCEL_REQUEST",
		3: "TASK_COMPLETION_ACK_REPLY",
		4: "CFORED_REGISTRATION_ACK",
		5: "CFORED_GRACEFUL_EXIT_ACK",
	}
	StreamCtldReply_CtldReplyType_value = map[string]int32{
		"TASK_ID_REPLY":             0,
		"TASK_RES_ALLOC_REPLY":      1,
		"TASK_CANCEL_REQUEST":       2,
		"TASK_COMPLETION_ACK_REPLY": 3,
		"CFORED_REGISTRATION_ACK":   4,
		"CFORED_GRACEFUL_EXIT_ACK":  5,
	}
)

func (x StreamCtldReply_CtldReplyType) Enum() *StreamCtldReply_CtldReplyType {
	p := new(StreamCtldReply_CtldReplyType)
	*p = x
	return p
}

func (x StreamCtldReply_CtldReplyType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (StreamCtldReply_CtldReplyType) Descriptor() protoreflect.EnumDescriptor {
	return file_Crane_proto_enumTypes[4].Descriptor()
}

func (StreamCtldReply_CtldReplyType) Type() protoreflect.EnumType {
	return &file_Crane_proto_enumTypes[4]
}

func (x StreamCtldReply_CtldReplyType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use StreamCtldReply_CtldReplyType.Descriptor instead.
func (StreamCtldReply_CtldReplyType) EnumDescriptor() ([]byte, []int) {
	return file_Crane_proto_rawDescGZIP(), []int{91, 0}
}

type StreamCrunRequest_CrunRequestType int32

const (
	StreamCrunRequest_TASK_REQUEST            StreamCrunRequest_CrunRequestType = 0
	StreamCrunRequest_TASK_COMPLETION_REQUEST StreamCrunRequest_CrunRequestType = 1
	StreamCrunRequest_TASK_IO_FORWARD         StreamCrunRequest_CrunRequestType = 2
	StreamCrunRequest_TASK_X11_FORWARD        StreamCrunRequest_CrunRequestType = 3
)

// Enum value maps for StreamCrunRequest_CrunRequestType.
var (
	StreamCrunRequest_CrunRequestType_name = map[int32]string{
		0: "TASK_REQUEST",
		1: "TASK_COMPLETION_REQUEST",
		2: "TASK_IO_FORWARD",
		3: "TASK_X11_FORWARD",
	}
	StreamCrunRequest_CrunRequestType_value = map[string]int32{
		"TASK_REQUEST":            0,
		"TASK_COMPLETION_REQUEST": 1,
		"TASK_IO_FORWARD":         2,
		"TASK_X11_FORWARD":        3,
	}
)

func (x StreamCrunRequest_CrunRequestType) Enum() *StreamCrunRequest_CrunRequestType {
	p := new(StreamCrunRequest_CrunRequestType)
	*p = x
	return p
}

func (x StreamCrunRequest_CrunRequestType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (StreamCrunRequest_CrunRequestType) Descriptor() protoreflect.EnumDescriptor {
	return file_Crane_proto_enumTypes[5].Descriptor()
}

func (StreamCrunRequest_CrunRequestType) Type() protoreflect.EnumType {
	return &file_Crane_proto_enumTypes[5]
}

func (x StreamCrunRequest_CrunRequestType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use StreamCrunRequest_CrunRequestType.Descriptor instead.
func (StreamCrunRequest_CrunRequestType) EnumDescriptor() ([]byte, []int) {
	return file_Crane_proto_rawDescGZIP(), []int{92, 0}
}

type StreamCrunReply_CforedCrunReplyType int32

const (
	StreamCrunReply_TASK_ID_REPLY             StreamCrunReply_CforedCrunReplyType = 0
	StreamCrunReply_TASK_RES_ALLOC_REPLY      StreamCrunReply_CforedCrunReplyType = 1
	StreamCrunReply_TASK_CANCEL_REQUEST       StreamCrunReply_CforedCrunReplyType = 2
	StreamCrunReply_TASK_COMPLETION_ACK_REPLY StreamCrunReply_CforedCrunReplyType = 3
	StreamCrunReply_TASK_IO_FORWARD           StreamCrunReply_CforedCrunReplyType = 4
	StreamCrunReply_TASK_IO_FORWARD_READY     StreamCrunReply_CforedCrunReplyType = 5
	StreamCrunReply_TASK_X11_FORWARD          StreamCrunReply_CforedCrunReplyType = 6
)

// Enum value maps for StreamCrunReply_CforedCrunReplyType.
var (
	StreamCrunReply_CforedCrunReplyType_name = map[int32]string{
		0: "TASK_ID_REPLY",
		1: "TASK_RES_ALLOC_REPLY",
		2: "TASK_CANCEL_REQUEST",
		3: "TASK_COMPLETION_ACK_REPLY",
		4: "TASK_IO_FORWARD",
		5: "TASK_IO_FORWARD_READY",
		6: "TASK_X11_FORWARD",
	}
	StreamCrunReply_CforedCrunReplyType_value = map[string]int32{
		"TASK_ID_REPLY":             0,
		"TASK_RES_ALLOC_REPLY":      1,
		"TASK_CANCEL_REQUEST":       2,
		"TASK_COMPLETION_ACK_REPLY": 3,
		"TASK_IO_FORWARD":           4,
		"TASK_IO_FORWARD_READY":     5,
		"TASK_X11_FORWARD":          6,
	}
)

func (x StreamCrunReply_CforedCrunReplyType) Enum() *StreamCrunReply_CforedCrunReplyType {
	p := new(StreamCrunReply_CforedCrunReplyType)
	*p = x
	return p
}

func (x StreamCrunReply_CforedCrunReplyType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (StreamCrunReply_CforedCrunReplyType) Descriptor() protoreflect.EnumDescriptor {
	return file_Crane_proto_enumTypes[6].Descriptor()
}

func (StreamCrunReply_CforedCrunReplyType) Type() protoreflect.EnumType {
	return &file_Crane_proto_enumTypes[6]
}

func (x StreamCrunReply_CforedCrunReplyType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use StreamCrunReply_CforedCrunReplyType.Descriptor instead.
func (StreamCrunReply_CforedCrunReplyType) EnumDescriptor() ([]byte, []int) {
	return file_Crane_proto_rawDescGZIP(), []int{93, 0}
}

type StreamTaskIORequest_SupervisorRequestType int32

const (
	StreamTaskIORequest_SUPERVISOR_REGISTER   StreamTaskIORequest_SupervisorRequestType = 0
	StreamTaskIORequest_TASK_OUTPUT           StreamTaskIORequest_SupervisorRequestType = 1
	StreamTaskIORequest_SUPERVISOR_UNREGISTER StreamTaskIORequest_SupervisorRequestType = 2
	StreamTaskIORequest_TASK_X11_OUTPUT       StreamTaskIORequest_SupervisorRequestType = 3
)

// Enum value maps for StreamTaskIORequest_SupervisorRequestType.
var (
	StreamTaskIORequest_SupervisorRequestType_name = map[int32]string{
		0: "SUPERVISOR_REGISTER",
		1: "TASK_OUTPUT",
		2: "SUPERVISOR_UNREGISTER",
		3: "TASK_X11_OUTPUT",
	}
	StreamTaskIORequest_SupervisorRequestType_value = map[string]int32{
		"SUPERVISOR_REGISTER":   0,
		"TASK_OUTPUT":           1,
		"SUPERVISOR_UNREGISTER": 2,
		"TASK_X11_OUTPUT":       3,
	}
)

func (x StreamTaskIORequest_SupervisorRequestType) Enum() *StreamTaskIORequest_SupervisorRequestType {
	p := new(StreamTaskIORequest_SupervisorRequestType)
	*p = x
	return p
}

func (x StreamTaskIORequest_SupervisorRequestType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (StreamTaskIORequest_SupervisorRequestType) Descriptor() protoreflect.EnumDescriptor {
	return file_Crane_proto_enumTypes[7].Descriptor()
}

func (StreamTaskIORequest_SupervisorRequestType) Type() protoreflect.EnumType {
	return &file_Crane_proto_enumTypes[7]
}

func (x StreamTaskIORequest_SupervisorRequestType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use StreamTaskIORequest_SupervisorRequestType.Descriptor instead.
func (StreamTaskIORequest_SupervisorRequestType) EnumDescriptor() ([]byte, []int) {
	return file_Crane_proto_rawDescGZIP(), []int{94, 0}
}

type StreamTaskIOReply_SupervisorReplyType int32

const (
	StreamTaskIOReply_SUPERVISOR_REGISTER_REPLY   StreamTaskIOReply_SupervisorReplyType = 0
	StreamTaskIOReply_TASK_INPUT                  StreamTaskIOReply_SupervisorReplyType = 1
	StreamTaskIOReply_SUPERVISOR_UNREGISTER_REPLY StreamTaskIOReply_SupervisorReplyType = 2
	StreamTaskIOReply_TASK_X11_INPUT              StreamTaskIOReply_SupervisorReplyType = 3
)

// Enum value maps for StreamTaskIOReply_SupervisorReplyType.
var (
	StreamTaskIOReply_SupervisorReplyType_name = map[int32]string{
		0: "SUPERVISOR_REGISTER_REPLY",
		1: "TASK_INPUT",
		2: "SUPERVISOR_UNREGISTER_REPLY",
		3: "TASK_X11_INPUT",
	}
	StreamTaskIOReply_SupervisorReplyType_value = map[string]int32{
		"SUPERVISOR_REGISTER_REPLY":   0,
		"TASK_INPUT":                  1,
		"SUPERVISOR_UNREGISTER_REPLY": 2,
		"TASK_X11_INPUT":              3,
	}
)

func (x StreamTaskIOReply_SupervisorReplyType) Enum() *StreamTaskIOReply_SupervisorReplyType {
	p := new(StreamTaskIOReply_SupervisorReplyType)
	*p = x
	return p
}

func (x StreamTaskIOReply_SupervisorReplyType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (StreamTaskIOReply_SupervisorReplyType) Descriptor() protoreflect.EnumDescriptor {
	return file_Crane_proto_enumTypes[8].Descriptor()
}

func (StreamTaskIOReply_SupervisorReplyType) Type() protoreflect.EnumType {
	return &file_Crane_proto_enumTypes[8]
}

func (x StreamTaskIOReply_SupervisorReplyType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use StreamTaskIOReply_SupervisorReplyType.Descriptor instead.
func (StreamTaskIOReply_SupervisorReplyType) EnumDescriptor() ([]byte, []int) {
	return file_Crane_proto_rawDescGZIP(), []int{95, 0}
}

type StepStatusChangeRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	TaskId        uint32                 `protobuf:"varint,1,opt,name=task_id,json=taskId,proto3" json:"task_id,omitempty"`
	CranedId      string                 `protobuf:"bytes,2,opt,name=craned_id,json=cranedId,proto3" json:"craned_id,omitempty"`
	NewStatus     TaskStatus             `protobuf:"varint,3,opt,name=new_status,json=newStatus,proto3,enum=crane.grpc.TaskStatus" json:"new_status,omitempty"`
	ExitCode      uint32                 `protobuf:"varint,4,opt,name=exit_code,json=exitCode,proto3" json:"exit_code,omitempty"`
	Reason        string                 `protobuf:"bytes,5,opt,name=reason,proto3" json:"reason,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *StepStatusChangeRequest) Reset() {
	*x = StepStatusChangeRequest{}
	mi := &file_Crane_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StepStatusChangeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StepStatusChangeRequest) ProtoMessage() {}

func (x *StepStatusChangeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_Crane_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StepStatusChangeRequest.ProtoReflect.Descriptor instead.
func (*StepStatusChangeRequest) Descriptor() ([]byte, []int) {
	return file_Crane_proto_rawDescGZIP(), []int{0}
}

func (x *StepStatusChangeRequest) GetTaskId() uint32 {
	if x != nil {
		return x.TaskId
	}
	return 0
}

func (x *StepStatusChangeRequest) GetCranedId() string {
	if x != nil {
		return x.CranedId
	}
	return ""
}

func (x *StepStatusChangeRequest) GetNewStatus() TaskStatus {
	if x != nil {
		return x.NewStatus
	}
	return TaskStatus_Pending
}

func (x *StepStatusChangeRequest) GetExitCode() uint32 {
	if x != nil {
		return x.ExitCode
	}
	return 0
}

func (x *StepStatusChangeRequest) GetReason() string {
	if x != nil {
		return x.Reason
	}
	return ""
}

type StepStatusChangeReply struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Ok            bool                   `protobuf:"varint,1,opt,name=ok,proto3" json:"ok,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *StepStatusChangeReply) Reset() {
	*x = StepStatusChangeReply{}
	mi := &file_Crane_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StepStatusChangeReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StepStatusChangeReply) ProtoMessage() {}

func (x *StepStatusChangeReply) ProtoReflect() protoreflect.Message {
	mi := &file_Crane_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StepStatusChangeReply.ProtoReflect.Descriptor instead.
func (*StepStatusChangeReply) Descriptor() ([]byte, []int) {
	return file_Crane_proto_rawDescGZIP(), []int{1}
}

func (x *StepStatusChangeReply) GetOk() bool {
	if x != nil {
		return x.Ok
	}
	return false
}

type CranedTriggerReverseConnRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	CranedId      string                 `protobuf:"bytes,1,opt,name=craned_id,json=cranedId,proto3" json:"craned_id,omitempty"`
	Token         *timestamppb.Timestamp `protobuf:"bytes,2,opt,name=token,proto3" json:"token,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CranedTriggerReverseConnRequest) Reset() {
	*x = CranedTriggerReverseConnRequest{}
	mi := &file_Crane_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CranedTriggerReverseConnRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CranedTriggerReverseConnRequest) ProtoMessage() {}

func (x *CranedTriggerReverseConnRequest) ProtoReflect() protoreflect.Message {
	mi := &file_Crane_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CranedTriggerReverseConnRequest.ProtoReflect.Descriptor instead.
func (*CranedTriggerReverseConnRequest) Descriptor() ([]byte, []int) {
	return file_Crane_proto_rawDescGZIP(), []int{2}
}

func (x *CranedTriggerReverseConnRequest) GetCranedId() string {
	if x != nil {
		return x.CranedId
	}
	return ""
}

func (x *CranedTriggerReverseConnRequest) GetToken() *timestamppb.Timestamp {
	if x != nil {
		return x.Token
	}
	return nil
}

type ConfigureCranedRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Ok            bool                   `protobuf:"varint,1,opt,name=ok,proto3" json:"ok,omitempty"`
	JobMap        map[uint32]*JobToD     `protobuf:"bytes,2,rep,name=job_map,json=jobMap,proto3" json:"job_map,omitempty" protobuf_key:"varint,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	JobTasksMap   map[uint32]*TaskToD    `protobuf:"bytes,3,rep,name=job_tasks_map,json=jobTasksMap,proto3" json:"job_tasks_map,omitempty" protobuf_key:"varint,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	Token         *timestamppb.Timestamp `protobuf:"bytes,4,opt,name=token,proto3" json:"token,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ConfigureCranedRequest) Reset() {
	*x = ConfigureCranedRequest{}
	mi := &file_Crane_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ConfigureCranedRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConfigureCranedRequest) ProtoMessage() {}

func (x *ConfigureCranedRequest) ProtoReflect() protoreflect.Message {
	mi := &file_Crane_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConfigureCranedRequest.ProtoReflect.Descriptor instead.
func (*ConfigureCranedRequest) Descriptor() ([]byte, []int) {
	return file_Crane_proto_rawDescGZIP(), []int{3}
}

func (x *ConfigureCranedRequest) GetOk() bool {
	if x != nil {
		return x.Ok
	}
	return false
}

func (x *ConfigureCranedRequest) GetJobMap() map[uint32]*JobToD {
	if x != nil {
		return x.JobMap
	}
	return nil
}

func (x *ConfigureCranedRequest) GetJobTasksMap() map[uint32]*TaskToD {
	if x != nil {
		return x.JobTasksMap
	}
	return nil
}

func (x *ConfigureCranedRequest) GetToken() *timestamppb.Timestamp {
	if x != nil {
		return x.Token
	}
	return nil
}

type CranedRegisterRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	CranedId      string                 `protobuf:"bytes,1,opt,name=craned_id,json=cranedId,proto3" json:"craned_id,omitempty"`
	RemoteMeta    *CranedRemoteMeta      `protobuf:"bytes,2,opt,name=remote_meta,json=remoteMeta,proto3" json:"remote_meta,omitempty"`
	Token         *timestamppb.Timestamp `protobuf:"bytes,3,opt,name=token,proto3" json:"token,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CranedRegisterRequest) Reset() {
	*x = CranedRegisterRequest{}
	mi := &file_Crane_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CranedRegisterRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CranedRegisterRequest) ProtoMessage() {}

func (x *CranedRegisterRequest) ProtoReflect() protoreflect.Message {
	mi := &file_Crane_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CranedRegisterRequest.ProtoReflect.Descriptor instead.
func (*CranedRegisterRequest) Descriptor() ([]byte, []int) {
	return file_Crane_proto_rawDescGZIP(), []int{4}
}

func (x *CranedRegisterRequest) GetCranedId() string {
	if x != nil {
		return x.CranedId
	}
	return ""
}

func (x *CranedRegisterRequest) GetRemoteMeta() *CranedRemoteMeta {
	if x != nil {
		return x.RemoteMeta
	}
	return nil
}

func (x *CranedRegisterRequest) GetToken() *timestamppb.Timestamp {
	if x != nil {
		return x.Token
	}
	return nil
}

type CranedRegisterReply struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Ok            bool                   `protobuf:"varint,1,opt,name=ok,proto3" json:"ok,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CranedRegisterReply) Reset() {
	*x = CranedRegisterReply{}
	mi := &file_Crane_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CranedRegisterReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CranedRegisterReply) ProtoMessage() {}

func (x *CranedRegisterReply) ProtoReflect() protoreflect.Message {
	mi := &file_Crane_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CranedRegisterReply.ProtoReflect.Descriptor instead.
func (*CranedRegisterReply) Descriptor() ([]byte, []int) {
	return file_Crane_proto_rawDescGZIP(), []int{5}
}

func (x *CranedRegisterReply) GetOk() bool {
	if x != nil {
		return x.Ok
	}
	return false
}

type CranedPingRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	CranedId      string                 `protobuf:"bytes,1,opt,name=craned_id,json=cranedId,proto3" json:"craned_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CranedPingRequest) Reset() {
	*x = CranedPingRequest{}
	mi := &file_Crane_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CranedPingRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CranedPingRequest) ProtoMessage() {}

func (x *CranedPingRequest) ProtoReflect() protoreflect.Message {
	mi := &file_Crane_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CranedPingRequest.ProtoReflect.Descriptor instead.
func (*CranedPingRequest) Descriptor() ([]byte, []int) {
	return file_Crane_proto_rawDescGZIP(), []int{6}
}

func (x *CranedPingRequest) GetCranedId() string {
	if x != nil {
		return x.CranedId
	}
	return ""
}

type CranedPingReply struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Ok            bool                   `protobuf:"varint,1,opt,name=ok,proto3" json:"ok,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CranedPingReply) Reset() {
	*x = CranedPingReply{}
	mi := &file_Crane_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CranedPingReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CranedPingReply) ProtoMessage() {}

func (x *CranedPingReply) ProtoReflect() protoreflect.Message {
	mi := &file_Crane_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CranedPingReply.ProtoReflect.Descriptor instead.
func (*CranedPingReply) Descriptor() ([]byte, []int) {
	return file_Crane_proto_rawDescGZIP(), []int{7}
}

func (x *CranedPingReply) GetOk() bool {
	if x != nil {
		return x.Ok
	}
	return false
}

type QueryCranedListFromTaskIdRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	TaskId        uint32                 `protobuf:"varint,1,opt,name=task_id,json=taskId,proto3" json:"task_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *QueryCranedListFromTaskIdRequest) Reset() {
	*x = QueryCranedListFromTaskIdRequest{}
	mi := &file_Crane_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *QueryCranedListFromTaskIdRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryCranedListFromTaskIdRequest) ProtoMessage() {}

func (x *QueryCranedListFromTaskIdRequest) ProtoReflect() protoreflect.Message {
	mi := &file_Crane_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryCranedListFromTaskIdRequest.ProtoReflect.Descriptor instead.
func (*QueryCranedListFromTaskIdRequest) Descriptor() ([]byte, []int) {
	return file_Crane_proto_rawDescGZIP(), []int{8}
}

func (x *QueryCranedListFromTaskIdRequest) GetTaskId() uint32 {
	if x != nil {
		return x.TaskId
	}
	return 0
}

type QueryCranedListFromTaskIdReply struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Ok            bool                   `protobuf:"varint,1,opt,name=ok,proto3" json:"ok,omitempty"`
	CranedList    string                 `protobuf:"bytes,2,opt,name=craned_list,json=cranedList,proto3" json:"craned_list,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *QueryCranedListFromTaskIdReply) Reset() {
	*x = QueryCranedListFromTaskIdReply{}
	mi := &file_Crane_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *QueryCranedListFromTaskIdReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryCranedListFromTaskIdReply) ProtoMessage() {}

func (x *QueryCranedListFromTaskIdReply) ProtoReflect() protoreflect.Message {
	mi := &file_Crane_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryCranedListFromTaskIdReply.ProtoReflect.Descriptor instead.
func (*QueryCranedListFromTaskIdReply) Descriptor() ([]byte, []int) {
	return file_Crane_proto_rawDescGZIP(), []int{9}
}

func (x *QueryCranedListFromTaskIdReply) GetOk() bool {
	if x != nil {
		return x.Ok
	}
	return false
}

func (x *QueryCranedListFromTaskIdReply) GetCranedList() string {
	if x != nil {
		return x.CranedList
	}
	return ""
}

type SubmitBatchTaskRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Task          *TaskToCtld            `protobuf:"bytes,1,opt,name=task,proto3" json:"task,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SubmitBatchTaskRequest) Reset() {
	*x = SubmitBatchTaskRequest{}
	mi := &file_Crane_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SubmitBatchTaskRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SubmitBatchTaskRequest) ProtoMessage() {}

func (x *SubmitBatchTaskRequest) ProtoReflect() protoreflect.Message {
	mi := &file_Crane_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SubmitBatchTaskRequest.ProtoReflect.Descriptor instead.
func (*SubmitBatchTaskRequest) Descriptor() ([]byte, []int) {
	return file_Crane_proto_rawDescGZIP(), []int{10}
}

func (x *SubmitBatchTaskRequest) GetTask() *TaskToCtld {
	if x != nil {
		return x.Task
	}
	return nil
}

type SubmitBatchTaskReply struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	Ok    bool                   `protobuf:"varint,1,opt,name=ok,proto3" json:"ok,omitempty"`
	// Types that are valid to be assigned to Payload:
	//
	//	*SubmitBatchTaskReply_TaskId
	//	*SubmitBatchTaskReply_Code
	Payload       isSubmitBatchTaskReply_Payload `protobuf_oneof:"payload"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SubmitBatchTaskReply) Reset() {
	*x = SubmitBatchTaskReply{}
	mi := &file_Crane_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SubmitBatchTaskReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SubmitBatchTaskReply) ProtoMessage() {}

func (x *SubmitBatchTaskReply) ProtoReflect() protoreflect.Message {
	mi := &file_Crane_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SubmitBatchTaskReply.ProtoReflect.Descriptor instead.
func (*SubmitBatchTaskReply) Descriptor() ([]byte, []int) {
	return file_Crane_proto_rawDescGZIP(), []int{11}
}

func (x *SubmitBatchTaskReply) GetOk() bool {
	if x != nil {
		return x.Ok
	}
	return false
}

func (x *SubmitBatchTaskReply) GetPayload() isSubmitBatchTaskReply_Payload {
	if x != nil {
		return x.Payload
	}
	return nil
}

func (x *SubmitBatchTaskReply) GetTaskId() uint32 {
	if x != nil {
		if x, ok := x.Payload.(*SubmitBatchTaskReply_TaskId); ok {
			return x.TaskId
		}
	}
	return 0
}

func (x *SubmitBatchTaskReply) GetCode() ErrCode {
	if x != nil {
		if x, ok := x.Payload.(*SubmitBatchTaskReply_Code); ok {
			return x.Code
		}
	}
	return ErrCode_SUCCESS
}

type isSubmitBatchTaskReply_Payload interface {
	isSubmitBatchTaskReply_Payload()
}

type SubmitBatchTaskReply_TaskId struct {
	TaskId uint32 `protobuf:"varint,2,opt,name=task_id,json=taskId,proto3,oneof"`
}

type SubmitBatchTaskReply_Code struct {
	Code ErrCode `protobuf:"varint,3,opt,name=code,proto3,enum=crane.grpc.ErrCode,oneof"`
}

func (*SubmitBatchTaskReply_TaskId) isSubmitBatchTaskReply_Payload() {}

func (*SubmitBatchTaskReply_Code) isSubmitBatchTaskReply_Payload() {}

type SubmitBatchTasksRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Task          *TaskToCtld            `protobuf:"bytes,1,opt,name=task,proto3" json:"task,omitempty"`
	Count         uint32                 `protobuf:"varint,2,opt,name=count,proto3" json:"count,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SubmitBatchTasksRequest) Reset() {
	*x = SubmitBatchTasksRequest{}
	mi := &file_Crane_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SubmitBatchTasksRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SubmitBatchTasksRequest) ProtoMessage() {}

func (x *SubmitBatchTasksRequest) ProtoReflect() protoreflect.Message {
	mi := &file_Crane_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SubmitBatchTasksRequest.ProtoReflect.Descriptor instead.
func (*SubmitBatchTasksRequest) Descriptor() ([]byte, []int) {
	return file_Crane_proto_rawDescGZIP(), []int{12}
}

func (x *SubmitBatchTasksRequest) GetTask() *TaskToCtld {
	if x != nil {
		return x.Task
	}
	return nil
}

func (x *SubmitBatchTasksRequest) GetCount() uint32 {
	if x != nil {
		return x.Count
	}
	return 0
}

type SubmitBatchTasksReply struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	TaskIdList    []uint32               `protobuf:"varint,1,rep,packed,name=task_id_list,json=taskIdList,proto3" json:"task_id_list,omitempty"`
	CodeList      []ErrCode              `protobuf:"varint,2,rep,packed,name=code_list,json=codeList,proto3,enum=crane.grpc.ErrCode" json:"code_list,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SubmitBatchTasksReply) Reset() {
	*x = SubmitBatchTasksReply{}
	mi := &file_Crane_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SubmitBatchTasksReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SubmitBatchTasksReply) ProtoMessage() {}

func (x *SubmitBatchTasksReply) ProtoReflect() protoreflect.Message {
	mi := &file_Crane_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SubmitBatchTasksReply.ProtoReflect.Descriptor instead.
func (*SubmitBatchTasksReply) Descriptor() ([]byte, []int) {
	return file_Crane_proto_rawDescGZIP(), []int{13}
}

func (x *SubmitBatchTasksReply) GetTaskIdList() []uint32 {
	if x != nil {
		return x.TaskIdList
	}
	return nil
}

func (x *SubmitBatchTasksReply) GetCodeList() []ErrCode {
	if x != nil {
		return x.CodeList
	}
	return nil
}

type ExecuteStepsRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Tasks         []*TaskToD             `protobuf:"bytes,1,rep,name=tasks,proto3" json:"tasks,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ExecuteStepsRequest) Reset() {
	*x = ExecuteStepsRequest{}
	mi := &file_Crane_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ExecuteStepsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExecuteStepsRequest) ProtoMessage() {}

func (x *ExecuteStepsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_Crane_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExecuteStepsRequest.ProtoReflect.Descriptor instead.
func (*ExecuteStepsRequest) Descriptor() ([]byte, []int) {
	return file_Crane_proto_rawDescGZIP(), []int{14}
}

func (x *ExecuteStepsRequest) GetTasks() []*TaskToD {
	if x != nil {
		return x.Tasks
	}
	return nil
}

type ExecuteStepsReply struct {
	state            protoimpl.MessageState `protogen:"open.v1"`
	FailedTaskIdList []uint32               `protobuf:"varint,1,rep,packed,name=failed_task_id_list,json=failedTaskIdList,proto3" json:"failed_task_id_list,omitempty"`
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *ExecuteStepsReply) Reset() {
	*x = ExecuteStepsReply{}
	mi := &file_Crane_proto_msgTypes[15]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ExecuteStepsReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExecuteStepsReply) ProtoMessage() {}

func (x *ExecuteStepsReply) ProtoReflect() protoreflect.Message {
	mi := &file_Crane_proto_msgTypes[15]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExecuteStepsReply.ProtoReflect.Descriptor instead.
func (*ExecuteStepsReply) Descriptor() ([]byte, []int) {
	return file_Crane_proto_rawDescGZIP(), []int{15}
}

func (x *ExecuteStepsReply) GetFailedTaskIdList() []uint32 {
	if x != nil {
		return x.FailedTaskIdList
	}
	return nil
}

type CreateCgroupForJobsRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	JobList       []*JobToD              `protobuf:"bytes,1,rep,name=job_list,json=jobList,proto3" json:"job_list,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateCgroupForJobsRequest) Reset() {
	*x = CreateCgroupForJobsRequest{}
	mi := &file_Crane_proto_msgTypes[16]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateCgroupForJobsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateCgroupForJobsRequest) ProtoMessage() {}

func (x *CreateCgroupForJobsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_Crane_proto_msgTypes[16]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateCgroupForJobsRequest.ProtoReflect.Descriptor instead.
func (*CreateCgroupForJobsRequest) Descriptor() ([]byte, []int) {
	return file_Crane_proto_rawDescGZIP(), []int{16}
}

func (x *CreateCgroupForJobsRequest) GetJobList() []*JobToD {
	if x != nil {
		return x.JobList
	}
	return nil
}

type CreateCgroupForJobsReply struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateCgroupForJobsReply) Reset() {
	*x = CreateCgroupForJobsReply{}
	mi := &file_Crane_proto_msgTypes[17]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateCgroupForJobsReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateCgroupForJobsReply) ProtoMessage() {}

func (x *CreateCgroupForJobsReply) ProtoReflect() protoreflect.Message {
	mi := &file_Crane_proto_msgTypes[17]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateCgroupForJobsReply.ProtoReflect.Descriptor instead.
func (*CreateCgroupForJobsReply) Descriptor() ([]byte, []int) {
	return file_Crane_proto_rawDescGZIP(), []int{17}
}

type FreeStepsRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	JobIdList     []uint32               `protobuf:"varint,1,rep,packed,name=job_id_list,json=jobIdList,proto3" json:"job_id_list,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *FreeStepsRequest) Reset() {
	*x = FreeStepsRequest{}
	mi := &file_Crane_proto_msgTypes[18]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FreeStepsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FreeStepsRequest) ProtoMessage() {}

func (x *FreeStepsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_Crane_proto_msgTypes[18]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FreeStepsRequest.ProtoReflect.Descriptor instead.
func (*FreeStepsRequest) Descriptor() ([]byte, []int) {
	return file_Crane_proto_rawDescGZIP(), []int{18}
}

func (x *FreeStepsRequest) GetJobIdList() []uint32 {
	if x != nil {
		return x.JobIdList
	}
	return nil
}

type FreeStepsReply struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *FreeStepsReply) Reset() {
	*x = FreeStepsReply{}
	mi := &file_Crane_proto_msgTypes[19]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FreeStepsReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FreeStepsReply) ProtoMessage() {}

func (x *FreeStepsReply) ProtoReflect() protoreflect.Message {
	mi := &file_Crane_proto_msgTypes[19]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FreeStepsReply.ProtoReflect.Descriptor instead.
func (*FreeStepsReply) Descriptor() ([]byte, []int) {
	return file_Crane_proto_rawDescGZIP(), []int{19}
}

type ReleaseCgroupForJobsRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	TaskIdList    []uint32               `protobuf:"varint,1,rep,packed,name=task_id_list,json=taskIdList,proto3" json:"task_id_list,omitempty"`
	UidList       []uint32               `protobuf:"varint,2,rep,packed,name=uid_list,json=uidList,proto3" json:"uid_list,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ReleaseCgroupForJobsRequest) Reset() {
	*x = ReleaseCgroupForJobsRequest{}
	mi := &file_Crane_proto_msgTypes[20]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ReleaseCgroupForJobsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReleaseCgroupForJobsRequest) ProtoMessage() {}

func (x *ReleaseCgroupForJobsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_Crane_proto_msgTypes[20]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReleaseCgroupForJobsRequest.ProtoReflect.Descriptor instead.
func (*ReleaseCgroupForJobsRequest) Descriptor() ([]byte, []int) {
	return file_Crane_proto_rawDescGZIP(), []int{20}
}

func (x *ReleaseCgroupForJobsRequest) GetTaskIdList() []uint32 {
	if x != nil {
		return x.TaskIdList
	}
	return nil
}

func (x *ReleaseCgroupForJobsRequest) GetUidList() []uint32 {
	if x != nil {
		return x.UidList
	}
	return nil
}

type ReleaseCgroupForJobsReply struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ReleaseCgroupForJobsReply) Reset() {
	*x = ReleaseCgroupForJobsReply{}
	mi := &file_Crane_proto_msgTypes[21]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ReleaseCgroupForJobsReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReleaseCgroupForJobsReply) ProtoMessage() {}

func (x *ReleaseCgroupForJobsReply) ProtoReflect() protoreflect.Message {
	mi := &file_Crane_proto_msgTypes[21]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReleaseCgroupForJobsReply.ProtoReflect.Descriptor instead.
func (*ReleaseCgroupForJobsReply) Descriptor() ([]byte, []int) {
	return file_Crane_proto_rawDescGZIP(), []int{21}
}

type TerminateStepsRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	TaskIdList    []uint32               `protobuf:"varint,1,rep,packed,name=task_id_list,json=taskIdList,proto3" json:"task_id_list,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TerminateStepsRequest) Reset() {
	*x = TerminateStepsRequest{}
	mi := &file_Crane_proto_msgTypes[22]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TerminateStepsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TerminateStepsRequest) ProtoMessage() {}

func (x *TerminateStepsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_Crane_proto_msgTypes[22]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TerminateStepsRequest.ProtoReflect.Descriptor instead.
func (*TerminateStepsRequest) Descriptor() ([]byte, []int) {
	return file_Crane_proto_rawDescGZIP(), []int{22}
}

func (x *TerminateStepsRequest) GetTaskIdList() []uint32 {
	if x != nil {
		return x.TaskIdList
	}
	return nil
}

type TerminateStepsReply struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Ok            bool                   `protobuf:"varint,1,opt,name=ok,proto3" json:"ok,omitempty"`
	Reason        string                 `protobuf:"bytes,2,opt,name=reason,proto3" json:"reason,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TerminateStepsReply) Reset() {
	*x = TerminateStepsReply{}
	mi := &file_Crane_proto_msgTypes[23]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TerminateStepsReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TerminateStepsReply) ProtoMessage() {}

func (x *TerminateStepsReply) ProtoReflect() protoreflect.Message {
	mi := &file_Crane_proto_msgTypes[23]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TerminateStepsReply.ProtoReflect.Descriptor instead.
func (*TerminateStepsReply) Descriptor() ([]byte, []int) {
	return file_Crane_proto_rawDescGZIP(), []int{23}
}

func (x *TerminateStepsReply) GetOk() bool {
	if x != nil {
		return x.Ok
	}
	return false
}

func (x *TerminateStepsReply) GetReason() string {
	if x != nil {
		return x.Reason
	}
	return ""
}

type TerminateOrphanedStepRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	TaskIdList    []uint32               `protobuf:"varint,1,rep,packed,name=task_id_list,json=taskIdList,proto3" json:"task_id_list,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TerminateOrphanedStepRequest) Reset() {
	*x = TerminateOrphanedStepRequest{}
	mi := &file_Crane_proto_msgTypes[24]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TerminateOrphanedStepRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TerminateOrphanedStepRequest) ProtoMessage() {}

func (x *TerminateOrphanedStepRequest) ProtoReflect() protoreflect.Message {
	mi := &file_Crane_proto_msgTypes[24]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TerminateOrphanedStepRequest.ProtoReflect.Descriptor instead.
func (*TerminateOrphanedStepRequest) Descriptor() ([]byte, []int) {
	return file_Crane_proto_rawDescGZIP(), []int{24}
}

func (x *TerminateOrphanedStepRequest) GetTaskIdList() []uint32 {
	if x != nil {
		return x.TaskIdList
	}
	return nil
}

type TerminateOrphanedStepReply struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Ok            bool                   `protobuf:"varint,1,opt,name=ok,proto3" json:"ok,omitempty"`
	Reason        string                 `protobuf:"bytes,2,opt,name=reason,proto3" json:"reason,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TerminateOrphanedStepReply) Reset() {
	*x = TerminateOrphanedStepReply{}
	mi := &file_Crane_proto_msgTypes[25]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TerminateOrphanedStepReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TerminateOrphanedStepReply) ProtoMessage() {}

func (x *TerminateOrphanedStepReply) ProtoReflect() protoreflect.Message {
	mi := &file_Crane_proto_msgTypes[25]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TerminateOrphanedStepReply.ProtoReflect.Descriptor instead.
func (*TerminateOrphanedStepReply) Descriptor() ([]byte, []int) {
	return file_Crane_proto_rawDescGZIP(), []int{25}
}

func (x *TerminateOrphanedStepReply) GetOk() bool {
	if x != nil {
		return x.Ok
	}
	return false
}

func (x *TerminateOrphanedStepReply) GetReason() string {
	if x != nil {
		return x.Reason
	}
	return ""
}

type ChangeJobTimeLimitRequest struct {
	state            protoimpl.MessageState `protogen:"open.v1"`
	TaskId           uint32                 `protobuf:"varint,1,opt,name=task_id,json=taskId,proto3" json:"task_id,omitempty"`
	TimeLimitSeconds int64                  `protobuf:"varint,2,opt,name=time_limit_seconds,json=timeLimitSeconds,proto3" json:"time_limit_seconds,omitempty"`
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *ChangeJobTimeLimitRequest) Reset() {
	*x = ChangeJobTimeLimitRequest{}
	mi := &file_Crane_proto_msgTypes[26]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ChangeJobTimeLimitRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChangeJobTimeLimitRequest) ProtoMessage() {}

func (x *ChangeJobTimeLimitRequest) ProtoReflect() protoreflect.Message {
	mi := &file_Crane_proto_msgTypes[26]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChangeJobTimeLimitRequest.ProtoReflect.Descriptor instead.
func (*ChangeJobTimeLimitRequest) Descriptor() ([]byte, []int) {
	return file_Crane_proto_rawDescGZIP(), []int{26}
}

func (x *ChangeJobTimeLimitRequest) GetTaskId() uint32 {
	if x != nil {
		return x.TaskId
	}
	return 0
}

func (x *ChangeJobTimeLimitRequest) GetTimeLimitSeconds() int64 {
	if x != nil {
		return x.TimeLimitSeconds
	}
	return 0
}

type ChangeJobTimeLimitReply struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Ok            bool                   `protobuf:"varint,1,opt,name=ok,proto3" json:"ok,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ChangeJobTimeLimitReply) Reset() {
	*x = ChangeJobTimeLimitReply{}
	mi := &file_Crane_proto_msgTypes[27]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ChangeJobTimeLimitReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChangeJobTimeLimitReply) ProtoMessage() {}

func (x *ChangeJobTimeLimitReply) ProtoReflect() protoreflect.Message {
	mi := &file_Crane_proto_msgTypes[27]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChangeJobTimeLimitReply.ProtoReflect.Descriptor instead.
func (*ChangeJobTimeLimitReply) Descriptor() ([]byte, []int) {
	return file_Crane_proto_rawDescGZIP(), []int{27}
}

func (x *ChangeJobTimeLimitReply) GetOk() bool {
	if x != nil {
		return x.Ok
	}
	return false
}

type CancelTaskRequest struct {
	state       protoimpl.MessageState `protogen:"open.v1"`
	OperatorUid uint32                 `protobuf:"varint,1,opt,name=operator_uid,json=operatorUid,proto3" json:"operator_uid,omitempty"`
	// Filters
	FilterTaskIds   []uint32   `protobuf:"varint,2,rep,packed,name=filter_task_ids,json=filterTaskIds,proto3" json:"filter_task_ids,omitempty"`
	FilterPartition string     `protobuf:"bytes,3,opt,name=filter_partition,json=filterPartition,proto3" json:"filter_partition,omitempty"`
	FilterAccount   string     `protobuf:"bytes,4,opt,name=filter_account,json=filterAccount,proto3" json:"filter_account,omitempty"`
	FilterState     TaskStatus `protobuf:"varint,5,opt,name=filter_state,json=filterState,proto3,enum=crane.grpc.TaskStatus" json:"filter_state,omitempty"`
	FilterTaskName  string     `protobuf:"bytes,6,opt,name=filter_task_name,json=filterTaskName,proto3" json:"filter_task_name,omitempty"`
	FilterNodes     []string   `protobuf:"bytes,7,rep,name=filter_nodes,json=filterNodes,proto3" json:"filter_nodes,omitempty"`
	FilterUsername  string     `protobuf:"bytes,8,opt,name=filter_username,json=filterUsername,proto3" json:"filter_username,omitempty"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *CancelTaskRequest) Reset() {
	*x = CancelTaskRequest{}
	mi := &file_Crane_proto_msgTypes[28]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CancelTaskRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CancelTaskRequest) ProtoMessage() {}

func (x *CancelTaskRequest) ProtoReflect() protoreflect.Message {
	mi := &file_Crane_proto_msgTypes[28]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CancelTaskRequest.ProtoReflect.Descriptor instead.
func (*CancelTaskRequest) Descriptor() ([]byte, []int) {
	return file_Crane_proto_rawDescGZIP(), []int{28}
}

func (x *CancelTaskRequest) GetOperatorUid() uint32 {
	if x != nil {
		return x.OperatorUid
	}
	return 0
}

func (x *CancelTaskRequest) GetFilterTaskIds() []uint32 {
	if x != nil {
		return x.FilterTaskIds
	}
	return nil
}

func (x *CancelTaskRequest) GetFilterPartition() string {
	if x != nil {
		return x.FilterPartition
	}
	return ""
}

func (x *CancelTaskRequest) GetFilterAccount() string {
	if x != nil {
		return x.FilterAccount
	}
	return ""
}

func (x *CancelTaskRequest) GetFilterState() TaskStatus {
	if x != nil {
		return x.FilterState
	}
	return TaskStatus_Pending
}

func (x *CancelTaskRequest) GetFilterTaskName() string {
	if x != nil {
		return x.FilterTaskName
	}
	return ""
}

func (x *CancelTaskRequest) GetFilterNodes() []string {
	if x != nil {
		return x.FilterNodes
	}
	return nil
}

func (x *CancelTaskRequest) GetFilterUsername() string {
	if x != nil {
		return x.FilterUsername
	}
	return ""
}

type CancelTaskReply struct {
	state               protoimpl.MessageState `protogen:"open.v1"`
	CancelledTasks      []uint32               `protobuf:"varint,2,rep,packed,name=cancelled_tasks,json=cancelledTasks,proto3" json:"cancelled_tasks,omitempty"`
	NotCancelledTasks   []uint32               `protobuf:"varint,3,rep,packed,name=not_cancelled_tasks,json=notCancelledTasks,proto3" json:"not_cancelled_tasks,omitempty"`
	NotCancelledReasons []string               `protobuf:"bytes,4,rep,name=not_cancelled_reasons,json=notCancelledReasons,proto3" json:"not_cancelled_reasons,omitempty"`
	unknownFields       protoimpl.UnknownFields
	sizeCache           protoimpl.SizeCache
}

func (x *CancelTaskReply) Reset() {
	*x = CancelTaskReply{}
	mi := &file_Crane_proto_msgTypes[29]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CancelTaskReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CancelTaskReply) ProtoMessage() {}

func (x *CancelTaskReply) ProtoReflect() protoreflect.Message {
	mi := &file_Crane_proto_msgTypes[29]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CancelTaskReply.ProtoReflect.Descriptor instead.
func (*CancelTaskReply) Descriptor() ([]byte, []int) {
	return file_Crane_proto_rawDescGZIP(), []int{29}
}

func (x *CancelTaskReply) GetCancelledTasks() []uint32 {
	if x != nil {
		return x.CancelledTasks
	}
	return nil
}

func (x *CancelTaskReply) GetNotCancelledTasks() []uint32 {
	if x != nil {
		return x.NotCancelledTasks
	}
	return nil
}

func (x *CancelTaskReply) GetNotCancelledReasons() []string {
	if x != nil {
		return x.NotCancelledReasons
	}
	return nil
}

type QueryStepFromPortRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Port          uint32                 `protobuf:"varint,1,opt,name=port,proto3" json:"port,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *QueryStepFromPortRequest) Reset() {
	*x = QueryStepFromPortRequest{}
	mi := &file_Crane_proto_msgTypes[30]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *QueryStepFromPortRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryStepFromPortRequest) ProtoMessage() {}

func (x *QueryStepFromPortRequest) ProtoReflect() protoreflect.Message {
	mi := &file_Crane_proto_msgTypes[30]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryStepFromPortRequest.ProtoReflect.Descriptor instead.
func (*QueryStepFromPortRequest) Descriptor() ([]byte, []int) {
	return file_Crane_proto_rawDescGZIP(), []int{30}
}

func (x *QueryStepFromPortRequest) GetPort() uint32 {
	if x != nil {
		return x.Port
	}
	return 0
}

type QueryStepFromPortReply struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Ok            bool                   `protobuf:"varint,1,opt,name=ok,proto3" json:"ok,omitempty"`
	TaskId        uint32                 `protobuf:"varint,2,opt,name=task_id,json=taskId,proto3" json:"task_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *QueryStepFromPortReply) Reset() {
	*x = QueryStepFromPortReply{}
	mi := &file_Crane_proto_msgTypes[31]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *QueryStepFromPortReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryStepFromPortReply) ProtoMessage() {}

func (x *QueryStepFromPortReply) ProtoReflect() protoreflect.Message {
	mi := &file_Crane_proto_msgTypes[31]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryStepFromPortReply.ProtoReflect.Descriptor instead.
func (*QueryStepFromPortReply) Descriptor() ([]byte, []int) {
	return file_Crane_proto_rawDescGZIP(), []int{31}
}

func (x *QueryStepFromPortReply) GetOk() bool {
	if x != nil {
		return x.Ok
	}
	return false
}

func (x *QueryStepFromPortReply) GetTaskId() uint32 {
	if x != nil {
		return x.TaskId
	}
	return 0
}

type QueryStepFromPortForwardRequest struct {
	state            protoimpl.MessageState `protogen:"open.v1"`
	SshRemotePort    uint32                 `protobuf:"varint,1,opt,name=ssh_remote_port,json=sshRemotePort,proto3" json:"ssh_remote_port,omitempty"`
	SshRemoteAddress string                 `protobuf:"bytes,2,opt,name=ssh_remote_address,json=sshRemoteAddress,proto3" json:"ssh_remote_address,omitempty"`
	Uid              uint32                 `protobuf:"varint,3,opt,name=uid,proto3" json:"uid,omitempty"`
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *QueryStepFromPortForwardRequest) Reset() {
	*x = QueryStepFromPortForwardRequest{}
	mi := &file_Crane_proto_msgTypes[32]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *QueryStepFromPortForwardRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryStepFromPortForwardRequest) ProtoMessage() {}

func (x *QueryStepFromPortForwardRequest) ProtoReflect() protoreflect.Message {
	mi := &file_Crane_proto_msgTypes[32]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryStepFromPortForwardRequest.ProtoReflect.Descriptor instead.
func (*QueryStepFromPortForwardRequest) Descriptor() ([]byte, []int) {
	return file_Crane_proto_rawDescGZIP(), []int{32}
}

func (x *QueryStepFromPortForwardRequest) GetSshRemotePort() uint32 {
	if x != nil {
		return x.SshRemotePort
	}
	return 0
}

func (x *QueryStepFromPortForwardRequest) GetSshRemoteAddress() string {
	if x != nil {
		return x.SshRemoteAddress
	}
	return ""
}

func (x *QueryStepFromPortForwardRequest) GetUid() uint32 {
	if x != nil {
		return x.Uid
	}
	return 0
}

type QueryStepFromPortForwardReply struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Ok            bool                   `protobuf:"varint,1,opt,name=ok,proto3" json:"ok,omitempty"`
	FromUser      bool                   `protobuf:"varint,2,opt,name=from_user,json=fromUser,proto3" json:"from_user,omitempty"`
	TaskId        uint32                 `protobuf:"varint,3,opt,name=task_id,json=taskId,proto3" json:"task_id,omitempty"`
	CgroupPath    string                 `protobuf:"bytes,4,opt,name=cgroup_path,json=cgroupPath,proto3" json:"cgroup_path,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *QueryStepFromPortForwardReply) Reset() {
	*x = QueryStepFromPortForwardReply{}
	mi := &file_Crane_proto_msgTypes[33]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *QueryStepFromPortForwardReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryStepFromPortForwardReply) ProtoMessage() {}

func (x *QueryStepFromPortForwardReply) ProtoReflect() protoreflect.Message {
	mi := &file_Crane_proto_msgTypes[33]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryStepFromPortForwardReply.ProtoReflect.Descriptor instead.
func (*QueryStepFromPortForwardReply) Descriptor() ([]byte, []int) {
	return file_Crane_proto_rawDescGZIP(), []int{33}
}

func (x *QueryStepFromPortForwardReply) GetOk() bool {
	if x != nil {
		return x.Ok
	}
	return false
}

func (x *QueryStepFromPortForwardReply) GetFromUser() bool {
	if x != nil {
		return x.FromUser
	}
	return false
}

func (x *QueryStepFromPortForwardReply) GetTaskId() uint32 {
	if x != nil {
		return x.TaskId
	}
	return 0
}

func (x *QueryStepFromPortForwardReply) GetCgroupPath() string {
	if x != nil {
		return x.CgroupPath
	}
	return ""
}

type QueryCranedInfoRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	CranedName    string                 `protobuf:"bytes,1,opt,name=craned_name,json=cranedName,proto3" json:"craned_name,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *QueryCranedInfoRequest) Reset() {
	*x = QueryCranedInfoRequest{}
	mi := &file_Crane_proto_msgTypes[34]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *QueryCranedInfoRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryCranedInfoRequest) ProtoMessage() {}

func (x *QueryCranedInfoRequest) ProtoReflect() protoreflect.Message {
	mi := &file_Crane_proto_msgTypes[34]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryCranedInfoRequest.ProtoReflect.Descriptor instead.
func (*QueryCranedInfoRequest) Descriptor() ([]byte, []int) {
	return file_Crane_proto_rawDescGZIP(), []int{34}
}

func (x *QueryCranedInfoRequest) GetCranedName() string {
	if x != nil {
		return x.CranedName
	}
	return ""
}

type QueryCranedInfoReply struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	CranedInfoList []*CranedInfo          `protobuf:"bytes,1,rep,name=craned_info_list,json=cranedInfoList,proto3" json:"craned_info_list,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *QueryCranedInfoReply) Reset() {
	*x = QueryCranedInfoReply{}
	mi := &file_Crane_proto_msgTypes[35]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *QueryCranedInfoReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryCranedInfoReply) ProtoMessage() {}

func (x *QueryCranedInfoReply) ProtoReflect() protoreflect.Message {
	mi := &file_Crane_proto_msgTypes[35]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryCranedInfoReply.ProtoReflect.Descriptor instead.
func (*QueryCranedInfoReply) Descriptor() ([]byte, []int) {
	return file_Crane_proto_rawDescGZIP(), []int{35}
}

func (x *QueryCranedInfoReply) GetCranedInfoList() []*CranedInfo {
	if x != nil {
		return x.CranedInfoList
	}
	return nil
}

type QueryPartitionInfoRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	PartitionName string                 `protobuf:"bytes,1,opt,name=partition_name,json=partitionName,proto3" json:"partition_name,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *QueryPartitionInfoRequest) Reset() {
	*x = QueryPartitionInfoRequest{}
	mi := &file_Crane_proto_msgTypes[36]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *QueryPartitionInfoRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryPartitionInfoRequest) ProtoMessage() {}

func (x *QueryPartitionInfoRequest) ProtoReflect() protoreflect.Message {
	mi := &file_Crane_proto_msgTypes[36]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryPartitionInfoRequest.ProtoReflect.Descriptor instead.
func (*QueryPartitionInfoRequest) Descriptor() ([]byte, []int) {
	return file_Crane_proto_rawDescGZIP(), []int{36}
}

func (x *QueryPartitionInfoRequest) GetPartitionName() string {
	if x != nil {
		return x.PartitionName
	}
	return ""
}

type QueryPartitionInfoReply struct {
	state             protoimpl.MessageState `protogen:"open.v1"`
	PartitionInfoList []*PartitionInfo       `protobuf:"bytes,1,rep,name=partition_info_list,json=partitionInfoList,proto3" json:"partition_info_list,omitempty"`
	unknownFields     protoimpl.UnknownFields
	sizeCache         protoimpl.SizeCache
}

func (x *QueryPartitionInfoReply) Reset() {
	*x = QueryPartitionInfoReply{}
	mi := &file_Crane_proto_msgTypes[37]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *QueryPartitionInfoReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryPartitionInfoReply) ProtoMessage() {}

func (x *QueryPartitionInfoReply) ProtoReflect() protoreflect.Message {
	mi := &file_Crane_proto_msgTypes[37]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryPartitionInfoReply.ProtoReflect.Descriptor instead.
func (*QueryPartitionInfoReply) Descriptor() ([]byte, []int) {
	return file_Crane_proto_rawDescGZIP(), []int{37}
}

func (x *QueryPartitionInfoReply) GetPartitionInfoList() []*PartitionInfo {
	if x != nil {
		return x.PartitionInfoList
	}
	return nil
}

type QueryReservationInfoRequest struct {
	state           protoimpl.MessageState `protogen:"open.v1"`
	Uid             uint32                 `protobuf:"varint,1,opt,name=uid,proto3" json:"uid,omitempty"`
	ReservationName string                 `protobuf:"bytes,2,opt,name=reservation_name,json=reservationName,proto3" json:"reservation_name,omitempty"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *QueryReservationInfoRequest) Reset() {
	*x = QueryReservationInfoRequest{}
	mi := &file_Crane_proto_msgTypes[38]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *QueryReservationInfoRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryReservationInfoRequest) ProtoMessage() {}

func (x *QueryReservationInfoRequest) ProtoReflect() protoreflect.Message {
	mi := &file_Crane_proto_msgTypes[38]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryReservationInfoRequest.ProtoReflect.Descriptor instead.
func (*QueryReservationInfoRequest) Descriptor() ([]byte, []int) {
	return file_Crane_proto_rawDescGZIP(), []int{38}
}

func (x *QueryReservationInfoRequest) GetUid() uint32 {
	if x != nil {
		return x.Uid
	}
	return 0
}

func (x *QueryReservationInfoRequest) GetReservationName() string {
	if x != nil {
		return x.ReservationName
	}
	return ""
}

type QueryReservationInfoReply struct {
	state               protoimpl.MessageState `protogen:"open.v1"`
	Ok                  bool                   `protobuf:"varint,1,opt,name=ok,proto3" json:"ok,omitempty"`
	Reason              string                 `protobuf:"bytes,2,opt,name=reason,proto3" json:"reason,omitempty"`
	ReservationInfoList []*ReservationInfo     `protobuf:"bytes,3,rep,name=reservation_info_list,json=reservationInfoList,proto3" json:"reservation_info_list,omitempty"`
	unknownFields       protoimpl.UnknownFields
	sizeCache           protoimpl.SizeCache
}

func (x *QueryReservationInfoReply) Reset() {
	*x = QueryReservationInfoReply{}
	mi := &file_Crane_proto_msgTypes[39]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *QueryReservationInfoReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryReservationInfoReply) ProtoMessage() {}

func (x *QueryReservationInfoReply) ProtoReflect() protoreflect.Message {
	mi := &file_Crane_proto_msgTypes[39]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryReservationInfoReply.ProtoReflect.Descriptor instead.
func (*QueryReservationInfoReply) Descriptor() ([]byte, []int) {
	return file_Crane_proto_rawDescGZIP(), []int{39}
}

func (x *QueryReservationInfoReply) GetOk() bool {
	if x != nil {
		return x.Ok
	}
	return false
}

func (x *QueryReservationInfoReply) GetReason() string {
	if x != nil {
		return x.Reason
	}
	return ""
}

func (x *QueryReservationInfoReply) GetReservationInfoList() []*ReservationInfo {
	if x != nil {
		return x.ReservationInfoList
	}
	return nil
}

type ModifyTaskRequest struct {
	state     protoimpl.MessageState             `protogen:"open.v1"`
	Uid       uint32                             `protobuf:"varint,1,opt,name=uid,proto3" json:"uid,omitempty"`
	TaskIds   []uint32                           `protobuf:"varint,2,rep,packed,name=task_ids,json=taskIds,proto3" json:"task_ids,omitempty"`
	Attribute ModifyTaskRequest_TargetAttributes `protobuf:"varint,3,opt,name=attribute,proto3,enum=crane.grpc.ModifyTaskRequest_TargetAttributes" json:"attribute,omitempty"`
	// Types that are valid to be assigned to Value:
	//
	//	*ModifyTaskRequest_TimeLimitSeconds
	//	*ModifyTaskRequest_MandatedPriority
	//	*ModifyTaskRequest_HoldSeconds
	Value         isModifyTaskRequest_Value `protobuf_oneof:"value"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ModifyTaskRequest) Reset() {
	*x = ModifyTaskRequest{}
	mi := &file_Crane_proto_msgTypes[40]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ModifyTaskRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ModifyTaskRequest) ProtoMessage() {}

func (x *ModifyTaskRequest) ProtoReflect() protoreflect.Message {
	mi := &file_Crane_proto_msgTypes[40]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ModifyTaskRequest.ProtoReflect.Descriptor instead.
func (*ModifyTaskRequest) Descriptor() ([]byte, []int) {
	return file_Crane_proto_rawDescGZIP(), []int{40}
}

func (x *ModifyTaskRequest) GetUid() uint32 {
	if x != nil {
		return x.Uid
	}
	return 0
}

func (x *ModifyTaskRequest) GetTaskIds() []uint32 {
	if x != nil {
		return x.TaskIds
	}
	return nil
}

func (x *ModifyTaskRequest) GetAttribute() ModifyTaskRequest_TargetAttributes {
	if x != nil {
		return x.Attribute
	}
	return ModifyTaskRequest_TimeLimit
}

func (x *ModifyTaskRequest) GetValue() isModifyTaskRequest_Value {
	if x != nil {
		return x.Value
	}
	return nil
}

func (x *ModifyTaskRequest) GetTimeLimitSeconds() int64 {
	if x != nil {
		if x, ok := x.Value.(*ModifyTaskRequest_TimeLimitSeconds); ok {
			return x.TimeLimitSeconds
		}
	}
	return 0
}

func (x *ModifyTaskRequest) GetMandatedPriority() float64 {
	if x != nil {
		if x, ok := x.Value.(*ModifyTaskRequest_MandatedPriority); ok {
			return x.MandatedPriority
		}
	}
	return 0
}

func (x *ModifyTaskRequest) GetHoldSeconds() int64 {
	if x != nil {
		if x, ok := x.Value.(*ModifyTaskRequest_HoldSeconds); ok {
			return x.HoldSeconds
		}
	}
	return 0
}

type isModifyTaskRequest_Value interface {
	isModifyTaskRequest_Value()
}

type ModifyTaskRequest_TimeLimitSeconds struct {
	TimeLimitSeconds int64 `protobuf:"varint,4,opt,name=time_limit_seconds,json=timeLimitSeconds,proto3,oneof"`
}

type ModifyTaskRequest_MandatedPriority struct {
	MandatedPriority float64 `protobuf:"fixed64,5,opt,name=mandated_priority,json=mandatedPriority,proto3,oneof"`
}

type ModifyTaskRequest_HoldSeconds struct {
	// If hold_seconds == 0, release the hold constraint timer if any exists;
	// If hold_seconds > 0, add or overwrite a hold constraint timer;
	// If hold_seconds == MaxInt64, add a hold constraint without timer.
	HoldSeconds int64 `protobuf:"varint,7,opt,name=hold_seconds,json=holdSeconds,proto3,oneof"`
}

func (*ModifyTaskRequest_TimeLimitSeconds) isModifyTaskRequest_Value() {}

func (*ModifyTaskRequest_MandatedPriority) isModifyTaskRequest_Value() {}

func (*ModifyTaskRequest_HoldSeconds) isModifyTaskRequest_Value() {}

type ModifyTaskReply struct {
	state              protoimpl.MessageState `protogen:"open.v1"`
	ModifiedTasks      []uint32               `protobuf:"varint,2,rep,packed,name=modified_tasks,json=modifiedTasks,proto3" json:"modified_tasks,omitempty"`
	NotModifiedTasks   []uint32               `protobuf:"varint,3,rep,packed,name=not_modified_tasks,json=notModifiedTasks,proto3" json:"not_modified_tasks,omitempty"`
	NotModifiedReasons []string               `protobuf:"bytes,4,rep,name=not_modified_reasons,json=notModifiedReasons,proto3" json:"not_modified_reasons,omitempty"`
	unknownFields      protoimpl.UnknownFields
	sizeCache          protoimpl.SizeCache
}

func (x *ModifyTaskReply) Reset() {
	*x = ModifyTaskReply{}
	mi := &file_Crane_proto_msgTypes[41]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ModifyTaskReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ModifyTaskReply) ProtoMessage() {}

func (x *ModifyTaskReply) ProtoReflect() protoreflect.Message {
	mi := &file_Crane_proto_msgTypes[41]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ModifyTaskReply.ProtoReflect.Descriptor instead.
func (*ModifyTaskReply) Descriptor() ([]byte, []int) {
	return file_Crane_proto_rawDescGZIP(), []int{41}
}

func (x *ModifyTaskReply) GetModifiedTasks() []uint32 {
	if x != nil {
		return x.ModifiedTasks
	}
	return nil
}

func (x *ModifyTaskReply) GetNotModifiedTasks() []uint32 {
	if x != nil {
		return x.NotModifiedTasks
	}
	return nil
}

func (x *ModifyTaskReply) GetNotModifiedReasons() []string {
	if x != nil {
		return x.NotModifiedReasons
	}
	return nil
}

type ModifyTasksExtraAttrsRequest struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	Uid            uint32                 `protobuf:"varint,1,opt,name=uid,proto3" json:"uid,omitempty"`
	ExtraAttrsList map[uint32]string      `protobuf:"bytes,2,rep,name=extra_attrs_list,json=extraAttrsList,proto3" json:"extra_attrs_list,omitempty" protobuf_key:"varint,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *ModifyTasksExtraAttrsRequest) Reset() {
	*x = ModifyTasksExtraAttrsRequest{}
	mi := &file_Crane_proto_msgTypes[42]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ModifyTasksExtraAttrsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ModifyTasksExtraAttrsRequest) ProtoMessage() {}

func (x *ModifyTasksExtraAttrsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_Crane_proto_msgTypes[42]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ModifyTasksExtraAttrsRequest.ProtoReflect.Descriptor instead.
func (*ModifyTasksExtraAttrsRequest) Descriptor() ([]byte, []int) {
	return file_Crane_proto_rawDescGZIP(), []int{42}
}

func (x *ModifyTasksExtraAttrsRequest) GetUid() uint32 {
	if x != nil {
		return x.Uid
	}
	return 0
}

func (x *ModifyTasksExtraAttrsRequest) GetExtraAttrsList() map[uint32]string {
	if x != nil {
		return x.ExtraAttrsList
	}
	return nil
}

type ModifyTasksExtraAttrsReply struct {
	state              protoimpl.MessageState `protogen:"open.v1"`
	ModifiedTasks      []uint32               `protobuf:"varint,1,rep,packed,name=modified_tasks,json=modifiedTasks,proto3" json:"modified_tasks,omitempty"`
	NotModifiedTasks   []uint32               `protobuf:"varint,2,rep,packed,name=not_modified_tasks,json=notModifiedTasks,proto3" json:"not_modified_tasks,omitempty"`
	NotModifiedReasons []string               `protobuf:"bytes,3,rep,name=not_modified_reasons,json=notModifiedReasons,proto3" json:"not_modified_reasons,omitempty"`
	unknownFields      protoimpl.UnknownFields
	sizeCache          protoimpl.SizeCache
}

func (x *ModifyTasksExtraAttrsReply) Reset() {
	*x = ModifyTasksExtraAttrsReply{}
	mi := &file_Crane_proto_msgTypes[43]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ModifyTasksExtraAttrsReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ModifyTasksExtraAttrsReply) ProtoMessage() {}

func (x *ModifyTasksExtraAttrsReply) ProtoReflect() protoreflect.Message {
	mi := &file_Crane_proto_msgTypes[43]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ModifyTasksExtraAttrsReply.ProtoReflect.Descriptor instead.
func (*ModifyTasksExtraAttrsReply) Descriptor() ([]byte, []int) {
	return file_Crane_proto_rawDescGZIP(), []int{43}
}

func (x *ModifyTasksExtraAttrsReply) GetModifiedTasks() []uint32 {
	if x != nil {
		return x.ModifiedTasks
	}
	return nil
}

func (x *ModifyTasksExtraAttrsReply) GetNotModifiedTasks() []uint32 {
	if x != nil {
		return x.NotModifiedTasks
	}
	return nil
}

func (x *ModifyTasksExtraAttrsReply) GetNotModifiedReasons() []string {
	if x != nil {
		return x.NotModifiedReasons
	}
	return nil
}

type ModifyCranedStateRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Uid           uint32                 `protobuf:"varint,1,opt,name=uid,proto3" json:"uid,omitempty"`
	CranedIds     []string               `protobuf:"bytes,2,rep,name=craned_ids,json=cranedIds,proto3" json:"craned_ids,omitempty"`
	NewState      CranedControlState     `protobuf:"varint,3,opt,name=new_state,json=newState,proto3,enum=crane.grpc.CranedControlState" json:"new_state,omitempty"`
	Reason        string                 `protobuf:"bytes,4,opt,name=reason,proto3" json:"reason,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ModifyCranedStateRequest) Reset() {
	*x = ModifyCranedStateRequest{}
	mi := &file_Crane_proto_msgTypes[44]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ModifyCranedStateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ModifyCranedStateRequest) ProtoMessage() {}

func (x *ModifyCranedStateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_Crane_proto_msgTypes[44]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ModifyCranedStateRequest.ProtoReflect.Descriptor instead.
func (*ModifyCranedStateRequest) Descriptor() ([]byte, []int) {
	return file_Crane_proto_rawDescGZIP(), []int{44}
}

func (x *ModifyCranedStateRequest) GetUid() uint32 {
	if x != nil {
		return x.Uid
	}
	return 0
}

func (x *ModifyCranedStateRequest) GetCranedIds() []string {
	if x != nil {
		return x.CranedIds
	}
	return nil
}

func (x *ModifyCranedStateRequest) GetNewState() CranedControlState {
	if x != nil {
		return x.NewState
	}
	return CranedControlState_CRANE_NONE
}

func (x *ModifyCranedStateRequest) GetReason() string {
	if x != nil {
		return x.Reason
	}
	return ""
}

type ModifyCranedStateReply struct {
	state              protoimpl.MessageState `protogen:"open.v1"`
	ModifiedNodes      []string               `protobuf:"bytes,2,rep,name=modified_nodes,json=modifiedNodes,proto3" json:"modified_nodes,omitempty"`
	NotModifiedNodes   []string               `protobuf:"bytes,3,rep,name=not_modified_nodes,json=notModifiedNodes,proto3" json:"not_modified_nodes,omitempty"`
	NotModifiedReasons []string               `protobuf:"bytes,4,rep,name=not_modified_reasons,json=notModifiedReasons,proto3" json:"not_modified_reasons,omitempty"`
	unknownFields      protoimpl.UnknownFields
	sizeCache          protoimpl.SizeCache
}

func (x *ModifyCranedStateReply) Reset() {
	*x = ModifyCranedStateReply{}
	mi := &file_Crane_proto_msgTypes[45]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ModifyCranedStateReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ModifyCranedStateReply) ProtoMessage() {}

func (x *ModifyCranedStateReply) ProtoReflect() protoreflect.Message {
	mi := &file_Crane_proto_msgTypes[45]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ModifyCranedStateReply.ProtoReflect.Descriptor instead.
func (*ModifyCranedStateReply) Descriptor() ([]byte, []int) {
	return file_Crane_proto_rawDescGZIP(), []int{45}
}

func (x *ModifyCranedStateReply) GetModifiedNodes() []string {
	if x != nil {
		return x.ModifiedNodes
	}
	return nil
}

func (x *ModifyCranedStateReply) GetNotModifiedNodes() []string {
	if x != nil {
		return x.NotModifiedNodes
	}
	return nil
}

func (x *ModifyCranedStateReply) GetNotModifiedReasons() []string {
	if x != nil {
		return x.NotModifiedReasons
	}
	return nil
}

type AddAccountRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Uid           uint32                 `protobuf:"varint,1,opt,name=uid,proto3" json:"uid,omitempty"`
	Account       *AccountInfo           `protobuf:"bytes,2,opt,name=account,proto3" json:"account,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AddAccountRequest) Reset() {
	*x = AddAccountRequest{}
	mi := &file_Crane_proto_msgTypes[46]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AddAccountRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddAccountRequest) ProtoMessage() {}

func (x *AddAccountRequest) ProtoReflect() protoreflect.Message {
	mi := &file_Crane_proto_msgTypes[46]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddAccountRequest.ProtoReflect.Descriptor instead.
func (*AddAccountRequest) Descriptor() ([]byte, []int) {
	return file_Crane_proto_rawDescGZIP(), []int{46}
}

func (x *AddAccountRequest) GetUid() uint32 {
	if x != nil {
		return x.Uid
	}
	return 0
}

func (x *AddAccountRequest) GetAccount() *AccountInfo {
	if x != nil {
		return x.Account
	}
	return nil
}

type AddAccountReply struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Ok            bool                   `protobuf:"varint,1,opt,name=ok,proto3" json:"ok,omitempty"`
	Code          ErrCode                `protobuf:"varint,2,opt,name=code,proto3,enum=crane.grpc.ErrCode" json:"code,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AddAccountReply) Reset() {
	*x = AddAccountReply{}
	mi := &file_Crane_proto_msgTypes[47]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AddAccountReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddAccountReply) ProtoMessage() {}

func (x *AddAccountReply) ProtoReflect() protoreflect.Message {
	mi := &file_Crane_proto_msgTypes[47]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddAccountReply.ProtoReflect.Descriptor instead.
func (*AddAccountReply) Descriptor() ([]byte, []int) {
	return file_Crane_proto_rawDescGZIP(), []int{47}
}

func (x *AddAccountReply) GetOk() bool {
	if x != nil {
		return x.Ok
	}
	return false
}

func (x *AddAccountReply) GetCode() ErrCode {
	if x != nil {
		return x.Code
	}
	return ErrCode_SUCCESS
}

type AddUserRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Uid           uint32                 `protobuf:"varint,1,opt,name=uid,proto3" json:"uid,omitempty"`
	User          *UserInfo              `protobuf:"bytes,2,opt,name=user,proto3" json:"user,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AddUserRequest) Reset() {
	*x = AddUserRequest{}
	mi := &file_Crane_proto_msgTypes[48]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AddUserRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddUserRequest) ProtoMessage() {}

func (x *AddUserRequest) ProtoReflect() protoreflect.Message {
	mi := &file_Crane_proto_msgTypes[48]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddUserRequest.ProtoReflect.Descriptor instead.
func (*AddUserRequest) Descriptor() ([]byte, []int) {
	return file_Crane_proto_rawDescGZIP(), []int{48}
}

func (x *AddUserRequest) GetUid() uint32 {
	if x != nil {
		return x.Uid
	}
	return 0
}

func (x *AddUserRequest) GetUser() *UserInfo {
	if x != nil {
		return x.User
	}
	return nil
}

type AddUserReply struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Ok            bool                   `protobuf:"varint,1,opt,name=ok,proto3" json:"ok,omitempty"`
	Code          ErrCode                `protobuf:"varint,2,opt,name=code,proto3,enum=crane.grpc.ErrCode" json:"code,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AddUserReply) Reset() {
	*x = AddUserReply{}
	mi := &file_Crane_proto_msgTypes[49]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AddUserReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddUserReply) ProtoMessage() {}

func (x *AddUserReply) ProtoReflect() protoreflect.Message {
	mi := &file_Crane_proto_msgTypes[49]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddUserReply.ProtoReflect.Descriptor instead.
func (*AddUserReply) Descriptor() ([]byte, []int) {
	return file_Crane_proto_rawDescGZIP(), []int{49}
}

func (x *AddUserReply) GetOk() bool {
	if x != nil {
		return x.Ok
	}
	return false
}

func (x *AddUserReply) GetCode() ErrCode {
	if x != nil {
		return x.Code
	}
	return ErrCode_SUCCESS
}

type AddQosRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Uid           uint32                 `protobuf:"varint,1,opt,name=uid,proto3" json:"uid,omitempty"`
	Qos           *QosInfo               `protobuf:"bytes,2,opt,name=qos,proto3" json:"qos,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AddQosRequest) Reset() {
	*x = AddQosRequest{}
	mi := &file_Crane_proto_msgTypes[50]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AddQosRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddQosRequest) ProtoMessage() {}

func (x *AddQosRequest) ProtoReflect() protoreflect.Message {
	mi := &file_Crane_proto_msgTypes[50]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddQosRequest.ProtoReflect.Descriptor instead.
func (*AddQosRequest) Descriptor() ([]byte, []int) {
	return file_Crane_proto_rawDescGZIP(), []int{50}
}

func (x *AddQosRequest) GetUid() uint32 {
	if x != nil {
		return x.Uid
	}
	return 0
}

func (x *AddQosRequest) GetQos() *QosInfo {
	if x != nil {
		return x.Qos
	}
	return nil
}

type AddQosReply struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Ok            bool                   `protobuf:"varint,1,opt,name=ok,proto3" json:"ok,omitempty"`
	Code          ErrCode                `protobuf:"varint,2,opt,name=code,proto3,enum=crane.grpc.ErrCode" json:"code,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AddQosReply) Reset() {
	*x = AddQosReply{}
	mi := &file_Crane_proto_msgTypes[51]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AddQosReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddQosReply) ProtoMessage() {}

func (x *AddQosReply) ProtoReflect() protoreflect.Message {
	mi := &file_Crane_proto_msgTypes[51]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddQosReply.ProtoReflect.Descriptor instead.
func (*AddQosReply) Descriptor() ([]byte, []int) {
	return file_Crane_proto_rawDescGZIP(), []int{51}
}

func (x *AddQosReply) GetOk() bool {
	if x != nil {
		return x.Ok
	}
	return false
}

func (x *AddQosReply) GetCode() ErrCode {
	if x != nil {
		return x.Code
	}
	return ErrCode_SUCCESS
}

type DeleteAccountRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Uid           uint32                 `protobuf:"varint,1,opt,name=uid,proto3" json:"uid,omitempty"`
	AccountList   []string               `protobuf:"bytes,2,rep,name=account_list,json=accountList,proto3" json:"account_list,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteAccountRequest) Reset() {
	*x = DeleteAccountRequest{}
	mi := &file_Crane_proto_msgTypes[52]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteAccountRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteAccountRequest) ProtoMessage() {}

func (x *DeleteAccountRequest) ProtoReflect() protoreflect.Message {
	mi := &file_Crane_proto_msgTypes[52]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteAccountRequest.ProtoReflect.Descriptor instead.
func (*DeleteAccountRequest) Descriptor() ([]byte, []int) {
	return file_Crane_proto_rawDescGZIP(), []int{52}
}

func (x *DeleteAccountRequest) GetUid() uint32 {
	if x != nil {
		return x.Uid
	}
	return 0
}

func (x *DeleteAccountRequest) GetAccountList() []string {
	if x != nil {
		return x.AccountList
	}
	return nil
}

type DeleteAccountReply struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Ok            bool                   `protobuf:"varint,1,opt,name=ok,proto3" json:"ok,omitempty"`
	RichErrorList []*RichError           `protobuf:"bytes,2,rep,name=rich_error_list,json=richErrorList,proto3" json:"rich_error_list,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteAccountReply) Reset() {
	*x = DeleteAccountReply{}
	mi := &file_Crane_proto_msgTypes[53]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteAccountReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteAccountReply) ProtoMessage() {}

func (x *DeleteAccountReply) ProtoReflect() protoreflect.Message {
	mi := &file_Crane_proto_msgTypes[53]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteAccountReply.ProtoReflect.Descriptor instead.
func (*DeleteAccountReply) Descriptor() ([]byte, []int) {
	return file_Crane_proto_rawDescGZIP(), []int{53}
}

func (x *DeleteAccountReply) GetOk() bool {
	if x != nil {
		return x.Ok
	}
	return false
}

func (x *DeleteAccountReply) GetRichErrorList() []*RichError {
	if x != nil {
		return x.RichErrorList
	}
	return nil
}

type DeleteUserRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Uid           uint32                 `protobuf:"varint,1,opt,name=uid,proto3" json:"uid,omitempty"`
	UserList      []string               `protobuf:"bytes,2,rep,name=user_list,json=userList,proto3" json:"user_list,omitempty"`
	Account       string                 `protobuf:"bytes,3,opt,name=account,proto3" json:"account,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteUserRequest) Reset() {
	*x = DeleteUserRequest{}
	mi := &file_Crane_proto_msgTypes[54]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteUserRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteUserRequest) ProtoMessage() {}

func (x *DeleteUserRequest) ProtoReflect() protoreflect.Message {
	mi := &file_Crane_proto_msgTypes[54]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteUserRequest.ProtoReflect.Descriptor instead.
func (*DeleteUserRequest) Descriptor() ([]byte, []int) {
	return file_Crane_proto_rawDescGZIP(), []int{54}
}

func (x *DeleteUserRequest) GetUid() uint32 {
	if x != nil {
		return x.Uid
	}
	return 0
}

func (x *DeleteUserRequest) GetUserList() []string {
	if x != nil {
		return x.UserList
	}
	return nil
}

func (x *DeleteUserRequest) GetAccount() string {
	if x != nil {
		return x.Account
	}
	return ""
}

type DeleteUserReply struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Ok            bool                   `protobuf:"varint,1,opt,name=ok,proto3" json:"ok,omitempty"`
	RichErrorList []*RichError           `protobuf:"bytes,2,rep,name=rich_error_list,json=richErrorList,proto3" json:"rich_error_list,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteUserReply) Reset() {
	*x = DeleteUserReply{}
	mi := &file_Crane_proto_msgTypes[55]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteUserReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteUserReply) ProtoMessage() {}

func (x *DeleteUserReply) ProtoReflect() protoreflect.Message {
	mi := &file_Crane_proto_msgTypes[55]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteUserReply.ProtoReflect.Descriptor instead.
func (*DeleteUserReply) Descriptor() ([]byte, []int) {
	return file_Crane_proto_rawDescGZIP(), []int{55}
}

func (x *DeleteUserReply) GetOk() bool {
	if x != nil {
		return x.Ok
	}
	return false
}

func (x *DeleteUserReply) GetRichErrorList() []*RichError {
	if x != nil {
		return x.RichErrorList
	}
	return nil
}

type DeleteQosRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Uid           uint32                 `protobuf:"varint,1,opt,name=uid,proto3" json:"uid,omitempty"`
	QosList       []string               `protobuf:"bytes,2,rep,name=qos_list,json=qosList,proto3" json:"qos_list,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteQosRequest) Reset() {
	*x = DeleteQosRequest{}
	mi := &file_Crane_proto_msgTypes[56]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteQosRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteQosRequest) ProtoMessage() {}

func (x *DeleteQosRequest) ProtoReflect() protoreflect.Message {
	mi := &file_Crane_proto_msgTypes[56]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteQosRequest.ProtoReflect.Descriptor instead.
func (*DeleteQosRequest) Descriptor() ([]byte, []int) {
	return file_Crane_proto_rawDescGZIP(), []int{56}
}

func (x *DeleteQosRequest) GetUid() uint32 {
	if x != nil {
		return x.Uid
	}
	return 0
}

func (x *DeleteQosRequest) GetQosList() []string {
	if x != nil {
		return x.QosList
	}
	return nil
}

type DeleteQosReply struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Ok            bool                   `protobuf:"varint,1,opt,name=ok,proto3" json:"ok,omitempty"`
	RichErrorList []*RichError           `protobuf:"bytes,2,rep,name=rich_error_list,json=richErrorList,proto3" json:"rich_error_list,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteQosReply) Reset() {
	*x = DeleteQosReply{}
	mi := &file_Crane_proto_msgTypes[57]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteQosReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteQosReply) ProtoMessage() {}

func (x *DeleteQosReply) ProtoReflect() protoreflect.Message {
	mi := &file_Crane_proto_msgTypes[57]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteQosReply.ProtoReflect.Descriptor instead.
func (*DeleteQosReply) Descriptor() ([]byte, []int) {
	return file_Crane_proto_rawDescGZIP(), []int{57}
}

func (x *DeleteQosReply) GetOk() bool {
	if x != nil {
		return x.Ok
	}
	return false
}

func (x *DeleteQosReply) GetRichErrorList() []*RichError {
	if x != nil {
		return x.RichErrorList
	}
	return nil
}

type ModifyAccountRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Uid           uint32                 `protobuf:"varint,1,opt,name=uid,proto3" json:"uid,omitempty"`
	ModifyField   ModifyField            `protobuf:"varint,2,opt,name=modify_field,json=modifyField,proto3,enum=crane.grpc.ModifyField" json:"modify_field,omitempty"` // modify item field
	ValueList     []string               `protobuf:"bytes,3,rep,name=value_list,json=valueList,proto3" json:"value_list,omitempty"`                                    // new value
	Name          string                 `protobuf:"bytes,4,opt,name=name,proto3" json:"name,omitempty"`
	Type          OperationType          `protobuf:"varint,5,opt,name=type,proto3,enum=crane.grpc.OperationType" json:"type,omitempty"`
	Force         bool                   `protobuf:"varint,6,opt,name=force,proto3" json:"force,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ModifyAccountRequest) Reset() {
	*x = ModifyAccountRequest{}
	mi := &file_Crane_proto_msgTypes[58]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ModifyAccountRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ModifyAccountRequest) ProtoMessage() {}

func (x *ModifyAccountRequest) ProtoReflect() protoreflect.Message {
	mi := &file_Crane_proto_msgTypes[58]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ModifyAccountRequest.ProtoReflect.Descriptor instead.
func (*ModifyAccountRequest) Descriptor() ([]byte, []int) {
	return file_Crane_proto_rawDescGZIP(), []int{58}
}

func (x *ModifyAccountRequest) GetUid() uint32 {
	if x != nil {
		return x.Uid
	}
	return 0
}

func (x *ModifyAccountRequest) GetModifyField() ModifyField {
	if x != nil {
		return x.ModifyField
	}
	return ModifyField_Partition
}

func (x *ModifyAccountRequest) GetValueList() []string {
	if x != nil {
		return x.ValueList
	}
	return nil
}

func (x *ModifyAccountRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *ModifyAccountRequest) GetType() OperationType {
	if x != nil {
		return x.Type
	}
	return OperationType_Overwrite
}

func (x *ModifyAccountRequest) GetForce() bool {
	if x != nil {
		return x.Force
	}
	return false
}

type ModifyAccountReply struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Ok            bool                   `protobuf:"varint,1,opt,name=ok,proto3" json:"ok,omitempty"`
	RichErrorList []*RichError           `protobuf:"bytes,2,rep,name=rich_error_list,json=richErrorList,proto3" json:"rich_error_list,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ModifyAccountReply) Reset() {
	*x = ModifyAccountReply{}
	mi := &file_Crane_proto_msgTypes[59]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ModifyAccountReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ModifyAccountReply) ProtoMessage() {}

func (x *ModifyAccountReply) ProtoReflect() protoreflect.Message {
	mi := &file_Crane_proto_msgTypes[59]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ModifyAccountReply.ProtoReflect.Descriptor instead.
func (*ModifyAccountReply) Descriptor() ([]byte, []int) {
	return file_Crane_proto_rawDescGZIP(), []int{59}
}

func (x *ModifyAccountReply) GetOk() bool {
	if x != nil {
		return x.Ok
	}
	return false
}

func (x *ModifyAccountReply) GetRichErrorList() []*RichError {
	if x != nil {
		return x.RichErrorList
	}
	return nil
}

type ModifyUserRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Uid           uint32                 `protobuf:"varint,1,opt,name=uid,proto3" json:"uid,omitempty"`
	ModifyField   ModifyField            `protobuf:"varint,2,opt,name=modify_field,json=modifyField,proto3,enum=crane.grpc.ModifyField" json:"modify_field,omitempty"` // modify item field
	ValueList     []string               `protobuf:"bytes,3,rep,name=value_list,json=valueList,proto3" json:"value_list,omitempty"`                                    // new value
	Name          string                 `protobuf:"bytes,4,opt,name=name,proto3" json:"name,omitempty"`
	Partition     string                 `protobuf:"bytes,5,opt,name=partition,proto3" json:"partition,omitempty"`
	Type          OperationType          `protobuf:"varint,6,opt,name=type,proto3,enum=crane.grpc.OperationType" json:"type,omitempty"`
	Account       string                 `protobuf:"bytes,8,opt,name=account,proto3" json:"account,omitempty"`
	Force         bool                   `protobuf:"varint,9,opt,name=force,proto3" json:"force,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ModifyUserRequest) Reset() {
	*x = ModifyUserRequest{}
	mi := &file_Crane_proto_msgTypes[60]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ModifyUserRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ModifyUserRequest) ProtoMessage() {}

func (x *ModifyUserRequest) ProtoReflect() protoreflect.Message {
	mi := &file_Crane_proto_msgTypes[60]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ModifyUserRequest.ProtoReflect.Descriptor instead.
func (*ModifyUserRequest) Descriptor() ([]byte, []int) {
	return file_Crane_proto_rawDescGZIP(), []int{60}
}

func (x *ModifyUserRequest) GetUid() uint32 {
	if x != nil {
		return x.Uid
	}
	return 0
}

func (x *ModifyUserRequest) GetModifyField() ModifyField {
	if x != nil {
		return x.ModifyField
	}
	return ModifyField_Partition
}

func (x *ModifyUserRequest) GetValueList() []string {
	if x != nil {
		return x.ValueList
	}
	return nil
}

func (x *ModifyUserRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *ModifyUserRequest) GetPartition() string {
	if x != nil {
		return x.Partition
	}
	return ""
}

func (x *ModifyUserRequest) GetType() OperationType {
	if x != nil {
		return x.Type
	}
	return OperationType_Overwrite
}

func (x *ModifyUserRequest) GetAccount() string {
	if x != nil {
		return x.Account
	}
	return ""
}

func (x *ModifyUserRequest) GetForce() bool {
	if x != nil {
		return x.Force
	}
	return false
}

type ModifyUserReply struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Ok            bool                   `protobuf:"varint,1,opt,name=ok,proto3" json:"ok,omitempty"`
	RichErrorList []*RichError           `protobuf:"bytes,2,rep,name=rich_error_list,json=richErrorList,proto3" json:"rich_error_list,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ModifyUserReply) Reset() {
	*x = ModifyUserReply{}
	mi := &file_Crane_proto_msgTypes[61]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ModifyUserReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ModifyUserReply) ProtoMessage() {}

func (x *ModifyUserReply) ProtoReflect() protoreflect.Message {
	mi := &file_Crane_proto_msgTypes[61]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ModifyUserReply.ProtoReflect.Descriptor instead.
func (*ModifyUserReply) Descriptor() ([]byte, []int) {
	return file_Crane_proto_rawDescGZIP(), []int{61}
}

func (x *ModifyUserReply) GetOk() bool {
	if x != nil {
		return x.Ok
	}
	return false
}

func (x *ModifyUserReply) GetRichErrorList() []*RichError {
	if x != nil {
		return x.RichErrorList
	}
	return nil
}

type ModifyQosRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Uid           uint32                 `protobuf:"varint,1,opt,name=uid,proto3" json:"uid,omitempty"`
	ModifyField   ModifyField            `protobuf:"varint,2,opt,name=modify_field,json=modifyField,proto3,enum=crane.grpc.ModifyField" json:"modify_field,omitempty"` // modify item field
	Value         string                 `protobuf:"bytes,3,opt,name=value,proto3" json:"value,omitempty"`                                                             // new value
	Name          string                 `protobuf:"bytes,4,opt,name=name,proto3" json:"name,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ModifyQosRequest) Reset() {
	*x = ModifyQosRequest{}
	mi := &file_Crane_proto_msgTypes[62]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ModifyQosRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ModifyQosRequest) ProtoMessage() {}

func (x *ModifyQosRequest) ProtoReflect() protoreflect.Message {
	mi := &file_Crane_proto_msgTypes[62]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ModifyQosRequest.ProtoReflect.Descriptor instead.
func (*ModifyQosRequest) Descriptor() ([]byte, []int) {
	return file_Crane_proto_rawDescGZIP(), []int{62}
}

func (x *ModifyQosRequest) GetUid() uint32 {
	if x != nil {
		return x.Uid
	}
	return 0
}

func (x *ModifyQosRequest) GetModifyField() ModifyField {
	if x != nil {
		return x.ModifyField
	}
	return ModifyField_Partition
}

func (x *ModifyQosRequest) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

func (x *ModifyQosRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type ModifyQosReply struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Ok            bool                   `protobuf:"varint,1,opt,name=ok,proto3" json:"ok,omitempty"`
	Code          ErrCode                `protobuf:"varint,2,opt,name=code,proto3,enum=crane.grpc.ErrCode" json:"code,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ModifyQosReply) Reset() {
	*x = ModifyQosReply{}
	mi := &file_Crane_proto_msgTypes[63]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ModifyQosReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ModifyQosReply) ProtoMessage() {}

func (x *ModifyQosReply) ProtoReflect() protoreflect.Message {
	mi := &file_Crane_proto_msgTypes[63]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ModifyQosReply.ProtoReflect.Descriptor instead.
func (*ModifyQosReply) Descriptor() ([]byte, []int) {
	return file_Crane_proto_rawDescGZIP(), []int{63}
}

func (x *ModifyQosReply) GetOk() bool {
	if x != nil {
		return x.Ok
	}
	return false
}

func (x *ModifyQosReply) GetCode() ErrCode {
	if x != nil {
		return x.Code
	}
	return ErrCode_SUCCESS
}

type QueryAccountInfoRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Uid           uint32                 `protobuf:"varint,1,opt,name=uid,proto3" json:"uid,omitempty"`
	AccountList   []string               `protobuf:"bytes,2,rep,name=account_list,json=accountList,proto3" json:"account_list,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *QueryAccountInfoRequest) Reset() {
	*x = QueryAccountInfoRequest{}
	mi := &file_Crane_proto_msgTypes[64]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *QueryAccountInfoRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryAccountInfoRequest) ProtoMessage() {}

func (x *QueryAccountInfoRequest) ProtoReflect() protoreflect.Message {
	mi := &file_Crane_proto_msgTypes[64]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryAccountInfoRequest.ProtoReflect.Descriptor instead.
func (*QueryAccountInfoRequest) Descriptor() ([]byte, []int) {
	return file_Crane_proto_rawDescGZIP(), []int{64}
}

func (x *QueryAccountInfoRequest) GetUid() uint32 {
	if x != nil {
		return x.Uid
	}
	return 0
}

func (x *QueryAccountInfoRequest) GetAccountList() []string {
	if x != nil {
		return x.AccountList
	}
	return nil
}

type QueryAccountInfoReply struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Ok            bool                   `protobuf:"varint,1,opt,name=ok,proto3" json:"ok,omitempty"`
	AccountList   []*AccountInfo         `protobuf:"bytes,2,rep,name=account_list,json=accountList,proto3" json:"account_list,omitempty"`
	RichErrorList []*RichError           `protobuf:"bytes,3,rep,name=rich_error_list,json=richErrorList,proto3" json:"rich_error_list,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *QueryAccountInfoReply) Reset() {
	*x = QueryAccountInfoReply{}
	mi := &file_Crane_proto_msgTypes[65]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *QueryAccountInfoReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryAccountInfoReply) ProtoMessage() {}

func (x *QueryAccountInfoReply) ProtoReflect() protoreflect.Message {
	mi := &file_Crane_proto_msgTypes[65]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryAccountInfoReply.ProtoReflect.Descriptor instead.
func (*QueryAccountInfoReply) Descriptor() ([]byte, []int) {
	return file_Crane_proto_rawDescGZIP(), []int{65}
}

func (x *QueryAccountInfoReply) GetOk() bool {
	if x != nil {
		return x.Ok
	}
	return false
}

func (x *QueryAccountInfoReply) GetAccountList() []*AccountInfo {
	if x != nil {
		return x.AccountList
	}
	return nil
}

func (x *QueryAccountInfoReply) GetRichErrorList() []*RichError {
	if x != nil {
		return x.RichErrorList
	}
	return nil
}

type QueryUserInfoRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Uid           uint32                 `protobuf:"varint,1,opt,name=uid,proto3" json:"uid,omitempty"`
	UserList      []string               `protobuf:"bytes,2,rep,name=user_list,json=userList,proto3" json:"user_list,omitempty"`
	Account       string                 `protobuf:"bytes,3,opt,name=account,proto3" json:"account,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *QueryUserInfoRequest) Reset() {
	*x = QueryUserInfoRequest{}
	mi := &file_Crane_proto_msgTypes[66]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *QueryUserInfoRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryUserInfoRequest) ProtoMessage() {}

func (x *QueryUserInfoRequest) ProtoReflect() protoreflect.Message {
	mi := &file_Crane_proto_msgTypes[66]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryUserInfoRequest.ProtoReflect.Descriptor instead.
func (*QueryUserInfoRequest) Descriptor() ([]byte, []int) {
	return file_Crane_proto_rawDescGZIP(), []int{66}
}

func (x *QueryUserInfoRequest) GetUid() uint32 {
	if x != nil {
		return x.Uid
	}
	return 0
}

func (x *QueryUserInfoRequest) GetUserList() []string {
	if x != nil {
		return x.UserList
	}
	return nil
}

func (x *QueryUserInfoRequest) GetAccount() string {
	if x != nil {
		return x.Account
	}
	return ""
}

type QueryUserInfoReply struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Ok            bool                   `protobuf:"varint,1,opt,name=ok,proto3" json:"ok,omitempty"`
	UserList      []*UserInfo            `protobuf:"bytes,2,rep,name=user_list,json=userList,proto3" json:"user_list,omitempty"`
	RichErrorList []*RichError           `protobuf:"bytes,3,rep,name=rich_error_list,json=richErrorList,proto3" json:"rich_error_list,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *QueryUserInfoReply) Reset() {
	*x = QueryUserInfoReply{}
	mi := &file_Crane_proto_msgTypes[67]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *QueryUserInfoReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryUserInfoReply) ProtoMessage() {}

func (x *QueryUserInfoReply) ProtoReflect() protoreflect.Message {
	mi := &file_Crane_proto_msgTypes[67]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryUserInfoReply.ProtoReflect.Descriptor instead.
func (*QueryUserInfoReply) Descriptor() ([]byte, []int) {
	return file_Crane_proto_rawDescGZIP(), []int{67}
}

func (x *QueryUserInfoReply) GetOk() bool {
	if x != nil {
		return x.Ok
	}
	return false
}

func (x *QueryUserInfoReply) GetUserList() []*UserInfo {
	if x != nil {
		return x.UserList
	}
	return nil
}

func (x *QueryUserInfoReply) GetRichErrorList() []*RichError {
	if x != nil {
		return x.RichErrorList
	}
	return nil
}

type QueryQosInfoRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Uid           uint32                 `protobuf:"varint,1,opt,name=uid,proto3" json:"uid,omitempty"`
	QosList       []string               `protobuf:"bytes,2,rep,name=qos_list,json=qosList,proto3" json:"qos_list,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *QueryQosInfoRequest) Reset() {
	*x = QueryQosInfoRequest{}
	mi := &file_Crane_proto_msgTypes[68]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *QueryQosInfoRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryQosInfoRequest) ProtoMessage() {}

func (x *QueryQosInfoRequest) ProtoReflect() protoreflect.Message {
	mi := &file_Crane_proto_msgTypes[68]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryQosInfoRequest.ProtoReflect.Descriptor instead.
func (*QueryQosInfoRequest) Descriptor() ([]byte, []int) {
	return file_Crane_proto_rawDescGZIP(), []int{68}
}

func (x *QueryQosInfoRequest) GetUid() uint32 {
	if x != nil {
		return x.Uid
	}
	return 0
}

func (x *QueryQosInfoRequest) GetQosList() []string {
	if x != nil {
		return x.QosList
	}
	return nil
}

type QueryQosInfoReply struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Ok            bool                   `protobuf:"varint,1,opt,name=ok,proto3" json:"ok,omitempty"`
	QosList       []*QosInfo             `protobuf:"bytes,2,rep,name=qos_list,json=qosList,proto3" json:"qos_list,omitempty"`
	RichErrorList []*RichError           `protobuf:"bytes,3,rep,name=rich_error_list,json=richErrorList,proto3" json:"rich_error_list,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *QueryQosInfoReply) Reset() {
	*x = QueryQosInfoReply{}
	mi := &file_Crane_proto_msgTypes[69]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *QueryQosInfoReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryQosInfoReply) ProtoMessage() {}

func (x *QueryQosInfoReply) ProtoReflect() protoreflect.Message {
	mi := &file_Crane_proto_msgTypes[69]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryQosInfoReply.ProtoReflect.Descriptor instead.
func (*QueryQosInfoReply) Descriptor() ([]byte, []int) {
	return file_Crane_proto_rawDescGZIP(), []int{69}
}

func (x *QueryQosInfoReply) GetOk() bool {
	if x != nil {
		return x.Ok
	}
	return false
}

func (x *QueryQosInfoReply) GetQosList() []*QosInfo {
	if x != nil {
		return x.QosList
	}
	return nil
}

func (x *QueryQosInfoReply) GetRichErrorList() []*RichError {
	if x != nil {
		return x.RichErrorList
	}
	return nil
}

type BlockAccountOrUserRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Uid           uint32                 `protobuf:"varint,1,opt,name=uid,proto3" json:"uid,omitempty"`
	Block         bool                   `protobuf:"varint,2,opt,name=block,proto3" json:"block,omitempty"`
	EntityType    EntityType             `protobuf:"varint,3,opt,name=entity_type,json=entityType,proto3,enum=crane.grpc.EntityType" json:"entity_type,omitempty"`
	EntityList    []string               `protobuf:"bytes,4,rep,name=entity_list,json=entityList,proto3" json:"entity_list,omitempty"`
	Account       string                 `protobuf:"bytes,5,opt,name=account,proto3" json:"account,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *BlockAccountOrUserRequest) Reset() {
	*x = BlockAccountOrUserRequest{}
	mi := &file_Crane_proto_msgTypes[70]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BlockAccountOrUserRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BlockAccountOrUserRequest) ProtoMessage() {}

func (x *BlockAccountOrUserRequest) ProtoReflect() protoreflect.Message {
	mi := &file_Crane_proto_msgTypes[70]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BlockAccountOrUserRequest.ProtoReflect.Descriptor instead.
func (*BlockAccountOrUserRequest) Descriptor() ([]byte, []int) {
	return file_Crane_proto_rawDescGZIP(), []int{70}
}

func (x *BlockAccountOrUserRequest) GetUid() uint32 {
	if x != nil {
		return x.Uid
	}
	return 0
}

func (x *BlockAccountOrUserRequest) GetBlock() bool {
	if x != nil {
		return x.Block
	}
	return false
}

func (x *BlockAccountOrUserRequest) GetEntityType() EntityType {
	if x != nil {
		return x.EntityType
	}
	return EntityType_Account
}

func (x *BlockAccountOrUserRequest) GetEntityList() []string {
	if x != nil {
		return x.EntityList
	}
	return nil
}

func (x *BlockAccountOrUserRequest) GetAccount() string {
	if x != nil {
		return x.Account
	}
	return ""
}

type BlockAccountOrUserReply struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Ok            bool                   `protobuf:"varint,1,opt,name=ok,proto3" json:"ok,omitempty"`
	RichErrorList []*RichError           `protobuf:"bytes,2,rep,name=rich_error_list,json=richErrorList,proto3" json:"rich_error_list,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *BlockAccountOrUserReply) Reset() {
	*x = BlockAccountOrUserReply{}
	mi := &file_Crane_proto_msgTypes[71]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BlockAccountOrUserReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BlockAccountOrUserReply) ProtoMessage() {}

func (x *BlockAccountOrUserReply) ProtoReflect() protoreflect.Message {
	mi := &file_Crane_proto_msgTypes[71]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BlockAccountOrUserReply.ProtoReflect.Descriptor instead.
func (*BlockAccountOrUserReply) Descriptor() ([]byte, []int) {
	return file_Crane_proto_rawDescGZIP(), []int{71}
}

func (x *BlockAccountOrUserReply) GetOk() bool {
	if x != nil {
		return x.Ok
	}
	return false
}

func (x *BlockAccountOrUserReply) GetRichErrorList() []*RichError {
	if x != nil {
		return x.RichErrorList
	}
	return nil
}

type ModifyPartitionAclRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Uid           uint32                 `protobuf:"varint,1,opt,name=uid,proto3" json:"uid,omitempty"`
	Partition     string                 `protobuf:"bytes,2,opt,name=partition,proto3" json:"partition,omitempty"`
	IsAllowedList bool                   `protobuf:"varint,3,opt,name=is_allowed_list,json=isAllowedList,proto3" json:"is_allowed_list,omitempty"`
	Accounts      []string               `protobuf:"bytes,4,rep,name=accounts,proto3" json:"accounts,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ModifyPartitionAclRequest) Reset() {
	*x = ModifyPartitionAclRequest{}
	mi := &file_Crane_proto_msgTypes[72]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ModifyPartitionAclRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ModifyPartitionAclRequest) ProtoMessage() {}

func (x *ModifyPartitionAclRequest) ProtoReflect() protoreflect.Message {
	mi := &file_Crane_proto_msgTypes[72]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ModifyPartitionAclRequest.ProtoReflect.Descriptor instead.
func (*ModifyPartitionAclRequest) Descriptor() ([]byte, []int) {
	return file_Crane_proto_rawDescGZIP(), []int{72}
}

func (x *ModifyPartitionAclRequest) GetUid() uint32 {
	if x != nil {
		return x.Uid
	}
	return 0
}

func (x *ModifyPartitionAclRequest) GetPartition() string {
	if x != nil {
		return x.Partition
	}
	return ""
}

func (x *ModifyPartitionAclRequest) GetIsAllowedList() bool {
	if x != nil {
		return x.IsAllowedList
	}
	return false
}

func (x *ModifyPartitionAclRequest) GetAccounts() []string {
	if x != nil {
		return x.Accounts
	}
	return nil
}

type ModifyPartitionAclReply struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Ok            bool                   `protobuf:"varint,1,opt,name=ok,proto3" json:"ok,omitempty"`
	Code          ErrCode                `protobuf:"varint,2,opt,name=code,proto3,enum=crane.grpc.ErrCode" json:"code,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ModifyPartitionAclReply) Reset() {
	*x = ModifyPartitionAclReply{}
	mi := &file_Crane_proto_msgTypes[73]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ModifyPartitionAclReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ModifyPartitionAclReply) ProtoMessage() {}

func (x *ModifyPartitionAclReply) ProtoReflect() protoreflect.Message {
	mi := &file_Crane_proto_msgTypes[73]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ModifyPartitionAclReply.ProtoReflect.Descriptor instead.
func (*ModifyPartitionAclReply) Descriptor() ([]byte, []int) {
	return file_Crane_proto_rawDescGZIP(), []int{73}
}

func (x *ModifyPartitionAclReply) GetOk() bool {
	if x != nil {
		return x.Ok
	}
	return false
}

func (x *ModifyPartitionAclReply) GetCode() ErrCode {
	if x != nil {
		return x.Code
	}
	return ErrCode_SUCCESS
}

type MigrateSshProcToCgroupRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Pid           int32                  `protobuf:"varint,1,opt,name=pid,proto3" json:"pid,omitempty"`
	TaskId        uint32                 `protobuf:"varint,2,opt,name=task_id,json=taskId,proto3" json:"task_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *MigrateSshProcToCgroupRequest) Reset() {
	*x = MigrateSshProcToCgroupRequest{}
	mi := &file_Crane_proto_msgTypes[74]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MigrateSshProcToCgroupRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MigrateSshProcToCgroupRequest) ProtoMessage() {}

func (x *MigrateSshProcToCgroupRequest) ProtoReflect() protoreflect.Message {
	mi := &file_Crane_proto_msgTypes[74]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MigrateSshProcToCgroupRequest.ProtoReflect.Descriptor instead.
func (*MigrateSshProcToCgroupRequest) Descriptor() ([]byte, []int) {
	return file_Crane_proto_rawDescGZIP(), []int{74}
}

func (x *MigrateSshProcToCgroupRequest) GetPid() int32 {
	if x != nil {
		return x.Pid
	}
	return 0
}

func (x *MigrateSshProcToCgroupRequest) GetTaskId() uint32 {
	if x != nil {
		return x.TaskId
	}
	return 0
}

type MigrateSshProcToCgroupReply struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Ok            bool                   `protobuf:"varint,1,opt,name=ok,proto3" json:"ok,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *MigrateSshProcToCgroupReply) Reset() {
	*x = MigrateSshProcToCgroupReply{}
	mi := &file_Crane_proto_msgTypes[75]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MigrateSshProcToCgroupReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MigrateSshProcToCgroupReply) ProtoMessage() {}

func (x *MigrateSshProcToCgroupReply) ProtoReflect() protoreflect.Message {
	mi := &file_Crane_proto_msgTypes[75]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MigrateSshProcToCgroupReply.ProtoReflect.Descriptor instead.
func (*MigrateSshProcToCgroupReply) Descriptor() ([]byte, []int) {
	return file_Crane_proto_rawDescGZIP(), []int{75}
}

func (x *MigrateSshProcToCgroupReply) GetOk() bool {
	if x != nil {
		return x.Ok
	}
	return false
}

type QuerySshStepEnvVariablesRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	TaskId        uint32                 `protobuf:"varint,1,opt,name=task_id,json=taskId,proto3" json:"task_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *QuerySshStepEnvVariablesRequest) Reset() {
	*x = QuerySshStepEnvVariablesRequest{}
	mi := &file_Crane_proto_msgTypes[76]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *QuerySshStepEnvVariablesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QuerySshStepEnvVariablesRequest) ProtoMessage() {}

func (x *QuerySshStepEnvVariablesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_Crane_proto_msgTypes[76]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QuerySshStepEnvVariablesRequest.ProtoReflect.Descriptor instead.
func (*QuerySshStepEnvVariablesRequest) Descriptor() ([]byte, []int) {
	return file_Crane_proto_rawDescGZIP(), []int{76}
}

func (x *QuerySshStepEnvVariablesRequest) GetTaskId() uint32 {
	if x != nil {
		return x.TaskId
	}
	return 0
}

type QuerySshStepEnvVariablesReply struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Ok            bool                   `protobuf:"varint,1,opt,name=ok,proto3" json:"ok,omitempty"`
	EnvMap        map[string]string      `protobuf:"bytes,2,rep,name=env_map,json=envMap,proto3" json:"env_map,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *QuerySshStepEnvVariablesReply) Reset() {
	*x = QuerySshStepEnvVariablesReply{}
	mi := &file_Crane_proto_msgTypes[77]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *QuerySshStepEnvVariablesReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QuerySshStepEnvVariablesReply) ProtoMessage() {}

func (x *QuerySshStepEnvVariablesReply) ProtoReflect() protoreflect.Message {
	mi := &file_Crane_proto_msgTypes[77]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QuerySshStepEnvVariablesReply.ProtoReflect.Descriptor instead.
func (*QuerySshStepEnvVariablesReply) Descriptor() ([]byte, []int) {
	return file_Crane_proto_rawDescGZIP(), []int{77}
}

func (x *QuerySshStepEnvVariablesReply) GetOk() bool {
	if x != nil {
		return x.Ok
	}
	return false
}

func (x *QuerySshStepEnvVariablesReply) GetEnvMap() map[string]string {
	if x != nil {
		return x.EnvMap
	}
	return nil
}

type QuerySshStepEnvVariablesForwardRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	TaskId        uint32                 `protobuf:"varint,1,opt,name=task_id,json=taskId,proto3" json:"task_id,omitempty"`
	ExecutionNode string                 `protobuf:"bytes,2,opt,name=execution_node,json=executionNode,proto3" json:"execution_node,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *QuerySshStepEnvVariablesForwardRequest) Reset() {
	*x = QuerySshStepEnvVariablesForwardRequest{}
	mi := &file_Crane_proto_msgTypes[78]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *QuerySshStepEnvVariablesForwardRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QuerySshStepEnvVariablesForwardRequest) ProtoMessage() {}

func (x *QuerySshStepEnvVariablesForwardRequest) ProtoReflect() protoreflect.Message {
	mi := &file_Crane_proto_msgTypes[78]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QuerySshStepEnvVariablesForwardRequest.ProtoReflect.Descriptor instead.
func (*QuerySshStepEnvVariablesForwardRequest) Descriptor() ([]byte, []int) {
	return file_Crane_proto_rawDescGZIP(), []int{78}
}

func (x *QuerySshStepEnvVariablesForwardRequest) GetTaskId() uint32 {
	if x != nil {
		return x.TaskId
	}
	return 0
}

func (x *QuerySshStepEnvVariablesForwardRequest) GetExecutionNode() string {
	if x != nil {
		return x.ExecutionNode
	}
	return ""
}

type QuerySshStepEnvVariablesForwardReply struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Ok            bool                   `protobuf:"varint,1,opt,name=ok,proto3" json:"ok,omitempty"`
	EnvMap        map[string]string      `protobuf:"bytes,2,rep,name=env_map,json=envMap,proto3" json:"env_map,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *QuerySshStepEnvVariablesForwardReply) Reset() {
	*x = QuerySshStepEnvVariablesForwardReply{}
	mi := &file_Crane_proto_msgTypes[79]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *QuerySshStepEnvVariablesForwardReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QuerySshStepEnvVariablesForwardReply) ProtoMessage() {}

func (x *QuerySshStepEnvVariablesForwardReply) ProtoReflect() protoreflect.Message {
	mi := &file_Crane_proto_msgTypes[79]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QuerySshStepEnvVariablesForwardReply.ProtoReflect.Descriptor instead.
func (*QuerySshStepEnvVariablesForwardReply) Descriptor() ([]byte, []int) {
	return file_Crane_proto_rawDescGZIP(), []int{79}
}

func (x *QuerySshStepEnvVariablesForwardReply) GetOk() bool {
	if x != nil {
		return x.Ok
	}
	return false
}

func (x *QuerySshStepEnvVariablesForwardReply) GetEnvMap() map[string]string {
	if x != nil {
		return x.EnvMap
	}
	return nil
}

type QueryClusterInfoRequest struct {
	state                      protoimpl.MessageState `protogen:"open.v1"`
	FilterPartitions           []string               `protobuf:"bytes,1,rep,name=filter_partitions,json=filterPartitions,proto3" json:"filter_partitions,omitempty"`
	FilterNodes                []string               `protobuf:"bytes,2,rep,name=filter_nodes,json=filterNodes,proto3" json:"filter_nodes,omitempty"`
	FilterCranedResourceStates []CranedResourceState  `protobuf:"varint,3,rep,packed,name=filter_craned_resource_states,json=filterCranedResourceStates,proto3,enum=crane.grpc.CranedResourceState" json:"filter_craned_resource_states,omitempty"`
	FilterCranedControlStates  []CranedControlState   `protobuf:"varint,4,rep,packed,name=filter_craned_control_states,json=filterCranedControlStates,proto3,enum=crane.grpc.CranedControlState" json:"filter_craned_control_states,omitempty"`
	FilterCranedPowerStates    []CranedPowerState     `protobuf:"varint,5,rep,packed,name=filter_craned_power_states,json=filterCranedPowerStates,proto3,enum=crane.grpc.CranedPowerState" json:"filter_craned_power_states,omitempty"`
	unknownFields              protoimpl.UnknownFields
	sizeCache                  protoimpl.SizeCache
}

func (x *QueryClusterInfoRequest) Reset() {
	*x = QueryClusterInfoRequest{}
	mi := &file_Crane_proto_msgTypes[80]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *QueryClusterInfoRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryClusterInfoRequest) ProtoMessage() {}

func (x *QueryClusterInfoRequest) ProtoReflect() protoreflect.Message {
	mi := &file_Crane_proto_msgTypes[80]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryClusterInfoRequest.ProtoReflect.Descriptor instead.
func (*QueryClusterInfoRequest) Descriptor() ([]byte, []int) {
	return file_Crane_proto_rawDescGZIP(), []int{80}
}

func (x *QueryClusterInfoRequest) GetFilterPartitions() []string {
	if x != nil {
		return x.FilterPartitions
	}
	return nil
}

func (x *QueryClusterInfoRequest) GetFilterNodes() []string {
	if x != nil {
		return x.FilterNodes
	}
	return nil
}

func (x *QueryClusterInfoRequest) GetFilterCranedResourceStates() []CranedResourceState {
	if x != nil {
		return x.FilterCranedResourceStates
	}
	return nil
}

func (x *QueryClusterInfoRequest) GetFilterCranedControlStates() []CranedControlState {
	if x != nil {
		return x.FilterCranedControlStates
	}
	return nil
}

func (x *QueryClusterInfoRequest) GetFilterCranedPowerStates() []CranedPowerState {
	if x != nil {
		return x.FilterCranedPowerStates
	}
	return nil
}

type QueryClusterInfoReply struct {
	state         protoimpl.MessageState  `protogen:"open.v1"`
	Ok            bool                    `protobuf:"varint,1,opt,name=ok,proto3" json:"ok,omitempty"`
	Partitions    []*TrimmedPartitionInfo `protobuf:"bytes,2,rep,name=partitions,proto3" json:"partitions,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *QueryClusterInfoReply) Reset() {
	*x = QueryClusterInfoReply{}
	mi := &file_Crane_proto_msgTypes[81]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *QueryClusterInfoReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryClusterInfoReply) ProtoMessage() {}

func (x *QueryClusterInfoReply) ProtoReflect() protoreflect.Message {
	mi := &file_Crane_proto_msgTypes[81]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryClusterInfoReply.ProtoReflect.Descriptor instead.
func (*QueryClusterInfoReply) Descriptor() ([]byte, []int) {
	return file_Crane_proto_rawDescGZIP(), []int{81}
}

func (x *QueryClusterInfoReply) GetOk() bool {
	if x != nil {
		return x.Ok
	}
	return false
}

func (x *QueryClusterInfoReply) GetPartitions() []*TrimmedPartitionInfo {
	if x != nil {
		return x.Partitions
	}
	return nil
}

type QueryTasksInfoRequest struct {
	state                       protoimpl.MessageState `protogen:"open.v1"`
	FilterTaskIds               []uint32               `protobuf:"varint,1,rep,packed,name=filter_task_ids,json=filterTaskIds,proto3" json:"filter_task_ids,omitempty"`
	FilterPartitions            []string               `protobuf:"bytes,2,rep,name=filter_partitions,json=filterPartitions,proto3" json:"filter_partitions,omitempty"`
	NumLimit                    uint32                 `protobuf:"varint,3,opt,name=num_limit,json=numLimit,proto3" json:"num_limit,omitempty"`
	FilterTaskNames             []string               `protobuf:"bytes,4,rep,name=filter_task_names,json=filterTaskNames,proto3" json:"filter_task_names,omitempty"`
	FilterQos                   []string               `protobuf:"bytes,5,rep,name=filter_qos,json=filterQos,proto3" json:"filter_qos,omitempty"`
	FilterTaskStates            []TaskStatus           `protobuf:"varint,6,rep,packed,name=filter_task_states,json=filterTaskStates,proto3,enum=crane.grpc.TaskStatus" json:"filter_task_states,omitempty"`
	FilterUsers                 []string               `protobuf:"bytes,7,rep,name=filter_users,json=filterUsers,proto3" json:"filter_users,omitempty"`
	FilterAccounts              []string               `protobuf:"bytes,8,rep,name=filter_accounts,json=filterAccounts,proto3" json:"filter_accounts,omitempty"`
	FilterSubmitTimeInterval    *TimeInterval          `protobuf:"bytes,9,opt,name=filter_submit_time_interval,json=filterSubmitTimeInterval,proto3" json:"filter_submit_time_interval,omitempty"`
	FilterStartTimeInterval     *TimeInterval          `protobuf:"bytes,10,opt,name=filter_start_time_interval,json=filterStartTimeInterval,proto3" json:"filter_start_time_interval,omitempty"`
	FilterEndTimeInterval       *TimeInterval          `protobuf:"bytes,11,opt,name=filter_end_time_interval,json=filterEndTimeInterval,proto3" json:"filter_end_time_interval,omitempty"`
	OptionIncludeCompletedTasks bool                   `protobuf:"varint,15,opt,name=option_include_completed_tasks,json=optionIncludeCompletedTasks,proto3" json:"option_include_completed_tasks,omitempty"`
	unknownFields               protoimpl.UnknownFields
	sizeCache                   protoimpl.SizeCache
}

func (x *QueryTasksInfoRequest) Reset() {
	*x = QueryTasksInfoRequest{}
	mi := &file_Crane_proto_msgTypes[82]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *QueryTasksInfoRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryTasksInfoRequest) ProtoMessage() {}

func (x *QueryTasksInfoRequest) ProtoReflect() protoreflect.Message {
	mi := &file_Crane_proto_msgTypes[82]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryTasksInfoRequest.ProtoReflect.Descriptor instead.
func (*QueryTasksInfoRequest) Descriptor() ([]byte, []int) {
	return file_Crane_proto_rawDescGZIP(), []int{82}
}

func (x *QueryTasksInfoRequest) GetFilterTaskIds() []uint32 {
	if x != nil {
		return x.FilterTaskIds
	}
	return nil
}

func (x *QueryTasksInfoRequest) GetFilterPartitions() []string {
	if x != nil {
		return x.FilterPartitions
	}
	return nil
}

func (x *QueryTasksInfoRequest) GetNumLimit() uint32 {
	if x != nil {
		return x.NumLimit
	}
	return 0
}

func (x *QueryTasksInfoRequest) GetFilterTaskNames() []string {
	if x != nil {
		return x.FilterTaskNames
	}
	return nil
}

func (x *QueryTasksInfoRequest) GetFilterQos() []string {
	if x != nil {
		return x.FilterQos
	}
	return nil
}

func (x *QueryTasksInfoRequest) GetFilterTaskStates() []TaskStatus {
	if x != nil {
		return x.FilterTaskStates
	}
	return nil
}

func (x *QueryTasksInfoRequest) GetFilterUsers() []string {
	if x != nil {
		return x.FilterUsers
	}
	return nil
}

func (x *QueryTasksInfoRequest) GetFilterAccounts() []string {
	if x != nil {
		return x.FilterAccounts
	}
	return nil
}

func (x *QueryTasksInfoRequest) GetFilterSubmitTimeInterval() *TimeInterval {
	if x != nil {
		return x.FilterSubmitTimeInterval
	}
	return nil
}

func (x *QueryTasksInfoRequest) GetFilterStartTimeInterval() *TimeInterval {
	if x != nil {
		return x.FilterStartTimeInterval
	}
	return nil
}

func (x *QueryTasksInfoRequest) GetFilterEndTimeInterval() *TimeInterval {
	if x != nil {
		return x.FilterEndTimeInterval
	}
	return nil
}

func (x *QueryTasksInfoRequest) GetOptionIncludeCompletedTasks() bool {
	if x != nil {
		return x.OptionIncludeCompletedTasks
	}
	return false
}

type QueryTasksInfoReply struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Ok            bool                   `protobuf:"varint,1,opt,name=ok,proto3" json:"ok,omitempty"`
	TaskInfoList  []*TaskInfo            `protobuf:"bytes,2,rep,name=task_info_list,json=taskInfoList,proto3" json:"task_info_list,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *QueryTasksInfoReply) Reset() {
	*x = QueryTasksInfoReply{}
	mi := &file_Crane_proto_msgTypes[83]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *QueryTasksInfoReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryTasksInfoReply) ProtoMessage() {}

func (x *QueryTasksInfoReply) ProtoReflect() protoreflect.Message {
	mi := &file_Crane_proto_msgTypes[83]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryTasksInfoReply.ProtoReflect.Descriptor instead.
func (*QueryTasksInfoReply) Descriptor() ([]byte, []int) {
	return file_Crane_proto_rawDescGZIP(), []int{83}
}

func (x *QueryTasksInfoReply) GetOk() bool {
	if x != nil {
		return x.Ok
	}
	return false
}

func (x *QueryTasksInfoReply) GetTaskInfoList() []*TaskInfo {
	if x != nil {
		return x.TaskInfoList
	}
	return nil
}

type CreateReservationRequest struct {
	state                protoimpl.MessageState `protogen:"open.v1"`
	Uid                  uint32                 `protobuf:"varint,1,opt,name=uid,proto3" json:"uid,omitempty"`
	ReservationName      string                 `protobuf:"bytes,2,opt,name=reservation_name,json=reservationName,proto3" json:"reservation_name,omitempty"`
	StartTimeUnixSeconds int64                  `protobuf:"varint,3,opt,name=start_time_unix_seconds,json=startTimeUnixSeconds,proto3" json:"start_time_unix_seconds,omitempty"`
	DurationSeconds      int64                  `protobuf:"varint,4,opt,name=duration_seconds,json=durationSeconds,proto3" json:"duration_seconds,omitempty"`
	Partition            string                 `protobuf:"bytes,5,opt,name=partition,proto3" json:"partition,omitempty"`
	CranedRegex          string                 `protobuf:"bytes,6,opt,name=craned_regex,json=cranedRegex,proto3" json:"craned_regex,omitempty"`
	AllowedAccounts      []string               `protobuf:"bytes,7,rep,name=allowed_accounts,json=allowedAccounts,proto3" json:"allowed_accounts,omitempty"`
	DeniedAccounts       []string               `protobuf:"bytes,8,rep,name=denied_accounts,json=deniedAccounts,proto3" json:"denied_accounts,omitempty"`
	AllowedUsers         []string               `protobuf:"bytes,9,rep,name=allowed_users,json=allowedUsers,proto3" json:"allowed_users,omitempty"`
	DeniedUsers          []string               `protobuf:"bytes,10,rep,name=denied_users,json=deniedUsers,proto3" json:"denied_users,omitempty"`
	NodeNum              uint32                 `protobuf:"varint,11,opt,name=node_num,json=nodeNum,proto3" json:"node_num,omitempty"`
	unknownFields        protoimpl.UnknownFields
	sizeCache            protoimpl.SizeCache
}

func (x *CreateReservationRequest) Reset() {
	*x = CreateReservationRequest{}
	mi := &file_Crane_proto_msgTypes[84]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateReservationRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateReservationRequest) ProtoMessage() {}

func (x *CreateReservationRequest) ProtoReflect() protoreflect.Message {
	mi := &file_Crane_proto_msgTypes[84]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateReservationRequest.ProtoReflect.Descriptor instead.
func (*CreateReservationRequest) Descriptor() ([]byte, []int) {
	return file_Crane_proto_rawDescGZIP(), []int{84}
}

func (x *CreateReservationRequest) GetUid() uint32 {
	if x != nil {
		return x.Uid
	}
	return 0
}

func (x *CreateReservationRequest) GetReservationName() string {
	if x != nil {
		return x.ReservationName
	}
	return ""
}

func (x *CreateReservationRequest) GetStartTimeUnixSeconds() int64 {
	if x != nil {
		return x.StartTimeUnixSeconds
	}
	return 0
}

func (x *CreateReservationRequest) GetDurationSeconds() int64 {
	if x != nil {
		return x.DurationSeconds
	}
	return 0
}

func (x *CreateReservationRequest) GetPartition() string {
	if x != nil {
		return x.Partition
	}
	return ""
}

func (x *CreateReservationRequest) GetCranedRegex() string {
	if x != nil {
		return x.CranedRegex
	}
	return ""
}

func (x *CreateReservationRequest) GetAllowedAccounts() []string {
	if x != nil {
		return x.AllowedAccounts
	}
	return nil
}

func (x *CreateReservationRequest) GetDeniedAccounts() []string {
	if x != nil {
		return x.DeniedAccounts
	}
	return nil
}

func (x *CreateReservationRequest) GetAllowedUsers() []string {
	if x != nil {
		return x.AllowedUsers
	}
	return nil
}

func (x *CreateReservationRequest) GetDeniedUsers() []string {
	if x != nil {
		return x.DeniedUsers
	}
	return nil
}

func (x *CreateReservationRequest) GetNodeNum() uint32 {
	if x != nil {
		return x.NodeNum
	}
	return 0
}

type CreateReservationReply struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Ok            bool                   `protobuf:"varint,1,opt,name=ok,proto3" json:"ok,omitempty"`
	Reason        string                 `protobuf:"bytes,2,opt,name=reason,proto3" json:"reason,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateReservationReply) Reset() {
	*x = CreateReservationReply{}
	mi := &file_Crane_proto_msgTypes[85]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateReservationReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateReservationReply) ProtoMessage() {}

func (x *CreateReservationReply) ProtoReflect() protoreflect.Message {
	mi := &file_Crane_proto_msgTypes[85]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateReservationReply.ProtoReflect.Descriptor instead.
func (*CreateReservationReply) Descriptor() ([]byte, []int) {
	return file_Crane_proto_rawDescGZIP(), []int{85}
}

func (x *CreateReservationReply) GetOk() bool {
	if x != nil {
		return x.Ok
	}
	return false
}

func (x *CreateReservationReply) GetReason() string {
	if x != nil {
		return x.Reason
	}
	return ""
}

type DeleteReservationRequest struct {
	state           protoimpl.MessageState `protogen:"open.v1"`
	Uid             uint32                 `protobuf:"varint,1,opt,name=uid,proto3" json:"uid,omitempty"`
	ReservationName string                 `protobuf:"bytes,2,opt,name=reservation_name,json=reservationName,proto3" json:"reservation_name,omitempty"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *DeleteReservationRequest) Reset() {
	*x = DeleteReservationRequest{}
	mi := &file_Crane_proto_msgTypes[86]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteReservationRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteReservationRequest) ProtoMessage() {}

func (x *DeleteReservationRequest) ProtoReflect() protoreflect.Message {
	mi := &file_Crane_proto_msgTypes[86]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteReservationRequest.ProtoReflect.Descriptor instead.
func (*DeleteReservationRequest) Descriptor() ([]byte, []int) {
	return file_Crane_proto_rawDescGZIP(), []int{86}
}

func (x *DeleteReservationRequest) GetUid() uint32 {
	if x != nil {
		return x.Uid
	}
	return 0
}

func (x *DeleteReservationRequest) GetReservationName() string {
	if x != nil {
		return x.ReservationName
	}
	return ""
}

type DeleteReservationReply struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Ok            bool                   `protobuf:"varint,1,opt,name=ok,proto3" json:"ok,omitempty"`
	Reason        string                 `protobuf:"bytes,2,opt,name=reason,proto3" json:"reason,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteReservationReply) Reset() {
	*x = DeleteReservationReply{}
	mi := &file_Crane_proto_msgTypes[87]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteReservationReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteReservationReply) ProtoMessage() {}

func (x *DeleteReservationReply) ProtoReflect() protoreflect.Message {
	mi := &file_Crane_proto_msgTypes[87]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteReservationReply.ProtoReflect.Descriptor instead.
func (*DeleteReservationReply) Descriptor() ([]byte, []int) {
	return file_Crane_proto_rawDescGZIP(), []int{87}
}

func (x *DeleteReservationReply) GetOk() bool {
	if x != nil {
		return x.Ok
	}
	return false
}

func (x *DeleteReservationReply) GetReason() string {
	if x != nil {
		return x.Reason
	}
	return ""
}

type StreamCallocRequest struct {
	state protoimpl.MessageState                `protogen:"open.v1"`
	Type  StreamCallocRequest_CallocRequestType `protobuf:"varint,1,opt,name=type,proto3,enum=crane.grpc.StreamCallocRequest_CallocRequestType" json:"type,omitempty"`
	// Types that are valid to be assigned to Payload:
	//
	//	*StreamCallocRequest_PayloadTaskReq
	//	*StreamCallocRequest_PayloadTaskCompleteReq
	Payload       isStreamCallocRequest_Payload `protobuf_oneof:"payload"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *StreamCallocRequest) Reset() {
	*x = StreamCallocRequest{}
	mi := &file_Crane_proto_msgTypes[88]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StreamCallocRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StreamCallocRequest) ProtoMessage() {}

func (x *StreamCallocRequest) ProtoReflect() protoreflect.Message {
	mi := &file_Crane_proto_msgTypes[88]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StreamCallocRequest.ProtoReflect.Descriptor instead.
func (*StreamCallocRequest) Descriptor() ([]byte, []int) {
	return file_Crane_proto_rawDescGZIP(), []int{88}
}

func (x *StreamCallocRequest) GetType() StreamCallocRequest_CallocRequestType {
	if x != nil {
		return x.Type
	}
	return StreamCallocRequest_TASK_REQUEST
}

func (x *StreamCallocRequest) GetPayload() isStreamCallocRequest_Payload {
	if x != nil {
		return x.Payload
	}
	return nil
}

func (x *StreamCallocRequest) GetPayloadTaskReq() *StreamCallocRequest_TaskReq {
	if x != nil {
		if x, ok := x.Payload.(*StreamCallocRequest_PayloadTaskReq); ok {
			return x.PayloadTaskReq
		}
	}
	return nil
}

func (x *StreamCallocRequest) GetPayloadTaskCompleteReq() *StreamCallocRequest_TaskCompleteReq {
	if x != nil {
		if x, ok := x.Payload.(*StreamCallocRequest_PayloadTaskCompleteReq); ok {
			return x.PayloadTaskCompleteReq
		}
	}
	return nil
}

type isStreamCallocRequest_Payload interface {
	isStreamCallocRequest_Payload()
}

type StreamCallocRequest_PayloadTaskReq struct {
	PayloadTaskReq *StreamCallocRequest_TaskReq `protobuf:"bytes,2,opt,name=payload_task_req,json=payloadTaskReq,proto3,oneof"`
}

type StreamCallocRequest_PayloadTaskCompleteReq struct {
	PayloadTaskCompleteReq *StreamCallocRequest_TaskCompleteReq `protobuf:"bytes,3,opt,name=payload_task_complete_req,json=payloadTaskCompleteReq,proto3,oneof"`
}

func (*StreamCallocRequest_PayloadTaskReq) isStreamCallocRequest_Payload() {}

func (*StreamCallocRequest_PayloadTaskCompleteReq) isStreamCallocRequest_Payload() {}

type StreamCallocReply struct {
	state protoimpl.MessageState            `protogen:"open.v1"`
	Type  StreamCallocReply_CforedReplyType `protobuf:"varint,1,opt,name=type,proto3,enum=crane.grpc.StreamCallocReply_CforedReplyType" json:"type,omitempty"`
	// Types that are valid to be assigned to Payload:
	//
	//	*StreamCallocReply_PayloadTaskIdReply
	//	*StreamCallocReply_PayloadTaskAllocReply
	//	*StreamCallocReply_PayloadTaskCancelRequest
	//	*StreamCallocReply_PayloadTaskCompletionAckReply
	Payload       isStreamCallocReply_Payload `protobuf_oneof:"payload"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *StreamCallocReply) Reset() {
	*x = StreamCallocReply{}
	mi := &file_Crane_proto_msgTypes[89]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StreamCallocReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StreamCallocReply) ProtoMessage() {}

func (x *StreamCallocReply) ProtoReflect() protoreflect.Message {
	mi := &file_Crane_proto_msgTypes[89]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StreamCallocReply.ProtoReflect.Descriptor instead.
func (*StreamCallocReply) Descriptor() ([]byte, []int) {
	return file_Crane_proto_rawDescGZIP(), []int{89}
}

func (x *StreamCallocReply) GetType() StreamCallocReply_CforedReplyType {
	if x != nil {
		return x.Type
	}
	return StreamCallocReply_TASK_ID_REPLY
}

func (x *StreamCallocReply) GetPayload() isStreamCallocReply_Payload {
	if x != nil {
		return x.Payload
	}
	return nil
}

func (x *StreamCallocReply) GetPayloadTaskIdReply() *StreamCallocReply_TaskIdReply {
	if x != nil {
		if x, ok := x.Payload.(*StreamCallocReply_PayloadTaskIdReply); ok {
			return x.PayloadTaskIdReply
		}
	}
	return nil
}

func (x *StreamCallocReply) GetPayloadTaskAllocReply() *StreamCallocReply_TaskResAllocatedReply {
	if x != nil {
		if x, ok := x.Payload.(*StreamCallocReply_PayloadTaskAllocReply); ok {
			return x.PayloadTaskAllocReply
		}
	}
	return nil
}

func (x *StreamCallocReply) GetPayloadTaskCancelRequest() *StreamCallocReply_TaskCancelRequest {
	if x != nil {
		if x, ok := x.Payload.(*StreamCallocReply_PayloadTaskCancelRequest); ok {
			return x.PayloadTaskCancelRequest
		}
	}
	return nil
}

func (x *StreamCallocReply) GetPayloadTaskCompletionAckReply() *StreamCallocReply_TaskCompletionAckReply {
	if x != nil {
		if x, ok := x.Payload.(*StreamCallocReply_PayloadTaskCompletionAckReply); ok {
			return x.PayloadTaskCompletionAckReply
		}
	}
	return nil
}

type isStreamCallocReply_Payload interface {
	isStreamCallocReply_Payload()
}

type StreamCallocReply_PayloadTaskIdReply struct {
	PayloadTaskIdReply *StreamCallocReply_TaskIdReply `protobuf:"bytes,2,opt,name=payload_task_id_reply,json=payloadTaskIdReply,proto3,oneof"`
}

type StreamCallocReply_PayloadTaskAllocReply struct {
	PayloadTaskAllocReply *StreamCallocReply_TaskResAllocatedReply `protobuf:"bytes,3,opt,name=payload_task_alloc_reply,json=payloadTaskAllocReply,proto3,oneof"`
}

type StreamCallocReply_PayloadTaskCancelRequest struct {
	PayloadTaskCancelRequest *StreamCallocReply_TaskCancelRequest `protobuf:"bytes,4,opt,name=payload_task_cancel_request,json=payloadTaskCancelRequest,proto3,oneof"`
}

type StreamCallocReply_PayloadTaskCompletionAckReply struct {
	PayloadTaskCompletionAckReply *StreamCallocReply_TaskCompletionAckReply `protobuf:"bytes,5,opt,name=payload_task_completion_ack_reply,json=payloadTaskCompletionAckReply,proto3,oneof"`
}

func (*StreamCallocReply_PayloadTaskIdReply) isStreamCallocReply_Payload() {}

func (*StreamCallocReply_PayloadTaskAllocReply) isStreamCallocReply_Payload() {}

func (*StreamCallocReply_PayloadTaskCancelRequest) isStreamCallocReply_Payload() {}

func (*StreamCallocReply_PayloadTaskCompletionAckReply) isStreamCallocReply_Payload() {}

type StreamCforedRequest struct {
	state protoimpl.MessageState                `protogen:"open.v1"`
	Type  StreamCforedRequest_CforedRequestType `protobuf:"varint,1,opt,name=type,proto3,enum=crane.grpc.StreamCforedRequest_CforedRequestType" json:"type,omitempty"`
	// Types that are valid to be assigned to Payload:
	//
	//	*StreamCforedRequest_PayloadCforedReg
	//	*StreamCforedRequest_PayloadTaskReq
	//	*StreamCforedRequest_PayloadTaskCompleteReq
	//	*StreamCforedRequest_PayloadGracefulExitReq
	Payload       isStreamCforedRequest_Payload `protobuf_oneof:"payload"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *StreamCforedRequest) Reset() {
	*x = StreamCforedRequest{}
	mi := &file_Crane_proto_msgTypes[90]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StreamCforedRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StreamCforedRequest) ProtoMessage() {}

func (x *StreamCforedRequest) ProtoReflect() protoreflect.Message {
	mi := &file_Crane_proto_msgTypes[90]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StreamCforedRequest.ProtoReflect.Descriptor instead.
func (*StreamCforedRequest) Descriptor() ([]byte, []int) {
	return file_Crane_proto_rawDescGZIP(), []int{90}
}

func (x *StreamCforedRequest) GetType() StreamCforedRequest_CforedRequestType {
	if x != nil {
		return x.Type
	}
	return StreamCforedRequest_CFORED_REGISTRATION
}

func (x *StreamCforedRequest) GetPayload() isStreamCforedRequest_Payload {
	if x != nil {
		return x.Payload
	}
	return nil
}

func (x *StreamCforedRequest) GetPayloadCforedReg() *StreamCforedRequest_CforedReg {
	if x != nil {
		if x, ok := x.Payload.(*StreamCforedRequest_PayloadCforedReg); ok {
			return x.PayloadCforedReg
		}
	}
	return nil
}

func (x *StreamCforedRequest) GetPayloadTaskReq() *StreamCforedRequest_TaskReq {
	if x != nil {
		if x, ok := x.Payload.(*StreamCforedRequest_PayloadTaskReq); ok {
			return x.PayloadTaskReq
		}
	}
	return nil
}

func (x *StreamCforedRequest) GetPayloadTaskCompleteReq() *StreamCforedRequest_TaskCompleteReq {
	if x != nil {
		if x, ok := x.Payload.(*StreamCforedRequest_PayloadTaskCompleteReq); ok {
			return x.PayloadTaskCompleteReq
		}
	}
	return nil
}

func (x *StreamCforedRequest) GetPayloadGracefulExitReq() *StreamCforedRequest_GracefulExitReq {
	if x != nil {
		if x, ok := x.Payload.(*StreamCforedRequest_PayloadGracefulExitReq); ok {
			return x.PayloadGracefulExitReq
		}
	}
	return nil
}

type isStreamCforedRequest_Payload interface {
	isStreamCforedRequest_Payload()
}

type StreamCforedRequest_PayloadCforedReg struct {
	PayloadCforedReg *StreamCforedRequest_CforedReg `protobuf:"bytes,2,opt,name=payload_cfored_reg,json=payloadCforedReg,proto3,oneof"`
}

type StreamCforedRequest_PayloadTaskReq struct {
	PayloadTaskReq *StreamCforedRequest_TaskReq `protobuf:"bytes,3,opt,name=payload_task_req,json=payloadTaskReq,proto3,oneof"`
}

type StreamCforedRequest_PayloadTaskCompleteReq struct {
	PayloadTaskCompleteReq *StreamCforedRequest_TaskCompleteReq `protobuf:"bytes,4,opt,name=payload_task_complete_req,json=payloadTaskCompleteReq,proto3,oneof"`
}

type StreamCforedRequest_PayloadGracefulExitReq struct {
	PayloadGracefulExitReq *StreamCforedRequest_GracefulExitReq `protobuf:"bytes,5,opt,name=payload_graceful_exit_req,json=payloadGracefulExitReq,proto3,oneof"`
}

func (*StreamCforedRequest_PayloadCforedReg) isStreamCforedRequest_Payload() {}

func (*StreamCforedRequest_PayloadTaskReq) isStreamCforedRequest_Payload() {}

func (*StreamCforedRequest_PayloadTaskCompleteReq) isStreamCforedRequest_Payload() {}

func (*StreamCforedRequest_PayloadGracefulExitReq) isStreamCforedRequest_Payload() {}

type StreamCtldReply struct {
	state protoimpl.MessageState        `protogen:"open.v1"`
	Type  StreamCtldReply_CtldReplyType `protobuf:"varint,1,opt,name=type,proto3,enum=crane.grpc.StreamCtldReply_CtldReplyType" json:"type,omitempty"`
	// Types that are valid to be assigned to Payload:
	//
	//	*StreamCtldReply_PayloadCforedRegAck
	//	*StreamCtldReply_PayloadTaskResAllocReply
	//	*StreamCtldReply_PayloadTaskCancelRequest
	//	*StreamCtldReply_PayloadTaskCompletionAck
	//	*StreamCtldReply_PayloadTaskIdReply
	//	*StreamCtldReply_PayloadGracefulExitAck
	Payload       isStreamCtldReply_Payload `protobuf_oneof:"payload"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *StreamCtldReply) Reset() {
	*x = StreamCtldReply{}
	mi := &file_Crane_proto_msgTypes[91]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StreamCtldReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StreamCtldReply) ProtoMessage() {}

func (x *StreamCtldReply) ProtoReflect() protoreflect.Message {
	mi := &file_Crane_proto_msgTypes[91]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StreamCtldReply.ProtoReflect.Descriptor instead.
func (*StreamCtldReply) Descriptor() ([]byte, []int) {
	return file_Crane_proto_rawDescGZIP(), []int{91}
}

func (x *StreamCtldReply) GetType() StreamCtldReply_CtldReplyType {
	if x != nil {
		return x.Type
	}
	return StreamCtldReply_TASK_ID_REPLY
}

func (x *StreamCtldReply) GetPayload() isStreamCtldReply_Payload {
	if x != nil {
		return x.Payload
	}
	return nil
}

func (x *StreamCtldReply) GetPayloadCforedRegAck() *StreamCtldReply_CforedRegistrationAck {
	if x != nil {
		if x, ok := x.Payload.(*StreamCtldReply_PayloadCforedRegAck); ok {
			return x.PayloadCforedRegAck
		}
	}
	return nil
}

func (x *StreamCtldReply) GetPayloadTaskResAllocReply() *StreamCtldReply_TaskResAllocatedReply {
	if x != nil {
		if x, ok := x.Payload.(*StreamCtldReply_PayloadTaskResAllocReply); ok {
			return x.PayloadTaskResAllocReply
		}
	}
	return nil
}

func (x *StreamCtldReply) GetPayloadTaskCancelRequest() *StreamCtldReply_TaskCancelRequest {
	if x != nil {
		if x, ok := x.Payload.(*StreamCtldReply_PayloadTaskCancelRequest); ok {
			return x.PayloadTaskCancelRequest
		}
	}
	return nil
}

func (x *StreamCtldReply) GetPayloadTaskCompletionAck() *StreamCtldReply_TaskCompletionAckReply {
	if x != nil {
		if x, ok := x.Payload.(*StreamCtldReply_PayloadTaskCompletionAck); ok {
			return x.PayloadTaskCompletionAck
		}
	}
	return nil
}

func (x *StreamCtldReply) GetPayloadTaskIdReply() *StreamCtldReply_TaskIdReply {
	if x != nil {
		if x, ok := x.Payload.(*StreamCtldReply_PayloadTaskIdReply); ok {
			return x.PayloadTaskIdReply
		}
	}
	return nil
}

func (x *StreamCtldReply) GetPayloadGracefulExitAck() *StreamCtldReply_CforedGracefulExitAck {
	if x != nil {
		if x, ok := x.Payload.(*StreamCtldReply_PayloadGracefulExitAck); ok {
			return x.PayloadGracefulExitAck
		}
	}
	return nil
}

type isStreamCtldReply_Payload interface {
	isStreamCtldReply_Payload()
}

type StreamCtldReply_PayloadCforedRegAck struct {
	PayloadCforedRegAck *StreamCtldReply_CforedRegistrationAck `protobuf:"bytes,2,opt,name=payload_cfored_reg_ack,json=payloadCforedRegAck,proto3,oneof"`
}

type StreamCtldReply_PayloadTaskResAllocReply struct {
	PayloadTaskResAllocReply *StreamCtldReply_TaskResAllocatedReply `protobuf:"bytes,3,opt,name=payload_task_res_alloc_reply,json=payloadTaskResAllocReply,proto3,oneof"`
}

type StreamCtldReply_PayloadTaskCancelRequest struct {
	PayloadTaskCancelRequest *StreamCtldReply_TaskCancelRequest `protobuf:"bytes,4,opt,name=payload_task_cancel_request,json=payloadTaskCancelRequest,proto3,oneof"`
}

type StreamCtldReply_PayloadTaskCompletionAck struct {
	PayloadTaskCompletionAck *StreamCtldReply_TaskCompletionAckReply `protobuf:"bytes,5,opt,name=payload_task_completion_ack,json=payloadTaskCompletionAck,proto3,oneof"`
}

type StreamCtldReply_PayloadTaskIdReply struct {
	PayloadTaskIdReply *StreamCtldReply_TaskIdReply `protobuf:"bytes,6,opt,name=payload_task_id_reply,json=payloadTaskIdReply,proto3,oneof"`
}

type StreamCtldReply_PayloadGracefulExitAck struct {
	PayloadGracefulExitAck *StreamCtldReply_CforedGracefulExitAck `protobuf:"bytes,7,opt,name=payload_graceful_exit_ack,json=payloadGracefulExitAck,proto3,oneof"`
}

func (*StreamCtldReply_PayloadCforedRegAck) isStreamCtldReply_Payload() {}

func (*StreamCtldReply_PayloadTaskResAllocReply) isStreamCtldReply_Payload() {}

func (*StreamCtldReply_PayloadTaskCancelRequest) isStreamCtldReply_Payload() {}

func (*StreamCtldReply_PayloadTaskCompletionAck) isStreamCtldReply_Payload() {}

func (*StreamCtldReply_PayloadTaskIdReply) isStreamCtldReply_Payload() {}

func (*StreamCtldReply_PayloadGracefulExitAck) isStreamCtldReply_Payload() {}

type StreamCrunRequest struct {
	state protoimpl.MessageState            `protogen:"open.v1"`
	Type  StreamCrunRequest_CrunRequestType `protobuf:"varint,1,opt,name=type,proto3,enum=crane.grpc.StreamCrunRequest_CrunRequestType" json:"type,omitempty"`
	// Types that are valid to be assigned to Payload:
	//
	//	*StreamCrunRequest_PayloadTaskReq
	//	*StreamCrunRequest_PayloadTaskCompleteReq
	//	*StreamCrunRequest_PayloadTaskIoForwardReq
	//	*StreamCrunRequest_PayloadTaskX11ForwardReq
	Payload       isStreamCrunRequest_Payload `protobuf_oneof:"payload"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *StreamCrunRequest) Reset() {
	*x = StreamCrunRequest{}
	mi := &file_Crane_proto_msgTypes[92]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StreamCrunRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StreamCrunRequest) ProtoMessage() {}

func (x *StreamCrunRequest) ProtoReflect() protoreflect.Message {
	mi := &file_Crane_proto_msgTypes[92]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StreamCrunRequest.ProtoReflect.Descriptor instead.
func (*StreamCrunRequest) Descriptor() ([]byte, []int) {
	return file_Crane_proto_rawDescGZIP(), []int{92}
}

func (x *StreamCrunRequest) GetType() StreamCrunRequest_CrunRequestType {
	if x != nil {
		return x.Type
	}
	return StreamCrunRequest_TASK_REQUEST
}

func (x *StreamCrunRequest) GetPayload() isStreamCrunRequest_Payload {
	if x != nil {
		return x.Payload
	}
	return nil
}

func (x *StreamCrunRequest) GetPayloadTaskReq() *StreamCrunRequest_TaskReq {
	if x != nil {
		if x, ok := x.Payload.(*StreamCrunRequest_PayloadTaskReq); ok {
			return x.PayloadTaskReq
		}
	}
	return nil
}

func (x *StreamCrunRequest) GetPayloadTaskCompleteReq() *StreamCrunRequest_TaskCompleteReq {
	if x != nil {
		if x, ok := x.Payload.(*StreamCrunRequest_PayloadTaskCompleteReq); ok {
			return x.PayloadTaskCompleteReq
		}
	}
	return nil
}

func (x *StreamCrunRequest) GetPayloadTaskIoForwardReq() *StreamCrunRequest_TaskIOForwardReq {
	if x != nil {
		if x, ok := x.Payload.(*StreamCrunRequest_PayloadTaskIoForwardReq); ok {
			return x.PayloadTaskIoForwardReq
		}
	}
	return nil
}

func (x *StreamCrunRequest) GetPayloadTaskX11ForwardReq() *StreamCrunRequest_TaskX11ForwardReq {
	if x != nil {
		if x, ok := x.Payload.(*StreamCrunRequest_PayloadTaskX11ForwardReq); ok {
			return x.PayloadTaskX11ForwardReq
		}
	}
	return nil
}

type isStreamCrunRequest_Payload interface {
	isStreamCrunRequest_Payload()
}

type StreamCrunRequest_PayloadTaskReq struct {
	PayloadTaskReq *StreamCrunRequest_TaskReq `protobuf:"bytes,2,opt,name=payload_task_req,json=payloadTaskReq,proto3,oneof"`
}

type StreamCrunRequest_PayloadTaskCompleteReq struct {
	PayloadTaskCompleteReq *StreamCrunRequest_TaskCompleteReq `protobuf:"bytes,3,opt,name=payload_task_complete_req,json=payloadTaskCompleteReq,proto3,oneof"`
}

type StreamCrunRequest_PayloadTaskIoForwardReq struct {
	PayloadTaskIoForwardReq *StreamCrunRequest_TaskIOForwardReq `protobuf:"bytes,4,opt,name=payload_task_io_forward_req,json=payloadTaskIoForwardReq,proto3,oneof"`
}

type StreamCrunRequest_PayloadTaskX11ForwardReq struct {
	PayloadTaskX11ForwardReq *StreamCrunRequest_TaskX11ForwardReq `protobuf:"bytes,5,opt,name=payload_task_x11_forward_req,json=payloadTaskX11ForwardReq,proto3,oneof"`
}

func (*StreamCrunRequest_PayloadTaskReq) isStreamCrunRequest_Payload() {}

func (*StreamCrunRequest_PayloadTaskCompleteReq) isStreamCrunRequest_Payload() {}

func (*StreamCrunRequest_PayloadTaskIoForwardReq) isStreamCrunRequest_Payload() {}

func (*StreamCrunRequest_PayloadTaskX11ForwardReq) isStreamCrunRequest_Payload() {}

type StreamCrunReply struct {
	state protoimpl.MessageState              `protogen:"open.v1"`
	Type  StreamCrunReply_CforedCrunReplyType `protobuf:"varint,1,opt,name=type,proto3,enum=crane.grpc.StreamCrunReply_CforedCrunReplyType" json:"type,omitempty"`
	// Types that are valid to be assigned to Payload:
	//
	//	*StreamCrunReply_PayloadTaskIdReply
	//	*StreamCrunReply_PayloadTaskAllocReply
	//	*StreamCrunReply_PayloadTaskCancelRequest
	//	*StreamCrunReply_PayloadTaskCompletionAckReply
	//	*StreamCrunReply_PayloadTaskIoForwardReadyReply
	//	*StreamCrunReply_PayloadTaskIoForwardReply
	//	*StreamCrunReply_PayloadTaskX11ForwardReply
	Payload       isStreamCrunReply_Payload `protobuf_oneof:"payload"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *StreamCrunReply) Reset() {
	*x = StreamCrunReply{}
	mi := &file_Crane_proto_msgTypes[93]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StreamCrunReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StreamCrunReply) ProtoMessage() {}

func (x *StreamCrunReply) ProtoReflect() protoreflect.Message {
	mi := &file_Crane_proto_msgTypes[93]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StreamCrunReply.ProtoReflect.Descriptor instead.
func (*StreamCrunReply) Descriptor() ([]byte, []int) {
	return file_Crane_proto_rawDescGZIP(), []int{93}
}

func (x *StreamCrunReply) GetType() StreamCrunReply_CforedCrunReplyType {
	if x != nil {
		return x.Type
	}
	return StreamCrunReply_TASK_ID_REPLY
}

func (x *StreamCrunReply) GetPayload() isStreamCrunReply_Payload {
	if x != nil {
		return x.Payload
	}
	return nil
}

func (x *StreamCrunReply) GetPayloadTaskIdReply() *StreamCrunReply_TaskIdReply {
	if x != nil {
		if x, ok := x.Payload.(*StreamCrunReply_PayloadTaskIdReply); ok {
			return x.PayloadTaskIdReply
		}
	}
	return nil
}

func (x *StreamCrunReply) GetPayloadTaskAllocReply() *StreamCrunReply_TaskResAllocatedReply {
	if x != nil {
		if x, ok := x.Payload.(*StreamCrunReply_PayloadTaskAllocReply); ok {
			return x.PayloadTaskAllocReply
		}
	}
	return nil
}

func (x *StreamCrunReply) GetPayloadTaskCancelRequest() *StreamCrunReply_TaskCancelRequest {
	if x != nil {
		if x, ok := x.Payload.(*StreamCrunReply_PayloadTaskCancelRequest); ok {
			return x.PayloadTaskCancelRequest
		}
	}
	return nil
}

func (x *StreamCrunReply) GetPayloadTaskCompletionAckReply() *StreamCrunReply_TaskCompletionAckReply {
	if x != nil {
		if x, ok := x.Payload.(*StreamCrunReply_PayloadTaskCompletionAckReply); ok {
			return x.PayloadTaskCompletionAckReply
		}
	}
	return nil
}

func (x *StreamCrunReply) GetPayloadTaskIoForwardReadyReply() *StreamCrunReply_TaskIOForwardReadyReply {
	if x != nil {
		if x, ok := x.Payload.(*StreamCrunReply_PayloadTaskIoForwardReadyReply); ok {
			return x.PayloadTaskIoForwardReadyReply
		}
	}
	return nil
}

func (x *StreamCrunReply) GetPayloadTaskIoForwardReply() *StreamCrunReply_TaskIOForwardReply {
	if x != nil {
		if x, ok := x.Payload.(*StreamCrunReply_PayloadTaskIoForwardReply); ok {
			return x.PayloadTaskIoForwardReply
		}
	}
	return nil
}

func (x *StreamCrunReply) GetPayloadTaskX11ForwardReply() *StreamCrunReply_TaskX11ForwardReply {
	if x != nil {
		if x, ok := x.Payload.(*StreamCrunReply_PayloadTaskX11ForwardReply); ok {
			return x.PayloadTaskX11ForwardReply
		}
	}
	return nil
}

type isStreamCrunReply_Payload interface {
	isStreamCrunReply_Payload()
}

type StreamCrunReply_PayloadTaskIdReply struct {
	PayloadTaskIdReply *StreamCrunReply_TaskIdReply `protobuf:"bytes,2,opt,name=payload_task_id_reply,json=payloadTaskIdReply,proto3,oneof"`
}

type StreamCrunReply_PayloadTaskAllocReply struct {
	PayloadTaskAllocReply *StreamCrunReply_TaskResAllocatedReply `protobuf:"bytes,3,opt,name=payload_task_alloc_reply,json=payloadTaskAllocReply,proto3,oneof"`
}

type StreamCrunReply_PayloadTaskCancelRequest struct {
	PayloadTaskCancelRequest *StreamCrunReply_TaskCancelRequest `protobuf:"bytes,4,opt,name=payload_task_cancel_request,json=payloadTaskCancelRequest,proto3,oneof"`
}

type StreamCrunReply_PayloadTaskCompletionAckReply struct {
	PayloadTaskCompletionAckReply *StreamCrunReply_TaskCompletionAckReply `protobuf:"bytes,5,opt,name=payload_task_completion_ack_reply,json=payloadTaskCompletionAckReply,proto3,oneof"`
}

type StreamCrunReply_PayloadTaskIoForwardReadyReply struct {
	PayloadTaskIoForwardReadyReply *StreamCrunReply_TaskIOForwardReadyReply `protobuf:"bytes,6,opt,name=payload_task_io_forward_ready_reply,json=payloadTaskIoForwardReadyReply,proto3,oneof"`
}

type StreamCrunReply_PayloadTaskIoForwardReply struct {
	PayloadTaskIoForwardReply *StreamCrunReply_TaskIOForwardReply `protobuf:"bytes,7,opt,name=payload_task_io_forward_reply,json=payloadTaskIoForwardReply,proto3,oneof"`
}

type StreamCrunReply_PayloadTaskX11ForwardReply struct {
	PayloadTaskX11ForwardReply *StreamCrunReply_TaskX11ForwardReply `protobuf:"bytes,8,opt,name=payload_task_x11_forward_reply,json=payloadTaskX11ForwardReply,proto3,oneof"`
}

func (*StreamCrunReply_PayloadTaskIdReply) isStreamCrunReply_Payload() {}

func (*StreamCrunReply_PayloadTaskAllocReply) isStreamCrunReply_Payload() {}

func (*StreamCrunReply_PayloadTaskCancelRequest) isStreamCrunReply_Payload() {}

func (*StreamCrunReply_PayloadTaskCompletionAckReply) isStreamCrunReply_Payload() {}

func (*StreamCrunReply_PayloadTaskIoForwardReadyReply) isStreamCrunReply_Payload() {}

func (*StreamCrunReply_PayloadTaskIoForwardReply) isStreamCrunReply_Payload() {}

func (*StreamCrunReply_PayloadTaskX11ForwardReply) isStreamCrunReply_Payload() {}

type StreamTaskIORequest struct {
	state protoimpl.MessageState                    `protogen:"open.v1"`
	Type  StreamTaskIORequest_SupervisorRequestType `protobuf:"varint,1,opt,name=type,proto3,enum=crane.grpc.StreamTaskIORequest_SupervisorRequestType" json:"type,omitempty"`
	// Types that are valid to be assigned to Payload:
	//
	//	*StreamTaskIORequest_PayloadRegisterReq
	//	*StreamTaskIORequest_PayloadTaskOutputReq
	//	*StreamTaskIORequest_PayloadUnregisterReq
	//	*StreamTaskIORequest_PayloadTaskX11OutputReq
	Payload       isStreamTaskIORequest_Payload `protobuf_oneof:"payload"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *StreamTaskIORequest) Reset() {
	*x = StreamTaskIORequest{}
	mi := &file_Crane_proto_msgTypes[94]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StreamTaskIORequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StreamTaskIORequest) ProtoMessage() {}

func (x *StreamTaskIORequest) ProtoReflect() protoreflect.Message {
	mi := &file_Crane_proto_msgTypes[94]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StreamTaskIORequest.ProtoReflect.Descriptor instead.
func (*StreamTaskIORequest) Descriptor() ([]byte, []int) {
	return file_Crane_proto_rawDescGZIP(), []int{94}
}

func (x *StreamTaskIORequest) GetType() StreamTaskIORequest_SupervisorRequestType {
	if x != nil {
		return x.Type
	}
	return StreamTaskIORequest_SUPERVISOR_REGISTER
}

func (x *StreamTaskIORequest) GetPayload() isStreamTaskIORequest_Payload {
	if x != nil {
		return x.Payload
	}
	return nil
}

func (x *StreamTaskIORequest) GetPayloadRegisterReq() *StreamTaskIORequest_SupervisorRegisterReq {
	if x != nil {
		if x, ok := x.Payload.(*StreamTaskIORequest_PayloadRegisterReq); ok {
			return x.PayloadRegisterReq
		}
	}
	return nil
}

func (x *StreamTaskIORequest) GetPayloadTaskOutputReq() *StreamTaskIORequest_TaskOutputReq {
	if x != nil {
		if x, ok := x.Payload.(*StreamTaskIORequest_PayloadTaskOutputReq); ok {
			return x.PayloadTaskOutputReq
		}
	}
	return nil
}

func (x *StreamTaskIORequest) GetPayloadUnregisterReq() *StreamTaskIORequest_SupervisorUnRegisterReq {
	if x != nil {
		if x, ok := x.Payload.(*StreamTaskIORequest_PayloadUnregisterReq); ok {
			return x.PayloadUnregisterReq
		}
	}
	return nil
}

func (x *StreamTaskIORequest) GetPayloadTaskX11OutputReq() *StreamTaskIORequest_TaskX11OutputReq {
	if x != nil {
		if x, ok := x.Payload.(*StreamTaskIORequest_PayloadTaskX11OutputReq); ok {
			return x.PayloadTaskX11OutputReq
		}
	}
	return nil
}

type isStreamTaskIORequest_Payload interface {
	isStreamTaskIORequest_Payload()
}

type StreamTaskIORequest_PayloadRegisterReq struct {
	PayloadRegisterReq *StreamTaskIORequest_SupervisorRegisterReq `protobuf:"bytes,2,opt,name=payload_register_req,json=payloadRegisterReq,proto3,oneof"`
}

type StreamTaskIORequest_PayloadTaskOutputReq struct {
	PayloadTaskOutputReq *StreamTaskIORequest_TaskOutputReq `protobuf:"bytes,3,opt,name=payload_task_output_req,json=payloadTaskOutputReq,proto3,oneof"`
}

type StreamTaskIORequest_PayloadUnregisterReq struct {
	PayloadUnregisterReq *StreamTaskIORequest_SupervisorUnRegisterReq `protobuf:"bytes,4,opt,name=payload_unregister_req,json=payloadUnregisterReq,proto3,oneof"`
}

type StreamTaskIORequest_PayloadTaskX11OutputReq struct {
	PayloadTaskX11OutputReq *StreamTaskIORequest_TaskX11OutputReq `protobuf:"bytes,5,opt,name=payload_task_x11_output_req,json=payloadTaskX11OutputReq,proto3,oneof"`
}

func (*StreamTaskIORequest_PayloadRegisterReq) isStreamTaskIORequest_Payload() {}

func (*StreamTaskIORequest_PayloadTaskOutputReq) isStreamTaskIORequest_Payload() {}

func (*StreamTaskIORequest_PayloadUnregisterReq) isStreamTaskIORequest_Payload() {}

func (*StreamTaskIORequest_PayloadTaskX11OutputReq) isStreamTaskIORequest_Payload() {}

type StreamTaskIOReply struct {
	state protoimpl.MessageState                `protogen:"open.v1"`
	Type  StreamTaskIOReply_SupervisorReplyType `protobuf:"varint,1,opt,name=type,proto3,enum=crane.grpc.StreamTaskIOReply_SupervisorReplyType" json:"type,omitempty"`
	// Types that are valid to be assigned to Payload:
	//
	//	*StreamTaskIOReply_PayloadSupervisorRegisterReply
	//	*StreamTaskIOReply_PayloadTaskInputReq
	//	*StreamTaskIOReply_PayloadSupervisorUnregisterReply
	//	*StreamTaskIOReply_PayloadTaskX11InputReq
	Payload       isStreamTaskIOReply_Payload `protobuf_oneof:"payload"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *StreamTaskIOReply) Reset() {
	*x = StreamTaskIOReply{}
	mi := &file_Crane_proto_msgTypes[95]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StreamTaskIOReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StreamTaskIOReply) ProtoMessage() {}

func (x *StreamTaskIOReply) ProtoReflect() protoreflect.Message {
	mi := &file_Crane_proto_msgTypes[95]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StreamTaskIOReply.ProtoReflect.Descriptor instead.
func (*StreamTaskIOReply) Descriptor() ([]byte, []int) {
	return file_Crane_proto_rawDescGZIP(), []int{95}
}

func (x *StreamTaskIOReply) GetType() StreamTaskIOReply_SupervisorReplyType {
	if x != nil {
		return x.Type
	}
	return StreamTaskIOReply_SUPERVISOR_REGISTER_REPLY
}

func (x *StreamTaskIOReply) GetPayload() isStreamTaskIOReply_Payload {
	if x != nil {
		return x.Payload
	}
	return nil
}

func (x *StreamTaskIOReply) GetPayloadSupervisorRegisterReply() *StreamTaskIOReply_SupervisorRegisterReply {
	if x != nil {
		if x, ok := x.Payload.(*StreamTaskIOReply_PayloadSupervisorRegisterReply); ok {
			return x.PayloadSupervisorRegisterReply
		}
	}
	return nil
}

func (x *StreamTaskIOReply) GetPayloadTaskInputReq() *StreamTaskIOReply_TaskInputReq {
	if x != nil {
		if x, ok := x.Payload.(*StreamTaskIOReply_PayloadTaskInputReq); ok {
			return x.PayloadTaskInputReq
		}
	}
	return nil
}

func (x *StreamTaskIOReply) GetPayloadSupervisorUnregisterReply() *StreamTaskIOReply_SupervisorUnregisterReply {
	if x != nil {
		if x, ok := x.Payload.(*StreamTaskIOReply_PayloadSupervisorUnregisterReply); ok {
			return x.PayloadSupervisorUnregisterReply
		}
	}
	return nil
}

func (x *StreamTaskIOReply) GetPayloadTaskX11InputReq() *StreamTaskIOReply_TaskX11InputReq {
	if x != nil {
		if x, ok := x.Payload.(*StreamTaskIOReply_PayloadTaskX11InputReq); ok {
			return x.PayloadTaskX11InputReq
		}
	}
	return nil
}

type isStreamTaskIOReply_Payload interface {
	isStreamTaskIOReply_Payload()
}

type StreamTaskIOReply_PayloadSupervisorRegisterReply struct {
	PayloadSupervisorRegisterReply *StreamTaskIOReply_SupervisorRegisterReply `protobuf:"bytes,2,opt,name=payload_supervisor_register_reply,json=payloadSupervisorRegisterReply,proto3,oneof"`
}

type StreamTaskIOReply_PayloadTaskInputReq struct {
	PayloadTaskInputReq *StreamTaskIOReply_TaskInputReq `protobuf:"bytes,3,opt,name=payload_task_input_req,json=payloadTaskInputReq,proto3,oneof"`
}

type StreamTaskIOReply_PayloadSupervisorUnregisterReply struct {
	PayloadSupervisorUnregisterReply *StreamTaskIOReply_SupervisorUnregisterReply `protobuf:"bytes,4,opt,name=payload_supervisor_unregister_reply,json=payloadSupervisorUnregisterReply,proto3,oneof"`
}

type StreamTaskIOReply_PayloadTaskX11InputReq struct {
	PayloadTaskX11InputReq *StreamTaskIOReply_TaskX11InputReq `protobuf:"bytes,5,opt,name=payload_task_x11_input_req,json=payloadTaskX11InputReq,proto3,oneof"`
}

func (*StreamTaskIOReply_PayloadSupervisorRegisterReply) isStreamTaskIOReply_Payload() {}

func (*StreamTaskIOReply_PayloadTaskInputReq) isStreamTaskIOReply_Payload() {}

func (*StreamTaskIOReply_PayloadSupervisorUnregisterReply) isStreamTaskIOReply_Payload() {}

func (*StreamTaskIOReply_PayloadTaskX11InputReq) isStreamTaskIOReply_Payload() {}

type PowerStateChangeRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	CranedId      string                 `protobuf:"bytes,1,opt,name=craned_id,json=cranedId,proto3" json:"craned_id,omitempty"`
	State         CranedPowerState       `protobuf:"varint,2,opt,name=state,proto3,enum=crane.grpc.CranedPowerState" json:"state,omitempty"`
	Reason        string                 `protobuf:"bytes,3,opt,name=reason,proto3" json:"reason,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PowerStateChangeRequest) Reset() {
	*x = PowerStateChangeRequest{}
	mi := &file_Crane_proto_msgTypes[96]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PowerStateChangeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PowerStateChangeRequest) ProtoMessage() {}

func (x *PowerStateChangeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_Crane_proto_msgTypes[96]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PowerStateChangeRequest.ProtoReflect.Descriptor instead.
func (*PowerStateChangeRequest) Descriptor() ([]byte, []int) {
	return file_Crane_proto_rawDescGZIP(), []int{96}
}

func (x *PowerStateChangeRequest) GetCranedId() string {
	if x != nil {
		return x.CranedId
	}
	return ""
}

func (x *PowerStateChangeRequest) GetState() CranedPowerState {
	if x != nil {
		return x.State
	}
	return CranedPowerState_CRANE_POWER_ACTIVE
}

func (x *PowerStateChangeRequest) GetReason() string {
	if x != nil {
		return x.Reason
	}
	return ""
}

type PowerStateChangeReply struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Ok            bool                   `protobuf:"varint,1,opt,name=ok,proto3" json:"ok,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PowerStateChangeReply) Reset() {
	*x = PowerStateChangeReply{}
	mi := &file_Crane_proto_msgTypes[97]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PowerStateChangeReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PowerStateChangeReply) ProtoMessage() {}

func (x *PowerStateChangeReply) ProtoReflect() protoreflect.Message {
	mi := &file_Crane_proto_msgTypes[97]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PowerStateChangeReply.ProtoReflect.Descriptor instead.
func (*PowerStateChangeReply) Descriptor() ([]byte, []int) {
	return file_Crane_proto_rawDescGZIP(), []int{97}
}

func (x *PowerStateChangeReply) GetOk() bool {
	if x != nil {
		return x.Ok
	}
	return false
}

type EnableAutoPowerControlRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Uid           uint32                 `protobuf:"varint,1,opt,name=uid,proto3" json:"uid,omitempty"`
	CranedIds     []string               `protobuf:"bytes,2,rep,name=craned_ids,json=cranedIds,proto3" json:"craned_ids,omitempty"`
	Enable        bool                   `protobuf:"varint,3,opt,name=enable,proto3" json:"enable,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *EnableAutoPowerControlRequest) Reset() {
	*x = EnableAutoPowerControlRequest{}
	mi := &file_Crane_proto_msgTypes[98]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *EnableAutoPowerControlRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EnableAutoPowerControlRequest) ProtoMessage() {}

func (x *EnableAutoPowerControlRequest) ProtoReflect() protoreflect.Message {
	mi := &file_Crane_proto_msgTypes[98]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EnableAutoPowerControlRequest.ProtoReflect.Descriptor instead.
func (*EnableAutoPowerControlRequest) Descriptor() ([]byte, []int) {
	return file_Crane_proto_rawDescGZIP(), []int{98}
}

func (x *EnableAutoPowerControlRequest) GetUid() uint32 {
	if x != nil {
		return x.Uid
	}
	return 0
}

func (x *EnableAutoPowerControlRequest) GetCranedIds() []string {
	if x != nil {
		return x.CranedIds
	}
	return nil
}

func (x *EnableAutoPowerControlRequest) GetEnable() bool {
	if x != nil {
		return x.Enable
	}
	return false
}

type EnableAutoPowerControlReply struct {
	state              protoimpl.MessageState `protogen:"open.v1"`
	ModifiedNodes      []string               `protobuf:"bytes,1,rep,name=modified_nodes,json=modifiedNodes,proto3" json:"modified_nodes,omitempty"`
	NotModifiedNodes   []string               `protobuf:"bytes,2,rep,name=not_modified_nodes,json=notModifiedNodes,proto3" json:"not_modified_nodes,omitempty"`
	NotModifiedReasons []string               `protobuf:"bytes,3,rep,name=not_modified_reasons,json=notModifiedReasons,proto3" json:"not_modified_reasons,omitempty"`
	unknownFields      protoimpl.UnknownFields
	sizeCache          protoimpl.SizeCache
}

func (x *EnableAutoPowerControlReply) Reset() {
	*x = EnableAutoPowerControlReply{}
	mi := &file_Crane_proto_msgTypes[99]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *EnableAutoPowerControlReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EnableAutoPowerControlReply) ProtoMessage() {}

func (x *EnableAutoPowerControlReply) ProtoReflect() protoreflect.Message {
	mi := &file_Crane_proto_msgTypes[99]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EnableAutoPowerControlReply.ProtoReflect.Descriptor instead.
func (*EnableAutoPowerControlReply) Descriptor() ([]byte, []int) {
	return file_Crane_proto_rawDescGZIP(), []int{99}
}

func (x *EnableAutoPowerControlReply) GetModifiedNodes() []string {
	if x != nil {
		return x.ModifiedNodes
	}
	return nil
}

func (x *EnableAutoPowerControlReply) GetNotModifiedNodes() []string {
	if x != nil {
		return x.NotModifiedNodes
	}
	return nil
}

func (x *EnableAutoPowerControlReply) GetNotModifiedReasons() []string {
	if x != nil {
		return x.NotModifiedReasons
	}
	return nil
}

type SignUserCertificateRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Uid           uint32                 `protobuf:"varint,1,opt,name=uid,proto3" json:"uid,omitempty"`
	CsrContent    string                 `protobuf:"bytes,2,opt,name=csr_content,json=csrContent,proto3" json:"csr_content,omitempty"`
	AltNames      string                 `protobuf:"bytes,3,opt,name=alt_names,json=altNames,proto3" json:"alt_names,omitempty"` // "localhost, *.domainSuffix"
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SignUserCertificateRequest) Reset() {
	*x = SignUserCertificateRequest{}
	mi := &file_Crane_proto_msgTypes[100]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SignUserCertificateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SignUserCertificateRequest) ProtoMessage() {}

func (x *SignUserCertificateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_Crane_proto_msgTypes[100]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SignUserCertificateRequest.ProtoReflect.Descriptor instead.
func (*SignUserCertificateRequest) Descriptor() ([]byte, []int) {
	return file_Crane_proto_rawDescGZIP(), []int{100}
}

func (x *SignUserCertificateRequest) GetUid() uint32 {
	if x != nil {
		return x.Uid
	}
	return 0
}

func (x *SignUserCertificateRequest) GetCsrContent() string {
	if x != nil {
		return x.CsrContent
	}
	return ""
}

func (x *SignUserCertificateRequest) GetAltNames() string {
	if x != nil {
		return x.AltNames
	}
	return ""
}

type SignUserCertificateResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Ok            bool                   `protobuf:"varint,1,opt,name=ok,proto3" json:"ok,omitempty"`
	Certificate   string                 `protobuf:"bytes,2,opt,name=certificate,proto3" json:"certificate,omitempty"`
	Reason        ErrCode                `protobuf:"varint,3,opt,name=reason,proto3,enum=crane.grpc.ErrCode" json:"reason,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SignUserCertificateResponse) Reset() {
	*x = SignUserCertificateResponse{}
	mi := &file_Crane_proto_msgTypes[101]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SignUserCertificateResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SignUserCertificateResponse) ProtoMessage() {}

func (x *SignUserCertificateResponse) ProtoReflect() protoreflect.Message {
	mi := &file_Crane_proto_msgTypes[101]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SignUserCertificateResponse.ProtoReflect.Descriptor instead.
func (*SignUserCertificateResponse) Descriptor() ([]byte, []int) {
	return file_Crane_proto_rawDescGZIP(), []int{101}
}

func (x *SignUserCertificateResponse) GetOk() bool {
	if x != nil {
		return x.Ok
	}
	return false
}

func (x *SignUserCertificateResponse) GetCertificate() string {
	if x != nil {
		return x.Certificate
	}
	return ""
}

func (x *SignUserCertificateResponse) GetReason() ErrCode {
	if x != nil {
		return x.Reason
	}
	return ErrCode_SUCCESS
}

type ResetUserCredentialRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Uid           uint32                 `protobuf:"varint,1,opt,name=uid,proto3" json:"uid,omitempty"`
	UserList      []string               `protobuf:"bytes,2,rep,name=user_list,json=userList,proto3" json:"user_list,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ResetUserCredentialRequest) Reset() {
	*x = ResetUserCredentialRequest{}
	mi := &file_Crane_proto_msgTypes[102]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ResetUserCredentialRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResetUserCredentialRequest) ProtoMessage() {}

func (x *ResetUserCredentialRequest) ProtoReflect() protoreflect.Message {
	mi := &file_Crane_proto_msgTypes[102]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResetUserCredentialRequest.ProtoReflect.Descriptor instead.
func (*ResetUserCredentialRequest) Descriptor() ([]byte, []int) {
	return file_Crane_proto_rawDescGZIP(), []int{102}
}

func (x *ResetUserCredentialRequest) GetUid() uint32 {
	if x != nil {
		return x.Uid
	}
	return 0
}

func (x *ResetUserCredentialRequest) GetUserList() []string {
	if x != nil {
		return x.UserList
	}
	return nil
}

type ResetUserCredentialReply struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Ok            bool                   `protobuf:"varint,1,opt,name=ok,proto3" json:"ok,omitempty"`
	RichErrorList []*RichError           `protobuf:"bytes,2,rep,name=rich_error_list,json=richErrorList,proto3" json:"rich_error_list,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ResetUserCredentialReply) Reset() {
	*x = ResetUserCredentialReply{}
	mi := &file_Crane_proto_msgTypes[103]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ResetUserCredentialReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResetUserCredentialReply) ProtoMessage() {}

func (x *ResetUserCredentialReply) ProtoReflect() protoreflect.Message {
	mi := &file_Crane_proto_msgTypes[103]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResetUserCredentialReply.ProtoReflect.Descriptor instead.
func (*ResetUserCredentialReply) Descriptor() ([]byte, []int) {
	return file_Crane_proto_rawDescGZIP(), []int{103}
}

func (x *ResetUserCredentialReply) GetOk() bool {
	if x != nil {
		return x.Ok
	}
	return false
}

func (x *ResetUserCredentialReply) GetRichErrorList() []*RichError {
	if x != nil {
		return x.RichErrorList
	}
	return nil
}

type QueryTxnLogRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Uid           uint32                 `protobuf:"varint,1,opt,name=uid,proto3" json:"uid,omitempty"`
	Actor         string                 `protobuf:"bytes,2,opt,name=actor,proto3" json:"actor,omitempty"`
	Target        string                 `protobuf:"bytes,3,opt,name=target,proto3" json:"target,omitempty"`
	Action        string                 `protobuf:"bytes,4,opt,name=action,proto3" json:"action,omitempty"`
	Info          string                 `protobuf:"bytes,5,opt,name=info,proto3" json:"info,omitempty"`
	TimeInterval  *TimeInterval          `protobuf:"bytes,6,opt,name=time_interval,json=timeInterval,proto3" json:"time_interval,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *QueryTxnLogRequest) Reset() {
	*x = QueryTxnLogRequest{}
	mi := &file_Crane_proto_msgTypes[104]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *QueryTxnLogRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryTxnLogRequest) ProtoMessage() {}

func (x *QueryTxnLogRequest) ProtoReflect() protoreflect.Message {
	mi := &file_Crane_proto_msgTypes[104]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryTxnLogRequest.ProtoReflect.Descriptor instead.
func (*QueryTxnLogRequest) Descriptor() ([]byte, []int) {
	return file_Crane_proto_rawDescGZIP(), []int{104}
}

func (x *QueryTxnLogRequest) GetUid() uint32 {
	if x != nil {
		return x.Uid
	}
	return 0
}

func (x *QueryTxnLogRequest) GetActor() string {
	if x != nil {
		return x.Actor
	}
	return ""
}

func (x *QueryTxnLogRequest) GetTarget() string {
	if x != nil {
		return x.Target
	}
	return ""
}

func (x *QueryTxnLogRequest) GetAction() string {
	if x != nil {
		return x.Action
	}
	return ""
}

func (x *QueryTxnLogRequest) GetInfo() string {
	if x != nil {
		return x.Info
	}
	return ""
}

func (x *QueryTxnLogRequest) GetTimeInterval() *TimeInterval {
	if x != nil {
		return x.TimeInterval
	}
	return nil
}

type QueryTxnLogReply struct {
	state         protoimpl.MessageState  `protogen:"open.v1"`
	Ok            bool                    `protobuf:"varint,1,opt,name=ok,proto3" json:"ok,omitempty"`
	Code          ErrCode                 `protobuf:"varint,2,opt,name=code,proto3,enum=crane.grpc.ErrCode" json:"code,omitempty"`
	TxnLogList    []*QueryTxnLogReply_Txn `protobuf:"bytes,3,rep,name=txn_log_list,json=txnLogList,proto3" json:"txn_log_list,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *QueryTxnLogReply) Reset() {
	*x = QueryTxnLogReply{}
	mi := &file_Crane_proto_msgTypes[105]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *QueryTxnLogReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryTxnLogReply) ProtoMessage() {}

func (x *QueryTxnLogReply) ProtoReflect() protoreflect.Message {
	mi := &file_Crane_proto_msgTypes[105]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryTxnLogReply.ProtoReflect.Descriptor instead.
func (*QueryTxnLogReply) Descriptor() ([]byte, []int) {
	return file_Crane_proto_rawDescGZIP(), []int{105}
}

func (x *QueryTxnLogReply) GetOk() bool {
	if x != nil {
		return x.Ok
	}
	return false
}

func (x *QueryTxnLogReply) GetCode() ErrCode {
	if x != nil {
		return x.Code
	}
	return ErrCode_SUCCESS
}

func (x *QueryTxnLogReply) GetTxnLogList() []*QueryTxnLogReply_Txn {
	if x != nil {
		return x.TxnLogList
	}
	return nil
}

type StreamCallocRequest_TaskReq struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	CallocPid     int32                  `protobuf:"varint,1,opt,name=calloc_pid,json=callocPid,proto3" json:"calloc_pid,omitempty"`
	Task          *TaskToCtld            `protobuf:"bytes,2,opt,name=task,proto3" json:"task,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *StreamCallocRequest_TaskReq) Reset() {
	*x = StreamCallocRequest_TaskReq{}
	mi := &file_Crane_proto_msgTypes[111]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StreamCallocRequest_TaskReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StreamCallocRequest_TaskReq) ProtoMessage() {}

func (x *StreamCallocRequest_TaskReq) ProtoReflect() protoreflect.Message {
	mi := &file_Crane_proto_msgTypes[111]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StreamCallocRequest_TaskReq.ProtoReflect.Descriptor instead.
func (*StreamCallocRequest_TaskReq) Descriptor() ([]byte, []int) {
	return file_Crane_proto_rawDescGZIP(), []int{88, 0}
}

func (x *StreamCallocRequest_TaskReq) GetCallocPid() int32 {
	if x != nil {
		return x.CallocPid
	}
	return 0
}

func (x *StreamCallocRequest_TaskReq) GetTask() *TaskToCtld {
	if x != nil {
		return x.Task
	}
	return nil
}

type StreamCallocRequest_TaskCompleteReq struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	TaskId        uint32                 `protobuf:"varint,1,opt,name=task_id,json=taskId,proto3" json:"task_id,omitempty"`
	Status        TaskStatus             `protobuf:"varint,2,opt,name=status,proto3,enum=crane.grpc.TaskStatus" json:"status,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *StreamCallocRequest_TaskCompleteReq) Reset() {
	*x = StreamCallocRequest_TaskCompleteReq{}
	mi := &file_Crane_proto_msgTypes[112]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StreamCallocRequest_TaskCompleteReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StreamCallocRequest_TaskCompleteReq) ProtoMessage() {}

func (x *StreamCallocRequest_TaskCompleteReq) ProtoReflect() protoreflect.Message {
	mi := &file_Crane_proto_msgTypes[112]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StreamCallocRequest_TaskCompleteReq.ProtoReflect.Descriptor instead.
func (*StreamCallocRequest_TaskCompleteReq) Descriptor() ([]byte, []int) {
	return file_Crane_proto_rawDescGZIP(), []int{88, 1}
}

func (x *StreamCallocRequest_TaskCompleteReq) GetTaskId() uint32 {
	if x != nil {
		return x.TaskId
	}
	return 0
}

func (x *StreamCallocRequest_TaskCompleteReq) GetStatus() TaskStatus {
	if x != nil {
		return x.Status
	}
	return TaskStatus_Pending
}

type StreamCallocReply_TaskIdReply struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Ok            bool                   `protobuf:"varint,1,opt,name=ok,proto3" json:"ok,omitempty"`
	TaskId        uint32                 `protobuf:"varint,2,opt,name=task_id,json=taskId,proto3" json:"task_id,omitempty"`
	FailureReason string                 `protobuf:"bytes,3,opt,name=failure_reason,json=failureReason,proto3" json:"failure_reason,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *StreamCallocReply_TaskIdReply) Reset() {
	*x = StreamCallocReply_TaskIdReply{}
	mi := &file_Crane_proto_msgTypes[113]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StreamCallocReply_TaskIdReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StreamCallocReply_TaskIdReply) ProtoMessage() {}

func (x *StreamCallocReply_TaskIdReply) ProtoReflect() protoreflect.Message {
	mi := &file_Crane_proto_msgTypes[113]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StreamCallocReply_TaskIdReply.ProtoReflect.Descriptor instead.
func (*StreamCallocReply_TaskIdReply) Descriptor() ([]byte, []int) {
	return file_Crane_proto_rawDescGZIP(), []int{89, 0}
}

func (x *StreamCallocReply_TaskIdReply) GetOk() bool {
	if x != nil {
		return x.Ok
	}
	return false
}

func (x *StreamCallocReply_TaskIdReply) GetTaskId() uint32 {
	if x != nil {
		return x.TaskId
	}
	return 0
}

func (x *StreamCallocReply_TaskIdReply) GetFailureReason() string {
	if x != nil {
		return x.FailureReason
	}
	return ""
}

type StreamCallocReply_TaskResAllocatedReply struct {
	state                protoimpl.MessageState `protogen:"open.v1"`
	Ok                   bool                   `protobuf:"varint,1,opt,name=ok,proto3" json:"ok,omitempty"`
	AllocatedCranedRegex string                 `protobuf:"bytes,2,opt,name=allocated_craned_regex,json=allocatedCranedRegex,proto3" json:"allocated_craned_regex,omitempty"`
	unknownFields        protoimpl.UnknownFields
	sizeCache            protoimpl.SizeCache
}

func (x *StreamCallocReply_TaskResAllocatedReply) Reset() {
	*x = StreamCallocReply_TaskResAllocatedReply{}
	mi := &file_Crane_proto_msgTypes[114]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StreamCallocReply_TaskResAllocatedReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StreamCallocReply_TaskResAllocatedReply) ProtoMessage() {}

func (x *StreamCallocReply_TaskResAllocatedReply) ProtoReflect() protoreflect.Message {
	mi := &file_Crane_proto_msgTypes[114]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StreamCallocReply_TaskResAllocatedReply.ProtoReflect.Descriptor instead.
func (*StreamCallocReply_TaskResAllocatedReply) Descriptor() ([]byte, []int) {
	return file_Crane_proto_rawDescGZIP(), []int{89, 1}
}

func (x *StreamCallocReply_TaskResAllocatedReply) GetOk() bool {
	if x != nil {
		return x.Ok
	}
	return false
}

func (x *StreamCallocReply_TaskResAllocatedReply) GetAllocatedCranedRegex() string {
	if x != nil {
		return x.AllocatedCranedRegex
	}
	return ""
}

type StreamCallocReply_TaskCancelRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	TaskId        uint32                 `protobuf:"varint,1,opt,name=task_id,json=taskId,proto3" json:"task_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *StreamCallocReply_TaskCancelRequest) Reset() {
	*x = StreamCallocReply_TaskCancelRequest{}
	mi := &file_Crane_proto_msgTypes[115]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StreamCallocReply_TaskCancelRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StreamCallocReply_TaskCancelRequest) ProtoMessage() {}

func (x *StreamCallocReply_TaskCancelRequest) ProtoReflect() protoreflect.Message {
	mi := &file_Crane_proto_msgTypes[115]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StreamCallocReply_TaskCancelRequest.ProtoReflect.Descriptor instead.
func (*StreamCallocReply_TaskCancelRequest) Descriptor() ([]byte, []int) {
	return file_Crane_proto_rawDescGZIP(), []int{89, 2}
}

func (x *StreamCallocReply_TaskCancelRequest) GetTaskId() uint32 {
	if x != nil {
		return x.TaskId
	}
	return 0
}

type StreamCallocReply_TaskCompletionAckReply struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Ok            bool                   `protobuf:"varint,1,opt,name=ok,proto3" json:"ok,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *StreamCallocReply_TaskCompletionAckReply) Reset() {
	*x = StreamCallocReply_TaskCompletionAckReply{}
	mi := &file_Crane_proto_msgTypes[116]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StreamCallocReply_TaskCompletionAckReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StreamCallocReply_TaskCompletionAckReply) ProtoMessage() {}

func (x *StreamCallocReply_TaskCompletionAckReply) ProtoReflect() protoreflect.Message {
	mi := &file_Crane_proto_msgTypes[116]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StreamCallocReply_TaskCompletionAckReply.ProtoReflect.Descriptor instead.
func (*StreamCallocReply_TaskCompletionAckReply) Descriptor() ([]byte, []int) {
	return file_Crane_proto_rawDescGZIP(), []int{89, 3}
}

func (x *StreamCallocReply_TaskCompletionAckReply) GetOk() bool {
	if x != nil {
		return x.Ok
	}
	return false
}

type StreamCforedRequest_CforedReg struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	CforedName    string                 `protobuf:"bytes,1,opt,name=cfored_name,json=cforedName,proto3" json:"cfored_name,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *StreamCforedRequest_CforedReg) Reset() {
	*x = StreamCforedRequest_CforedReg{}
	mi := &file_Crane_proto_msgTypes[117]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StreamCforedRequest_CforedReg) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StreamCforedRequest_CforedReg) ProtoMessage() {}

func (x *StreamCforedRequest_CforedReg) ProtoReflect() protoreflect.Message {
	mi := &file_Crane_proto_msgTypes[117]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StreamCforedRequest_CforedReg.ProtoReflect.Descriptor instead.
func (*StreamCforedRequest_CforedReg) Descriptor() ([]byte, []int) {
	return file_Crane_proto_rawDescGZIP(), []int{90, 0}
}

func (x *StreamCforedRequest_CforedReg) GetCforedName() string {
	if x != nil {
		return x.CforedName
	}
	return ""
}

type StreamCforedRequest_TaskReq struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	CforedName    string                 `protobuf:"bytes,1,opt,name=cfored_name,json=cforedName,proto3" json:"cfored_name,omitempty"`
	Pid           int32                  `protobuf:"varint,2,opt,name=pid,proto3" json:"pid,omitempty"`
	Task          *TaskToCtld            `protobuf:"bytes,3,opt,name=task,proto3" json:"task,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *StreamCforedRequest_TaskReq) Reset() {
	*x = StreamCforedRequest_TaskReq{}
	mi := &file_Crane_proto_msgTypes[118]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StreamCforedRequest_TaskReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StreamCforedRequest_TaskReq) ProtoMessage() {}

func (x *StreamCforedRequest_TaskReq) ProtoReflect() protoreflect.Message {
	mi := &file_Crane_proto_msgTypes[118]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StreamCforedRequest_TaskReq.ProtoReflect.Descriptor instead.
func (*StreamCforedRequest_TaskReq) Descriptor() ([]byte, []int) {
	return file_Crane_proto_rawDescGZIP(), []int{90, 1}
}

func (x *StreamCforedRequest_TaskReq) GetCforedName() string {
	if x != nil {
		return x.CforedName
	}
	return ""
}

func (x *StreamCforedRequest_TaskReq) GetPid() int32 {
	if x != nil {
		return x.Pid
	}
	return 0
}

func (x *StreamCforedRequest_TaskReq) GetTask() *TaskToCtld {
	if x != nil {
		return x.Task
	}
	return nil
}

type StreamCforedRequest_TaskCompleteReq struct {
	state           protoimpl.MessageState `protogen:"open.v1"`
	CforedName      string                 `protobuf:"bytes,1,opt,name=cfored_name,json=cforedName,proto3" json:"cfored_name,omitempty"`
	TaskId          uint32                 `protobuf:"varint,2,opt,name=task_id,json=taskId,proto3" json:"task_id,omitempty"`
	Status          TaskStatus             `protobuf:"varint,3,opt,name=status,proto3,enum=crane.grpc.TaskStatus" json:"status,omitempty"`
	InteractiveType InteractiveTaskType    `protobuf:"varint,4,opt,name=interactive_type,json=interactiveType,proto3,enum=crane.grpc.InteractiveTaskType" json:"interactive_type,omitempty"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *StreamCforedRequest_TaskCompleteReq) Reset() {
	*x = StreamCforedRequest_TaskCompleteReq{}
	mi := &file_Crane_proto_msgTypes[119]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StreamCforedRequest_TaskCompleteReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StreamCforedRequest_TaskCompleteReq) ProtoMessage() {}

func (x *StreamCforedRequest_TaskCompleteReq) ProtoReflect() protoreflect.Message {
	mi := &file_Crane_proto_msgTypes[119]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StreamCforedRequest_TaskCompleteReq.ProtoReflect.Descriptor instead.
func (*StreamCforedRequest_TaskCompleteReq) Descriptor() ([]byte, []int) {
	return file_Crane_proto_rawDescGZIP(), []int{90, 2}
}

func (x *StreamCforedRequest_TaskCompleteReq) GetCforedName() string {
	if x != nil {
		return x.CforedName
	}
	return ""
}

func (x *StreamCforedRequest_TaskCompleteReq) GetTaskId() uint32 {
	if x != nil {
		return x.TaskId
	}
	return 0
}

func (x *StreamCforedRequest_TaskCompleteReq) GetStatus() TaskStatus {
	if x != nil {
		return x.Status
	}
	return TaskStatus_Pending
}

func (x *StreamCforedRequest_TaskCompleteReq) GetInteractiveType() InteractiveTaskType {
	if x != nil {
		return x.InteractiveType
	}
	return InteractiveTaskType_Calloc
}

type StreamCforedRequest_GracefulExitReq struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	CforedName    string                 `protobuf:"bytes,1,opt,name=cfored_name,json=cforedName,proto3" json:"cfored_name,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *StreamCforedRequest_GracefulExitReq) Reset() {
	*x = StreamCforedRequest_GracefulExitReq{}
	mi := &file_Crane_proto_msgTypes[120]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StreamCforedRequest_GracefulExitReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StreamCforedRequest_GracefulExitReq) ProtoMessage() {}

func (x *StreamCforedRequest_GracefulExitReq) ProtoReflect() protoreflect.Message {
	mi := &file_Crane_proto_msgTypes[120]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StreamCforedRequest_GracefulExitReq.ProtoReflect.Descriptor instead.
func (*StreamCforedRequest_GracefulExitReq) Descriptor() ([]byte, []int) {
	return file_Crane_proto_rawDescGZIP(), []int{90, 3}
}

func (x *StreamCforedRequest_GracefulExitReq) GetCforedName() string {
	if x != nil {
		return x.CforedName
	}
	return ""
}

type StreamCtldReply_TaskIdReply struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Pid           int32                  `protobuf:"varint,1,opt,name=pid,proto3" json:"pid,omitempty"`
	Ok            bool                   `protobuf:"varint,2,opt,name=ok,proto3" json:"ok,omitempty"`
	TaskId        uint32                 `protobuf:"varint,3,opt,name=task_id,json=taskId,proto3" json:"task_id,omitempty"`
	FailureReason string                 `protobuf:"bytes,4,opt,name=failure_reason,json=failureReason,proto3" json:"failure_reason,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *StreamCtldReply_TaskIdReply) Reset() {
	*x = StreamCtldReply_TaskIdReply{}
	mi := &file_Crane_proto_msgTypes[121]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StreamCtldReply_TaskIdReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StreamCtldReply_TaskIdReply) ProtoMessage() {}

func (x *StreamCtldReply_TaskIdReply) ProtoReflect() protoreflect.Message {
	mi := &file_Crane_proto_msgTypes[121]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StreamCtldReply_TaskIdReply.ProtoReflect.Descriptor instead.
func (*StreamCtldReply_TaskIdReply) Descriptor() ([]byte, []int) {
	return file_Crane_proto_rawDescGZIP(), []int{91, 0}
}

func (x *StreamCtldReply_TaskIdReply) GetPid() int32 {
	if x != nil {
		return x.Pid
	}
	return 0
}

func (x *StreamCtldReply_TaskIdReply) GetOk() bool {
	if x != nil {
		return x.Ok
	}
	return false
}

func (x *StreamCtldReply_TaskIdReply) GetTaskId() uint32 {
	if x != nil {
		return x.TaskId
	}
	return 0
}

func (x *StreamCtldReply_TaskIdReply) GetFailureReason() string {
	if x != nil {
		return x.FailureReason
	}
	return ""
}

type StreamCtldReply_TaskResAllocatedReply struct {
	state                protoimpl.MessageState `protogen:"open.v1"`
	TaskId               uint32                 `protobuf:"varint,1,opt,name=task_id,json=taskId,proto3" json:"task_id,omitempty"`
	Ok                   bool                   `protobuf:"varint,2,opt,name=ok,proto3" json:"ok,omitempty"`
	AllocatedCranedRegex string                 `protobuf:"bytes,3,opt,name=allocated_craned_regex,json=allocatedCranedRegex,proto3" json:"allocated_craned_regex,omitempty"`
	FailureReason        string                 `protobuf:"bytes,4,opt,name=failure_reason,json=failureReason,proto3" json:"failure_reason,omitempty"`
	CranedIds            []string               `protobuf:"bytes,5,rep,name=craned_ids,json=cranedIds,proto3" json:"craned_ids,omitempty"`
	unknownFields        protoimpl.UnknownFields
	sizeCache            protoimpl.SizeCache
}

func (x *StreamCtldReply_TaskResAllocatedReply) Reset() {
	*x = StreamCtldReply_TaskResAllocatedReply{}
	mi := &file_Crane_proto_msgTypes[122]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StreamCtldReply_TaskResAllocatedReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StreamCtldReply_TaskResAllocatedReply) ProtoMessage() {}

func (x *StreamCtldReply_TaskResAllocatedReply) ProtoReflect() protoreflect.Message {
	mi := &file_Crane_proto_msgTypes[122]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StreamCtldReply_TaskResAllocatedReply.ProtoReflect.Descriptor instead.
func (*StreamCtldReply_TaskResAllocatedReply) Descriptor() ([]byte, []int) {
	return file_Crane_proto_rawDescGZIP(), []int{91, 1}
}

func (x *StreamCtldReply_TaskResAllocatedReply) GetTaskId() uint32 {
	if x != nil {
		return x.TaskId
	}
	return 0
}

func (x *StreamCtldReply_TaskResAllocatedReply) GetOk() bool {
	if x != nil {
		return x.Ok
	}
	return false
}

func (x *StreamCtldReply_TaskResAllocatedReply) GetAllocatedCranedRegex() string {
	if x != nil {
		return x.AllocatedCranedRegex
	}
	return ""
}

func (x *StreamCtldReply_TaskResAllocatedReply) GetFailureReason() string {
	if x != nil {
		return x.FailureReason
	}
	return ""
}

func (x *StreamCtldReply_TaskResAllocatedReply) GetCranedIds() []string {
	if x != nil {
		return x.CranedIds
	}
	return nil
}

type StreamCtldReply_TaskCancelRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	TaskId        uint32                 `protobuf:"varint,1,opt,name=task_id,json=taskId,proto3" json:"task_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *StreamCtldReply_TaskCancelRequest) Reset() {
	*x = StreamCtldReply_TaskCancelRequest{}
	mi := &file_Crane_proto_msgTypes[123]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StreamCtldReply_TaskCancelRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StreamCtldReply_TaskCancelRequest) ProtoMessage() {}

func (x *StreamCtldReply_TaskCancelRequest) ProtoReflect() protoreflect.Message {
	mi := &file_Crane_proto_msgTypes[123]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StreamCtldReply_TaskCancelRequest.ProtoReflect.Descriptor instead.
func (*StreamCtldReply_TaskCancelRequest) Descriptor() ([]byte, []int) {
	return file_Crane_proto_rawDescGZIP(), []int{91, 2}
}

func (x *StreamCtldReply_TaskCancelRequest) GetTaskId() uint32 {
	if x != nil {
		return x.TaskId
	}
	return 0
}

type StreamCtldReply_TaskCompletionAckReply struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	TaskId        uint32                 `protobuf:"varint,1,opt,name=task_id,json=taskId,proto3" json:"task_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *StreamCtldReply_TaskCompletionAckReply) Reset() {
	*x = StreamCtldReply_TaskCompletionAckReply{}
	mi := &file_Crane_proto_msgTypes[124]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StreamCtldReply_TaskCompletionAckReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StreamCtldReply_TaskCompletionAckReply) ProtoMessage() {}

func (x *StreamCtldReply_TaskCompletionAckReply) ProtoReflect() protoreflect.Message {
	mi := &file_Crane_proto_msgTypes[124]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StreamCtldReply_TaskCompletionAckReply.ProtoReflect.Descriptor instead.
func (*StreamCtldReply_TaskCompletionAckReply) Descriptor() ([]byte, []int) {
	return file_Crane_proto_rawDescGZIP(), []int{91, 3}
}

func (x *StreamCtldReply_TaskCompletionAckReply) GetTaskId() uint32 {
	if x != nil {
		return x.TaskId
	}
	return 0
}

type StreamCtldReply_CforedRegistrationAck struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Ok            bool                   `protobuf:"varint,1,opt,name=ok,proto3" json:"ok,omitempty"`
	FailureReason string                 `protobuf:"bytes,2,opt,name=failure_reason,json=failureReason,proto3" json:"failure_reason,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *StreamCtldReply_CforedRegistrationAck) Reset() {
	*x = StreamCtldReply_CforedRegistrationAck{}
	mi := &file_Crane_proto_msgTypes[125]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StreamCtldReply_CforedRegistrationAck) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StreamCtldReply_CforedRegistrationAck) ProtoMessage() {}

func (x *StreamCtldReply_CforedRegistrationAck) ProtoReflect() protoreflect.Message {
	mi := &file_Crane_proto_msgTypes[125]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StreamCtldReply_CforedRegistrationAck.ProtoReflect.Descriptor instead.
func (*StreamCtldReply_CforedRegistrationAck) Descriptor() ([]byte, []int) {
	return file_Crane_proto_rawDescGZIP(), []int{91, 4}
}

func (x *StreamCtldReply_CforedRegistrationAck) GetOk() bool {
	if x != nil {
		return x.Ok
	}
	return false
}

func (x *StreamCtldReply_CforedRegistrationAck) GetFailureReason() string {
	if x != nil {
		return x.FailureReason
	}
	return ""
}

type StreamCtldReply_CforedGracefulExitAck struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Ok            bool                   `protobuf:"varint,1,opt,name=ok,proto3" json:"ok,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *StreamCtldReply_CforedGracefulExitAck) Reset() {
	*x = StreamCtldReply_CforedGracefulExitAck{}
	mi := &file_Crane_proto_msgTypes[126]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StreamCtldReply_CforedGracefulExitAck) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StreamCtldReply_CforedGracefulExitAck) ProtoMessage() {}

func (x *StreamCtldReply_CforedGracefulExitAck) ProtoReflect() protoreflect.Message {
	mi := &file_Crane_proto_msgTypes[126]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StreamCtldReply_CforedGracefulExitAck.ProtoReflect.Descriptor instead.
func (*StreamCtldReply_CforedGracefulExitAck) Descriptor() ([]byte, []int) {
	return file_Crane_proto_rawDescGZIP(), []int{91, 5}
}

func (x *StreamCtldReply_CforedGracefulExitAck) GetOk() bool {
	if x != nil {
		return x.Ok
	}
	return false
}

type StreamCrunRequest_TaskReq struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	CrunPid       int32                  `protobuf:"varint,1,opt,name=crun_pid,json=crunPid,proto3" json:"crun_pid,omitempty"`
	Task          *TaskToCtld            `protobuf:"bytes,2,opt,name=task,proto3" json:"task,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *StreamCrunRequest_TaskReq) Reset() {
	*x = StreamCrunRequest_TaskReq{}
	mi := &file_Crane_proto_msgTypes[127]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StreamCrunRequest_TaskReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StreamCrunRequest_TaskReq) ProtoMessage() {}

func (x *StreamCrunRequest_TaskReq) ProtoReflect() protoreflect.Message {
	mi := &file_Crane_proto_msgTypes[127]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StreamCrunRequest_TaskReq.ProtoReflect.Descriptor instead.
func (*StreamCrunRequest_TaskReq) Descriptor() ([]byte, []int) {
	return file_Crane_proto_rawDescGZIP(), []int{92, 0}
}

func (x *StreamCrunRequest_TaskReq) GetCrunPid() int32 {
	if x != nil {
		return x.CrunPid
	}
	return 0
}

func (x *StreamCrunRequest_TaskReq) GetTask() *TaskToCtld {
	if x != nil {
		return x.Task
	}
	return nil
}

type StreamCrunRequest_TaskCompleteReq struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	TaskId        uint32                 `protobuf:"varint,1,opt,name=task_id,json=taskId,proto3" json:"task_id,omitempty"`
	Status        TaskStatus             `protobuf:"varint,2,opt,name=status,proto3,enum=crane.grpc.TaskStatus" json:"status,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *StreamCrunRequest_TaskCompleteReq) Reset() {
	*x = StreamCrunRequest_TaskCompleteReq{}
	mi := &file_Crane_proto_msgTypes[128]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StreamCrunRequest_TaskCompleteReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StreamCrunRequest_TaskCompleteReq) ProtoMessage() {}

func (x *StreamCrunRequest_TaskCompleteReq) ProtoReflect() protoreflect.Message {
	mi := &file_Crane_proto_msgTypes[128]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StreamCrunRequest_TaskCompleteReq.ProtoReflect.Descriptor instead.
func (*StreamCrunRequest_TaskCompleteReq) Descriptor() ([]byte, []int) {
	return file_Crane_proto_rawDescGZIP(), []int{92, 1}
}

func (x *StreamCrunRequest_TaskCompleteReq) GetTaskId() uint32 {
	if x != nil {
		return x.TaskId
	}
	return 0
}

func (x *StreamCrunRequest_TaskCompleteReq) GetStatus() TaskStatus {
	if x != nil {
		return x.Status
	}
	return TaskStatus_Pending
}

type StreamCrunRequest_TaskIOForwardReq struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	TaskId        uint32                 `protobuf:"varint,1,opt,name=task_id,json=taskId,proto3" json:"task_id,omitempty"`
	Msg           []byte                 `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
	Eof           bool                   `protobuf:"varint,3,opt,name=eof,proto3" json:"eof,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *StreamCrunRequest_TaskIOForwardReq) Reset() {
	*x = StreamCrunRequest_TaskIOForwardReq{}
	mi := &file_Crane_proto_msgTypes[129]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StreamCrunRequest_TaskIOForwardReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StreamCrunRequest_TaskIOForwardReq) ProtoMessage() {}

func (x *StreamCrunRequest_TaskIOForwardReq) ProtoReflect() protoreflect.Message {
	mi := &file_Crane_proto_msgTypes[129]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StreamCrunRequest_TaskIOForwardReq.ProtoReflect.Descriptor instead.
func (*StreamCrunRequest_TaskIOForwardReq) Descriptor() ([]byte, []int) {
	return file_Crane_proto_rawDescGZIP(), []int{92, 2}
}

func (x *StreamCrunRequest_TaskIOForwardReq) GetTaskId() uint32 {
	if x != nil {
		return x.TaskId
	}
	return 0
}

func (x *StreamCrunRequest_TaskIOForwardReq) GetMsg() []byte {
	if x != nil {
		return x.Msg
	}
	return nil
}

func (x *StreamCrunRequest_TaskIOForwardReq) GetEof() bool {
	if x != nil {
		return x.Eof
	}
	return false
}

type StreamCrunRequest_TaskX11ForwardReq struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	TaskId        uint32                 `protobuf:"varint,1,opt,name=task_id,json=taskId,proto3" json:"task_id,omitempty"`
	Msg           []byte                 `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *StreamCrunRequest_TaskX11ForwardReq) Reset() {
	*x = StreamCrunRequest_TaskX11ForwardReq{}
	mi := &file_Crane_proto_msgTypes[130]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StreamCrunRequest_TaskX11ForwardReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StreamCrunRequest_TaskX11ForwardReq) ProtoMessage() {}

func (x *StreamCrunRequest_TaskX11ForwardReq) ProtoReflect() protoreflect.Message {
	mi := &file_Crane_proto_msgTypes[130]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StreamCrunRequest_TaskX11ForwardReq.ProtoReflect.Descriptor instead.
func (*StreamCrunRequest_TaskX11ForwardReq) Descriptor() ([]byte, []int) {
	return file_Crane_proto_rawDescGZIP(), []int{92, 3}
}

func (x *StreamCrunRequest_TaskX11ForwardReq) GetTaskId() uint32 {
	if x != nil {
		return x.TaskId
	}
	return 0
}

func (x *StreamCrunRequest_TaskX11ForwardReq) GetMsg() []byte {
	if x != nil {
		return x.Msg
	}
	return nil
}

type StreamCrunReply_TaskIdReply struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Ok            bool                   `protobuf:"varint,1,opt,name=ok,proto3" json:"ok,omitempty"`
	TaskId        uint32                 `protobuf:"varint,2,opt,name=task_id,json=taskId,proto3" json:"task_id,omitempty"`
	FailureReason string                 `protobuf:"bytes,3,opt,name=failure_reason,json=failureReason,proto3" json:"failure_reason,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *StreamCrunReply_TaskIdReply) Reset() {
	*x = StreamCrunReply_TaskIdReply{}
	mi := &file_Crane_proto_msgTypes[131]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StreamCrunReply_TaskIdReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StreamCrunReply_TaskIdReply) ProtoMessage() {}

func (x *StreamCrunReply_TaskIdReply) ProtoReflect() protoreflect.Message {
	mi := &file_Crane_proto_msgTypes[131]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StreamCrunReply_TaskIdReply.ProtoReflect.Descriptor instead.
func (*StreamCrunReply_TaskIdReply) Descriptor() ([]byte, []int) {
	return file_Crane_proto_rawDescGZIP(), []int{93, 0}
}

func (x *StreamCrunReply_TaskIdReply) GetOk() bool {
	if x != nil {
		return x.Ok
	}
	return false
}

func (x *StreamCrunReply_TaskIdReply) GetTaskId() uint32 {
	if x != nil {
		return x.TaskId
	}
	return 0
}

func (x *StreamCrunReply_TaskIdReply) GetFailureReason() string {
	if x != nil {
		return x.FailureReason
	}
	return ""
}

type StreamCrunReply_TaskResAllocatedReply struct {
	state                protoimpl.MessageState `protogen:"open.v1"`
	Ok                   bool                   `protobuf:"varint,1,opt,name=ok,proto3" json:"ok,omitempty"`
	AllocatedCranedRegex string                 `protobuf:"bytes,2,opt,name=allocated_craned_regex,json=allocatedCranedRegex,proto3" json:"allocated_craned_regex,omitempty"`
	unknownFields        protoimpl.UnknownFields
	sizeCache            protoimpl.SizeCache
}

func (x *StreamCrunReply_TaskResAllocatedReply) Reset() {
	*x = StreamCrunReply_TaskResAllocatedReply{}
	mi := &file_Crane_proto_msgTypes[132]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StreamCrunReply_TaskResAllocatedReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StreamCrunReply_TaskResAllocatedReply) ProtoMessage() {}

func (x *StreamCrunReply_TaskResAllocatedReply) ProtoReflect() protoreflect.Message {
	mi := &file_Crane_proto_msgTypes[132]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StreamCrunReply_TaskResAllocatedReply.ProtoReflect.Descriptor instead.
func (*StreamCrunReply_TaskResAllocatedReply) Descriptor() ([]byte, []int) {
	return file_Crane_proto_rawDescGZIP(), []int{93, 1}
}

func (x *StreamCrunReply_TaskResAllocatedReply) GetOk() bool {
	if x != nil {
		return x.Ok
	}
	return false
}

func (x *StreamCrunReply_TaskResAllocatedReply) GetAllocatedCranedRegex() string {
	if x != nil {
		return x.AllocatedCranedRegex
	}
	return ""
}

type StreamCrunReply_TaskCancelRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	TaskId        uint32                 `protobuf:"varint,1,opt,name=task_id,json=taskId,proto3" json:"task_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *StreamCrunReply_TaskCancelRequest) Reset() {
	*x = StreamCrunReply_TaskCancelRequest{}
	mi := &file_Crane_proto_msgTypes[133]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StreamCrunReply_TaskCancelRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StreamCrunReply_TaskCancelRequest) ProtoMessage() {}

func (x *StreamCrunReply_TaskCancelRequest) ProtoReflect() protoreflect.Message {
	mi := &file_Crane_proto_msgTypes[133]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StreamCrunReply_TaskCancelRequest.ProtoReflect.Descriptor instead.
func (*StreamCrunReply_TaskCancelRequest) Descriptor() ([]byte, []int) {
	return file_Crane_proto_rawDescGZIP(), []int{93, 2}
}

func (x *StreamCrunReply_TaskCancelRequest) GetTaskId() uint32 {
	if x != nil {
		return x.TaskId
	}
	return 0
}

type StreamCrunReply_TaskCompletionAckReply struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Ok            bool                   `protobuf:"varint,1,opt,name=ok,proto3" json:"ok,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *StreamCrunReply_TaskCompletionAckReply) Reset() {
	*x = StreamCrunReply_TaskCompletionAckReply{}
	mi := &file_Crane_proto_msgTypes[134]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StreamCrunReply_TaskCompletionAckReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StreamCrunReply_TaskCompletionAckReply) ProtoMessage() {}

func (x *StreamCrunReply_TaskCompletionAckReply) ProtoReflect() protoreflect.Message {
	mi := &file_Crane_proto_msgTypes[134]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StreamCrunReply_TaskCompletionAckReply.ProtoReflect.Descriptor instead.
func (*StreamCrunReply_TaskCompletionAckReply) Descriptor() ([]byte, []int) {
	return file_Crane_proto_rawDescGZIP(), []int{93, 3}
}

func (x *StreamCrunReply_TaskCompletionAckReply) GetOk() bool {
	if x != nil {
		return x.Ok
	}
	return false
}

type StreamCrunReply_TaskIOForwardReadyReply struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Ok            bool                   `protobuf:"varint,1,opt,name=ok,proto3" json:"ok,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *StreamCrunReply_TaskIOForwardReadyReply) Reset() {
	*x = StreamCrunReply_TaskIOForwardReadyReply{}
	mi := &file_Crane_proto_msgTypes[135]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StreamCrunReply_TaskIOForwardReadyReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StreamCrunReply_TaskIOForwardReadyReply) ProtoMessage() {}

func (x *StreamCrunReply_TaskIOForwardReadyReply) ProtoReflect() protoreflect.Message {
	mi := &file_Crane_proto_msgTypes[135]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StreamCrunReply_TaskIOForwardReadyReply.ProtoReflect.Descriptor instead.
func (*StreamCrunReply_TaskIOForwardReadyReply) Descriptor() ([]byte, []int) {
	return file_Crane_proto_rawDescGZIP(), []int{93, 4}
}

func (x *StreamCrunReply_TaskIOForwardReadyReply) GetOk() bool {
	if x != nil {
		return x.Ok
	}
	return false
}

type StreamCrunReply_TaskIOForwardReply struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Msg           []byte                 `protobuf:"bytes,1,opt,name=msg,proto3" json:"msg,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *StreamCrunReply_TaskIOForwardReply) Reset() {
	*x = StreamCrunReply_TaskIOForwardReply{}
	mi := &file_Crane_proto_msgTypes[136]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StreamCrunReply_TaskIOForwardReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StreamCrunReply_TaskIOForwardReply) ProtoMessage() {}

func (x *StreamCrunReply_TaskIOForwardReply) ProtoReflect() protoreflect.Message {
	mi := &file_Crane_proto_msgTypes[136]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StreamCrunReply_TaskIOForwardReply.ProtoReflect.Descriptor instead.
func (*StreamCrunReply_TaskIOForwardReply) Descriptor() ([]byte, []int) {
	return file_Crane_proto_rawDescGZIP(), []int{93, 5}
}

func (x *StreamCrunReply_TaskIOForwardReply) GetMsg() []byte {
	if x != nil {
		return x.Msg
	}
	return nil
}

type StreamCrunReply_TaskX11ForwardReply struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Msg           []byte                 `protobuf:"bytes,1,opt,name=msg,proto3" json:"msg,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *StreamCrunReply_TaskX11ForwardReply) Reset() {
	*x = StreamCrunReply_TaskX11ForwardReply{}
	mi := &file_Crane_proto_msgTypes[137]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StreamCrunReply_TaskX11ForwardReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StreamCrunReply_TaskX11ForwardReply) ProtoMessage() {}

func (x *StreamCrunReply_TaskX11ForwardReply) ProtoReflect() protoreflect.Message {
	mi := &file_Crane_proto_msgTypes[137]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StreamCrunReply_TaskX11ForwardReply.ProtoReflect.Descriptor instead.
func (*StreamCrunReply_TaskX11ForwardReply) Descriptor() ([]byte, []int) {
	return file_Crane_proto_rawDescGZIP(), []int{93, 6}
}

func (x *StreamCrunReply_TaskX11ForwardReply) GetMsg() []byte {
	if x != nil {
		return x.Msg
	}
	return nil
}

type StreamTaskIORequest_SupervisorRegisterReq struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	CranedId      string                 `protobuf:"bytes,1,opt,name=craned_id,json=cranedId,proto3" json:"craned_id,omitempty"`
	TaskId        uint32                 `protobuf:"varint,2,opt,name=task_id,json=taskId,proto3" json:"task_id,omitempty"`
	StepId        uint32                 `protobuf:"varint,3,opt,name=step_id,json=stepId,proto3" json:"step_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *StreamTaskIORequest_SupervisorRegisterReq) Reset() {
	*x = StreamTaskIORequest_SupervisorRegisterReq{}
	mi := &file_Crane_proto_msgTypes[138]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StreamTaskIORequest_SupervisorRegisterReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StreamTaskIORequest_SupervisorRegisterReq) ProtoMessage() {}

func (x *StreamTaskIORequest_SupervisorRegisterReq) ProtoReflect() protoreflect.Message {
	mi := &file_Crane_proto_msgTypes[138]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StreamTaskIORequest_SupervisorRegisterReq.ProtoReflect.Descriptor instead.
func (*StreamTaskIORequest_SupervisorRegisterReq) Descriptor() ([]byte, []int) {
	return file_Crane_proto_rawDescGZIP(), []int{94, 0}
}

func (x *StreamTaskIORequest_SupervisorRegisterReq) GetCranedId() string {
	if x != nil {
		return x.CranedId
	}
	return ""
}

func (x *StreamTaskIORequest_SupervisorRegisterReq) GetTaskId() uint32 {
	if x != nil {
		return x.TaskId
	}
	return 0
}

func (x *StreamTaskIORequest_SupervisorRegisterReq) GetStepId() uint32 {
	if x != nil {
		return x.StepId
	}
	return 0
}

type StreamTaskIORequest_TaskOutputReq struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Msg           []byte                 `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *StreamTaskIORequest_TaskOutputReq) Reset() {
	*x = StreamTaskIORequest_TaskOutputReq{}
	mi := &file_Crane_proto_msgTypes[139]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StreamTaskIORequest_TaskOutputReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StreamTaskIORequest_TaskOutputReq) ProtoMessage() {}

func (x *StreamTaskIORequest_TaskOutputReq) ProtoReflect() protoreflect.Message {
	mi := &file_Crane_proto_msgTypes[139]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StreamTaskIORequest_TaskOutputReq.ProtoReflect.Descriptor instead.
func (*StreamTaskIORequest_TaskOutputReq) Descriptor() ([]byte, []int) {
	return file_Crane_proto_rawDescGZIP(), []int{94, 1}
}

func (x *StreamTaskIORequest_TaskOutputReq) GetMsg() []byte {
	if x != nil {
		return x.Msg
	}
	return nil
}

type StreamTaskIORequest_SupervisorUnRegisterReq struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	CranedId      string                 `protobuf:"bytes,1,opt,name=craned_id,json=cranedId,proto3" json:"craned_id,omitempty"`
	TaskId        uint32                 `protobuf:"varint,2,opt,name=task_id,json=taskId,proto3" json:"task_id,omitempty"`
	StepId        uint32                 `protobuf:"varint,3,opt,name=step_id,json=stepId,proto3" json:"step_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *StreamTaskIORequest_SupervisorUnRegisterReq) Reset() {
	*x = StreamTaskIORequest_SupervisorUnRegisterReq{}
	mi := &file_Crane_proto_msgTypes[140]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StreamTaskIORequest_SupervisorUnRegisterReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StreamTaskIORequest_SupervisorUnRegisterReq) ProtoMessage() {}

func (x *StreamTaskIORequest_SupervisorUnRegisterReq) ProtoReflect() protoreflect.Message {
	mi := &file_Crane_proto_msgTypes[140]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StreamTaskIORequest_SupervisorUnRegisterReq.ProtoReflect.Descriptor instead.
func (*StreamTaskIORequest_SupervisorUnRegisterReq) Descriptor() ([]byte, []int) {
	return file_Crane_proto_rawDescGZIP(), []int{94, 2}
}

func (x *StreamTaskIORequest_SupervisorUnRegisterReq) GetCranedId() string {
	if x != nil {
		return x.CranedId
	}
	return ""
}

func (x *StreamTaskIORequest_SupervisorUnRegisterReq) GetTaskId() uint32 {
	if x != nil {
		return x.TaskId
	}
	return 0
}

func (x *StreamTaskIORequest_SupervisorUnRegisterReq) GetStepId() uint32 {
	if x != nil {
		return x.StepId
	}
	return 0
}

type StreamTaskIORequest_TaskX11OutputReq struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	TaskId        uint32                 `protobuf:"varint,1,opt,name=task_id,json=taskId,proto3" json:"task_id,omitempty"`
	StepId        uint32                 `protobuf:"varint,2,opt,name=step_id,json=stepId,proto3" json:"step_id,omitempty"`
	Msg           []byte                 `protobuf:"bytes,3,opt,name=msg,proto3" json:"msg,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *StreamTaskIORequest_TaskX11OutputReq) Reset() {
	*x = StreamTaskIORequest_TaskX11OutputReq{}
	mi := &file_Crane_proto_msgTypes[141]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StreamTaskIORequest_TaskX11OutputReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StreamTaskIORequest_TaskX11OutputReq) ProtoMessage() {}

func (x *StreamTaskIORequest_TaskX11OutputReq) ProtoReflect() protoreflect.Message {
	mi := &file_Crane_proto_msgTypes[141]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StreamTaskIORequest_TaskX11OutputReq.ProtoReflect.Descriptor instead.
func (*StreamTaskIORequest_TaskX11OutputReq) Descriptor() ([]byte, []int) {
	return file_Crane_proto_rawDescGZIP(), []int{94, 3}
}

func (x *StreamTaskIORequest_TaskX11OutputReq) GetTaskId() uint32 {
	if x != nil {
		return x.TaskId
	}
	return 0
}

func (x *StreamTaskIORequest_TaskX11OutputReq) GetStepId() uint32 {
	if x != nil {
		return x.StepId
	}
	return 0
}

func (x *StreamTaskIORequest_TaskX11OutputReq) GetMsg() []byte {
	if x != nil {
		return x.Msg
	}
	return nil
}

type StreamTaskIOReply_SupervisorRegisterReply struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Ok            bool                   `protobuf:"varint,1,opt,name=ok,proto3" json:"ok,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *StreamTaskIOReply_SupervisorRegisterReply) Reset() {
	*x = StreamTaskIOReply_SupervisorRegisterReply{}
	mi := &file_Crane_proto_msgTypes[142]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StreamTaskIOReply_SupervisorRegisterReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StreamTaskIOReply_SupervisorRegisterReply) ProtoMessage() {}

func (x *StreamTaskIOReply_SupervisorRegisterReply) ProtoReflect() protoreflect.Message {
	mi := &file_Crane_proto_msgTypes[142]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StreamTaskIOReply_SupervisorRegisterReply.ProtoReflect.Descriptor instead.
func (*StreamTaskIOReply_SupervisorRegisterReply) Descriptor() ([]byte, []int) {
	return file_Crane_proto_rawDescGZIP(), []int{95, 0}
}

func (x *StreamTaskIOReply_SupervisorRegisterReply) GetOk() bool {
	if x != nil {
		return x.Ok
	}
	return false
}

type StreamTaskIOReply_TaskInputReq struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	TaskId        uint32                 `protobuf:"varint,1,opt,name=task_id,json=taskId,proto3" json:"task_id,omitempty"`
	StepId        uint32                 `protobuf:"varint,2,opt,name=step_id,json=stepId,proto3" json:"step_id,omitempty"`
	Msg           []byte                 `protobuf:"bytes,3,opt,name=msg,proto3" json:"msg,omitempty"`
	Eof           bool                   `protobuf:"varint,4,opt,name=eof,proto3" json:"eof,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *StreamTaskIOReply_TaskInputReq) Reset() {
	*x = StreamTaskIOReply_TaskInputReq{}
	mi := &file_Crane_proto_msgTypes[143]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StreamTaskIOReply_TaskInputReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StreamTaskIOReply_TaskInputReq) ProtoMessage() {}

func (x *StreamTaskIOReply_TaskInputReq) ProtoReflect() protoreflect.Message {
	mi := &file_Crane_proto_msgTypes[143]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StreamTaskIOReply_TaskInputReq.ProtoReflect.Descriptor instead.
func (*StreamTaskIOReply_TaskInputReq) Descriptor() ([]byte, []int) {
	return file_Crane_proto_rawDescGZIP(), []int{95, 1}
}

func (x *StreamTaskIOReply_TaskInputReq) GetTaskId() uint32 {
	if x != nil {
		return x.TaskId
	}
	return 0
}

func (x *StreamTaskIOReply_TaskInputReq) GetStepId() uint32 {
	if x != nil {
		return x.StepId
	}
	return 0
}

func (x *StreamTaskIOReply_TaskInputReq) GetMsg() []byte {
	if x != nil {
		return x.Msg
	}
	return nil
}

func (x *StreamTaskIOReply_TaskInputReq) GetEof() bool {
	if x != nil {
		return x.Eof
	}
	return false
}

type StreamTaskIOReply_SupervisorUnregisterReply struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Ok            bool                   `protobuf:"varint,1,opt,name=ok,proto3" json:"ok,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *StreamTaskIOReply_SupervisorUnregisterReply) Reset() {
	*x = StreamTaskIOReply_SupervisorUnregisterReply{}
	mi := &file_Crane_proto_msgTypes[144]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StreamTaskIOReply_SupervisorUnregisterReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StreamTaskIOReply_SupervisorUnregisterReply) ProtoMessage() {}

func (x *StreamTaskIOReply_SupervisorUnregisterReply) ProtoReflect() protoreflect.Message {
	mi := &file_Crane_proto_msgTypes[144]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StreamTaskIOReply_SupervisorUnregisterReply.ProtoReflect.Descriptor instead.
func (*StreamTaskIOReply_SupervisorUnregisterReply) Descriptor() ([]byte, []int) {
	return file_Crane_proto_rawDescGZIP(), []int{95, 2}
}

func (x *StreamTaskIOReply_SupervisorUnregisterReply) GetOk() bool {
	if x != nil {
		return x.Ok
	}
	return false
}

type StreamTaskIOReply_TaskX11InputReq struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	TaskId        uint32                 `protobuf:"varint,1,opt,name=task_id,json=taskId,proto3" json:"task_id,omitempty"`
	StepId        uint32                 `protobuf:"varint,2,opt,name=step_id,json=stepId,proto3" json:"step_id,omitempty"`
	Msg           []byte                 `protobuf:"bytes,3,opt,name=msg,proto3" json:"msg,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *StreamTaskIOReply_TaskX11InputReq) Reset() {
	*x = StreamTaskIOReply_TaskX11InputReq{}
	mi := &file_Crane_proto_msgTypes[145]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StreamTaskIOReply_TaskX11InputReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StreamTaskIOReply_TaskX11InputReq) ProtoMessage() {}

func (x *StreamTaskIOReply_TaskX11InputReq) ProtoReflect() protoreflect.Message {
	mi := &file_Crane_proto_msgTypes[145]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StreamTaskIOReply_TaskX11InputReq.ProtoReflect.Descriptor instead.
func (*StreamTaskIOReply_TaskX11InputReq) Descriptor() ([]byte, []int) {
	return file_Crane_proto_rawDescGZIP(), []int{95, 3}
}

func (x *StreamTaskIOReply_TaskX11InputReq) GetTaskId() uint32 {
	if x != nil {
		return x.TaskId
	}
	return 0
}

func (x *StreamTaskIOReply_TaskX11InputReq) GetStepId() uint32 {
	if x != nil {
		return x.StepId
	}
	return 0
}

func (x *StreamTaskIOReply_TaskX11InputReq) GetMsg() []byte {
	if x != nil {
		return x.Msg
	}
	return nil
}

type QueryTxnLogReply_Txn struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Actor         string                 `protobuf:"bytes,1,opt,name=actor,proto3" json:"actor,omitempty"`
	Target        string                 `protobuf:"bytes,2,opt,name=target,proto3" json:"target,omitempty"`
	Action        TxnAction              `protobuf:"varint,3,opt,name=action,proto3,enum=crane.grpc.TxnAction" json:"action,omitempty"`
	Info          string                 `protobuf:"bytes,4,opt,name=info,proto3" json:"info,omitempty"`
	CreationTime  int64                  `protobuf:"varint,5,opt,name=creation_time,json=creationTime,proto3" json:"creation_time,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *QueryTxnLogReply_Txn) Reset() {
	*x = QueryTxnLogReply_Txn{}
	mi := &file_Crane_proto_msgTypes[146]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *QueryTxnLogReply_Txn) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryTxnLogReply_Txn) ProtoMessage() {}

func (x *QueryTxnLogReply_Txn) ProtoReflect() protoreflect.Message {
	mi := &file_Crane_proto_msgTypes[146]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryTxnLogReply_Txn.ProtoReflect.Descriptor instead.
func (*QueryTxnLogReply_Txn) Descriptor() ([]byte, []int) {
	return file_Crane_proto_rawDescGZIP(), []int{105, 0}
}

func (x *QueryTxnLogReply_Txn) GetActor() string {
	if x != nil {
		return x.Actor
	}
	return ""
}

func (x *QueryTxnLogReply_Txn) GetTarget() string {
	if x != nil {
		return x.Target
	}
	return ""
}

func (x *QueryTxnLogReply_Txn) GetAction() TxnAction {
	if x != nil {
		return x.Action
	}
	return TxnAction_AddAccount
}

func (x *QueryTxnLogReply_Txn) GetInfo() string {
	if x != nil {
		return x.Info
	}
	return ""
}

func (x *QueryTxnLogReply_Txn) GetCreationTime() int64 {
	if x != nil {
		return x.CreationTime
	}
	return 0
}

var File_Crane_proto protoreflect.FileDescriptor

const file_Crane_proto_rawDesc = "" +
	"\n" +
	"\vCrane.proto\x12\n" +
	"crane.grpc\x1a\x1bgoogle/protobuf/empty.proto\x1a\x1fgoogle/protobuf/timestamp.proto\x1a\x10PublicDefs.proto\"\xbb\x01\n" +
	"\x17StepStatusChangeRequest\x12\x17\n" +
	"\atask_id\x18\x01 \x01(\rR\x06taskId\x12\x1b\n" +
	"\tcraned_id\x18\x02 \x01(\tR\bcranedId\x125\n" +
	"\n" +
	"new_status\x18\x03 \x01(\x0e2\x16.crane.grpc.TaskStatusR\tnewStatus\x12\x1b\n" +
	"\texit_code\x18\x04 \x01(\rR\bexitCode\x12\x16\n" +
	"\x06reason\x18\x05 \x01(\tR\x06reason\"'\n" +
	"\x15StepStatusChangeReply\x12\x0e\n" +
	"\x02ok\x18\x01 \x01(\bR\x02ok\"p\n" +
	"\x1fCranedTriggerReverseConnRequest\x12\x1b\n" +
	"\tcraned_id\x18\x01 \x01(\tR\bcranedId\x120\n" +
	"\x05token\x18\x02 \x01(\v2\x1a.google.protobuf.TimestampR\x05token\"\xa0\x03\n" +
	"\x16ConfigureCranedRequest\x12\x0e\n" +
	"\x02ok\x18\x01 \x01(\bR\x02ok\x12G\n" +
	"\ajob_map\x18\x02 \x03(\v2..crane.grpc.ConfigureCranedRequest.JobMapEntryR\x06jobMap\x12W\n" +
	"\rjob_tasks_map\x18\x03 \x03(\v23.crane.grpc.ConfigureCranedRequest.JobTasksMapEntryR\vjobTasksMap\x120\n" +
	"\x05token\x18\x04 \x01(\v2\x1a.google.protobuf.TimestampR\x05token\x1aM\n" +
	"\vJobMapEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\rR\x03key\x12(\n" +
	"\x05value\x18\x02 \x01(\v2\x12.crane.grpc.JobToDR\x05value:\x028\x01\x1aS\n" +
	"\x10JobTasksMapEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\rR\x03key\x12)\n" +
	"\x05value\x18\x02 \x01(\v2\x13.crane.grpc.TaskToDR\x05value:\x028\x01\"\xa5\x01\n" +
	"\x15CranedRegisterRequest\x12\x1b\n" +
	"\tcraned_id\x18\x01 \x01(\tR\bcranedId\x12=\n" +
	"\vremote_meta\x18\x02 \x01(\v2\x1c.crane.grpc.CranedRemoteMetaR\n" +
	"remoteMeta\x120\n" +
	"\x05token\x18\x03 \x01(\v2\x1a.google.protobuf.TimestampR\x05token\"%\n" +
	"\x13CranedRegisterReply\x12\x0e\n" +
	"\x02ok\x18\x01 \x01(\bR\x02ok\"0\n" +
	"\x11CranedPingRequest\x12\x1b\n" +
	"\tcraned_id\x18\x01 \x01(\tR\bcranedId\"!\n" +
	"\x0fCranedPingReply\x12\x0e\n" +
	"\x02ok\x18\x01 \x01(\bR\x02ok\";\n" +
	" QueryCranedListFromTaskIdRequest\x12\x17\n" +
	"\atask_id\x18\x01 \x01(\rR\x06taskId\"Q\n" +
	"\x1eQueryCranedListFromTaskIdReply\x12\x0e\n" +
	"\x02ok\x18\x01 \x01(\bR\x02ok\x12\x1f\n" +
	"\vcraned_list\x18\x02 \x01(\tR\n" +
	"cranedList\"D\n" +
	"\x16SubmitBatchTaskRequest\x12*\n" +
	"\x04task\x18\x01 \x01(\v2\x16.crane.grpc.TaskToCtldR\x04task\"w\n" +
	"\x14SubmitBatchTaskReply\x12\x0e\n" +
	"\x02ok\x18\x01 \x01(\bR\x02ok\x12\x19\n" +
	"\atask_id\x18\x02 \x01(\rH\x00R\x06taskId\x12)\n" +
	"\x04code\x18\x03 \x01(\x0e2\x13.crane.grpc.ErrCodeH\x00R\x04codeB\t\n" +
	"\apayload\"[\n" +
	"\x17SubmitBatchTasksRequest\x12*\n" +
	"\x04task\x18\x01 \x01(\v2\x16.crane.grpc.TaskToCtldR\x04task\x12\x14\n" +
	"\x05count\x18\x02 \x01(\rR\x05count\"k\n" +
	"\x15SubmitBatchTasksReply\x12 \n" +
	"\ftask_id_list\x18\x01 \x03(\rR\n" +
	"taskIdList\x120\n" +
	"\tcode_list\x18\x02 \x03(\x0e2\x13.crane.grpc.ErrCodeR\bcodeList\"@\n" +
	"\x13ExecuteStepsRequest\x12)\n" +
	"\x05tasks\x18\x01 \x03(\v2\x13.crane.grpc.TaskToDR\x05tasks\"B\n" +
	"\x11ExecuteStepsReply\x12-\n" +
	"\x13failed_task_id_list\x18\x01 \x03(\rR\x10failedTaskIdList\"K\n" +
	"\x1aCreateCgroupForJobsRequest\x12-\n" +
	"\bjob_list\x18\x01 \x03(\v2\x12.crane.grpc.JobToDR\ajobList\"\x1a\n" +
	"\x18CreateCgroupForJobsReply\"2\n" +
	"\x10FreeStepsRequest\x12\x1e\n" +
	"\vjob_id_list\x18\x01 \x03(\rR\tjobIdList\"\x10\n" +
	"\x0eFreeStepsReply\"Z\n" +
	"\x1bReleaseCgroupForJobsRequest\x12 \n" +
	"\ftask_id_list\x18\x01 \x03(\rR\n" +
	"taskIdList\x12\x19\n" +
	"\buid_list\x18\x02 \x03(\rR\auidList\"\x1b\n" +
	"\x19ReleaseCgroupForJobsReply\"9\n" +
	"\x15TerminateStepsRequest\x12 \n" +
	"\ftask_id_list\x18\x01 \x03(\rR\n" +
	"taskIdList\"=\n" +
	"\x13TerminateStepsReply\x12\x0e\n" +
	"\x02ok\x18\x01 \x01(\bR\x02ok\x12\x16\n" +
	"\x06reason\x18\x02 \x01(\tR\x06reason\"@\n" +
	"\x1cTerminateOrphanedStepRequest\x12 \n" +
	"\ftask_id_list\x18\x01 \x03(\rR\n" +
	"taskIdList\"D\n" +
	"\x1aTerminateOrphanedStepReply\x12\x0e\n" +
	"\x02ok\x18\x01 \x01(\bR\x02ok\x12\x16\n" +
	"\x06reason\x18\x02 \x01(\tR\x06reason\"b\n" +
	"\x19ChangeJobTimeLimitRequest\x12\x17\n" +
	"\atask_id\x18\x01 \x01(\rR\x06taskId\x12,\n" +
	"\x12time_limit_seconds\x18\x02 \x01(\x03R\x10timeLimitSeconds\")\n" +
	"\x17ChangeJobTimeLimitReply\x12\x0e\n" +
	"\x02ok\x18\x01 \x01(\bR\x02ok\"\xe1\x02\n" +
	"\x11CancelTaskRequest\x12!\n" +
	"\foperator_uid\x18\x01 \x01(\rR\voperatorUid\x12&\n" +
	"\x0ffilter_task_ids\x18\x02 \x03(\rR\rfilterTaskIds\x12)\n" +
	"\x10filter_partition\x18\x03 \x01(\tR\x0ffilterPartition\x12%\n" +
	"\x0efilter_account\x18\x04 \x01(\tR\rfilterAccount\x129\n" +
	"\ffilter_state\x18\x05 \x01(\x0e2\x16.crane.grpc.TaskStatusR\vfilterState\x12(\n" +
	"\x10filter_task_name\x18\x06 \x01(\tR\x0efilterTaskName\x12!\n" +
	"\ffilter_nodes\x18\a \x03(\tR\vfilterNodes\x12'\n" +
	"\x0ffilter_username\x18\b \x01(\tR\x0efilterUsername\"\x9e\x01\n" +
	"\x0fCancelTaskReply\x12'\n" +
	"\x0fcancelled_tasks\x18\x02 \x03(\rR\x0ecancelledTasks\x12.\n" +
	"\x13not_cancelled_tasks\x18\x03 \x03(\rR\x11notCancelledTasks\x122\n" +
	"\x15not_cancelled_reasons\x18\x04 \x03(\tR\x13notCancelledReasons\".\n" +
	"\x18QueryStepFromPortRequest\x12\x12\n" +
	"\x04port\x18\x01 \x01(\rR\x04port\"A\n" +
	"\x16QueryStepFromPortReply\x12\x0e\n" +
	"\x02ok\x18\x01 \x01(\bR\x02ok\x12\x17\n" +
	"\atask_id\x18\x02 \x01(\rR\x06taskId\"\x89\x01\n" +
	"\x1fQueryStepFromPortForwardRequest\x12&\n" +
	"\x0fssh_remote_port\x18\x01 \x01(\rR\rsshRemotePort\x12,\n" +
	"\x12ssh_remote_address\x18\x02 \x01(\tR\x10sshRemoteAddress\x12\x10\n" +
	"\x03uid\x18\x03 \x01(\rR\x03uid\"\x86\x01\n" +
	"\x1dQueryStepFromPortForwardReply\x12\x0e\n" +
	"\x02ok\x18\x01 \x01(\bR\x02ok\x12\x1b\n" +
	"\tfrom_user\x18\x02 \x01(\bR\bfromUser\x12\x17\n" +
	"\atask_id\x18\x03 \x01(\rR\x06taskId\x12\x1f\n" +
	"\vcgroup_path\x18\x04 \x01(\tR\n" +
	"cgroupPath\"9\n" +
	"\x16QueryCranedInfoRequest\x12\x1f\n" +
	"\vcraned_name\x18\x01 \x01(\tR\n" +
	"cranedName\"X\n" +
	"\x14QueryCranedInfoReply\x12@\n" +
	"\x10craned_info_list\x18\x01 \x03(\v2\x16.crane.grpc.CranedInfoR\x0ecranedInfoList\"B\n" +
	"\x19QueryPartitionInfoRequest\x12%\n" +
	"\x0epartition_name\x18\x01 \x01(\tR\rpartitionName\"d\n" +
	"\x17QueryPartitionInfoReply\x12I\n" +
	"\x13partition_info_list\x18\x01 \x03(\v2\x19.crane.grpc.PartitionInfoR\x11partitionInfoList\"Z\n" +
	"\x1bQueryReservationInfoRequest\x12\x10\n" +
	"\x03uid\x18\x01 \x01(\rR\x03uid\x12)\n" +
	"\x10reservation_name\x18\x02 \x01(\tR\x0freservationName\"\x94\x01\n" +
	"\x19QueryReservationInfoReply\x12\x0e\n" +
	"\x02ok\x18\x01 \x01(\bR\x02ok\x12\x16\n" +
	"\x06reason\x18\x02 \x01(\tR\x06reason\x12O\n" +
	"\x15reservation_info_list\x18\x03 \x03(\v2\x1b.crane.grpc.ReservationInfoR\x13reservationInfoList\"\xd6\x02\n" +
	"\x11ModifyTaskRequest\x12\x10\n" +
	"\x03uid\x18\x01 \x01(\rR\x03uid\x12\x19\n" +
	"\btask_ids\x18\x02 \x03(\rR\ataskIds\x12L\n" +
	"\tattribute\x18\x03 \x01(\x0e2..crane.grpc.ModifyTaskRequest.TargetAttributesR\tattribute\x12.\n" +
	"\x12time_limit_seconds\x18\x04 \x01(\x03H\x00R\x10timeLimitSeconds\x12-\n" +
	"\x11mandated_priority\x18\x05 \x01(\x01H\x00R\x10mandatedPriority\x12#\n" +
	"\fhold_seconds\x18\a \x01(\x03H\x00R\vholdSeconds\"9\n" +
	"\x10TargetAttributes\x12\r\n" +
	"\tTimeLimit\x10\x00\x12\f\n" +
	"\bPriority\x10\x01\x12\b\n" +
	"\x04Hold\x10\x02B\a\n" +
	"\x05value\"\x98\x01\n" +
	"\x0fModifyTaskReply\x12%\n" +
	"\x0emodified_tasks\x18\x02 \x03(\rR\rmodifiedTasks\x12,\n" +
	"\x12not_modified_tasks\x18\x03 \x03(\rR\x10notModifiedTasks\x120\n" +
	"\x14not_modified_reasons\x18\x04 \x03(\tR\x12notModifiedReasons\"\xdb\x01\n" +
	"\x1cModifyTasksExtraAttrsRequest\x12\x10\n" +
	"\x03uid\x18\x01 \x01(\rR\x03uid\x12f\n" +
	"\x10extra_attrs_list\x18\x02 \x03(\v2<.crane.grpc.ModifyTasksExtraAttrsRequest.ExtraAttrsListEntryR\x0eextraAttrsList\x1aA\n" +
	"\x13ExtraAttrsListEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\rR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"\xa3\x01\n" +
	"\x1aModifyTasksExtraAttrsReply\x12%\n" +
	"\x0emodified_tasks\x18\x01 \x03(\rR\rmodifiedTasks\x12,\n" +
	"\x12not_modified_tasks\x18\x02 \x03(\rR\x10notModifiedTasks\x120\n" +
	"\x14not_modified_reasons\x18\x03 \x03(\tR\x12notModifiedReasons\"\xa0\x01\n" +
	"\x18ModifyCranedStateRequest\x12\x10\n" +
	"\x03uid\x18\x01 \x01(\rR\x03uid\x12\x1d\n" +
	"\n" +
	"craned_ids\x18\x02 \x03(\tR\tcranedIds\x12;\n" +
	"\tnew_state\x18\x03 \x01(\x0e2\x1e.crane.grpc.CranedControlStateR\bnewState\x12\x16\n" +
	"\x06reason\x18\x04 \x01(\tR\x06reason\"\x9f\x01\n" +
	"\x16ModifyCranedStateReply\x12%\n" +
	"\x0emodified_nodes\x18\x02 \x03(\tR\rmodifiedNodes\x12,\n" +
	"\x12not_modified_nodes\x18\x03 \x03(\tR\x10notModifiedNodes\x120\n" +
	"\x14not_modified_reasons\x18\x04 \x03(\tR\x12notModifiedReasons\"X\n" +
	"\x11AddAccountRequest\x12\x10\n" +
	"\x03uid\x18\x01 \x01(\rR\x03uid\x121\n" +
	"\aaccount\x18\x02 \x01(\v2\x17.crane.grpc.AccountInfoR\aaccount\"J\n" +
	"\x0fAddAccountReply\x12\x0e\n" +
	"\x02ok\x18\x01 \x01(\bR\x02ok\x12'\n" +
	"\x04code\x18\x02 \x01(\x0e2\x13.crane.grpc.ErrCodeR\x04code\"L\n" +
	"\x0eAddUserRequest\x12\x10\n" +
	"\x03uid\x18\x01 \x01(\rR\x03uid\x12(\n" +
	"\x04user\x18\x02 \x01(\v2\x14.crane.grpc.UserInfoR\x04user\"G\n" +
	"\fAddUserReply\x12\x0e\n" +
	"\x02ok\x18\x01 \x01(\bR\x02ok\x12'\n" +
	"\x04code\x18\x02 \x01(\x0e2\x13.crane.grpc.ErrCodeR\x04code\"H\n" +
	"\rAddQosRequest\x12\x10\n" +
	"\x03uid\x18\x01 \x01(\rR\x03uid\x12%\n" +
	"\x03qos\x18\x02 \x01(\v2\x13.crane.grpc.QosInfoR\x03qos\"F\n" +
	"\vAddQosReply\x12\x0e\n" +
	"\x02ok\x18\x01 \x01(\bR\x02ok\x12'\n" +
	"\x04code\x18\x02 \x01(\x0e2\x13.crane.grpc.ErrCodeR\x04code\"K\n" +
	"\x14DeleteAccountRequest\x12\x10\n" +
	"\x03uid\x18\x01 \x01(\rR\x03uid\x12!\n" +
	"\faccount_list\x18\x02 \x03(\tR\vaccountList\"c\n" +
	"\x12DeleteAccountReply\x12\x0e\n" +
	"\x02ok\x18\x01 \x01(\bR\x02ok\x12=\n" +
	"\x0frich_error_list\x18\x02 \x03(\v2\x15.crane.grpc.RichErrorR\rrichErrorList\"\\\n" +
	"\x11DeleteUserRequest\x12\x10\n" +
	"\x03uid\x18\x01 \x01(\rR\x03uid\x12\x1b\n" +
	"\tuser_list\x18\x02 \x03(\tR\buserList\x12\x18\n" +
	"\aaccount\x18\x03 \x01(\tR\aaccount\"`\n" +
	"\x0fDeleteUserReply\x12\x0e\n" +
	"\x02ok\x18\x01 \x01(\bR\x02ok\x12=\n" +
	"\x0frich_error_list\x18\x02 \x03(\v2\x15.crane.grpc.RichErrorR\rrichErrorList\"?\n" +
	"\x10DeleteQosRequest\x12\x10\n" +
	"\x03uid\x18\x01 \x01(\rR\x03uid\x12\x19\n" +
	"\bqos_list\x18\x02 \x03(\tR\aqosList\"_\n" +
	"\x0eDeleteQosReply\x12\x0e\n" +
	"\x02ok\x18\x01 \x01(\bR\x02ok\x12=\n" +
	"\x0frich_error_list\x18\x02 \x03(\v2\x15.crane.grpc.RichErrorR\rrichErrorList\"\xdc\x01\n" +
	"\x14ModifyAccountRequest\x12\x10\n" +
	"\x03uid\x18\x01 \x01(\rR\x03uid\x12:\n" +
	"\fmodify_field\x18\x02 \x01(\x0e2\x17.crane.grpc.ModifyFieldR\vmodifyField\x12\x1d\n" +
	"\n" +
	"value_list\x18\x03 \x03(\tR\tvalueList\x12\x12\n" +
	"\x04name\x18\x04 \x01(\tR\x04name\x12-\n" +
	"\x04type\x18\x05 \x01(\x0e2\x19.crane.grpc.OperationTypeR\x04type\x12\x14\n" +
	"\x05force\x18\x06 \x01(\bR\x05force\"c\n" +
	"\x12ModifyAccountReply\x12\x0e\n" +
	"\x02ok\x18\x01 \x01(\bR\x02ok\x12=\n" +
	"\x0frich_error_list\x18\x02 \x03(\v2\x15.crane.grpc.RichErrorR\rrichErrorList\"\x91\x02\n" +
	"\x11ModifyUserRequest\x12\x10\n" +
	"\x03uid\x18\x01 \x01(\rR\x03uid\x12:\n" +
	"\fmodify_field\x18\x02 \x01(\x0e2\x17.crane.grpc.ModifyFieldR\vmodifyField\x12\x1d\n" +
	"\n" +
	"value_list\x18\x03 \x03(\tR\tvalueList\x12\x12\n" +
	"\x04name\x18\x04 \x01(\tR\x04name\x12\x1c\n" +
	"\tpartition\x18\x05 \x01(\tR\tpartition\x12-\n" +
	"\x04type\x18\x06 \x01(\x0e2\x19.crane.grpc.OperationTypeR\x04type\x12\x18\n" +
	"\aaccount\x18\b \x01(\tR\aaccount\x12\x14\n" +
	"\x05force\x18\t \x01(\bR\x05force\"`\n" +
	"\x0fModifyUserReply\x12\x0e\n" +
	"\x02ok\x18\x01 \x01(\bR\x02ok\x12=\n" +
	"\x0frich_error_list\x18\x02 \x03(\v2\x15.crane.grpc.RichErrorR\rrichErrorList\"\x8a\x01\n" +
	"\x10ModifyQosRequest\x12\x10\n" +
	"\x03uid\x18\x01 \x01(\rR\x03uid\x12:\n" +
	"\fmodify_field\x18\x02 \x01(\x0e2\x17.crane.grpc.ModifyFieldR\vmodifyField\x12\x14\n" +
	"\x05value\x18\x03 \x01(\tR\x05value\x12\x12\n" +
	"\x04name\x18\x04 \x01(\tR\x04name\"I\n" +
	"\x0eModifyQosReply\x12\x0e\n" +
	"\x02ok\x18\x01 \x01(\bR\x02ok\x12'\n" +
	"\x04code\x18\x02 \x01(\x0e2\x13.crane.grpc.ErrCodeR\x04code\"N\n" +
	"\x17QueryAccountInfoRequest\x12\x10\n" +
	"\x03uid\x18\x01 \x01(\rR\x03uid\x12!\n" +
	"\faccount_list\x18\x02 \x03(\tR\vaccountList\"\xa2\x01\n" +
	"\x15QueryAccountInfoReply\x12\x0e\n" +
	"\x02ok\x18\x01 \x01(\bR\x02ok\x12:\n" +
	"\faccount_list\x18\x02 \x03(\v2\x17.crane.grpc.AccountInfoR\vaccountList\x12=\n" +
	"\x0frich_error_list\x18\x03 \x03(\v2\x15.crane.grpc.RichErrorR\rrichErrorList\"_\n" +
	"\x14QueryUserInfoRequest\x12\x10\n" +
	"\x03uid\x18\x01 \x01(\rR\x03uid\x12\x1b\n" +
	"\tuser_list\x18\x02 \x03(\tR\buserList\x12\x18\n" +
	"\aaccount\x18\x03 \x01(\tR\aaccount\"\x96\x01\n" +
	"\x12QueryUserInfoReply\x12\x0e\n" +
	"\x02ok\x18\x01 \x01(\bR\x02ok\x121\n" +
	"\tuser_list\x18\x02 \x03(\v2\x14.crane.grpc.UserInfoR\buserList\x12=\n" +
	"\x0frich_error_list\x18\x03 \x03(\v2\x15.crane.grpc.RichErrorR\rrichErrorList\"B\n" +
	"\x13QueryQosInfoRequest\x12\x10\n" +
	"\x03uid\x18\x01 \x01(\rR\x03uid\x12\x19\n" +
	"\bqos_list\x18\x02 \x03(\tR\aqosList\"\x92\x01\n" +
	"\x11QueryQosInfoReply\x12\x0e\n" +
	"\x02ok\x18\x01 \x01(\bR\x02ok\x12.\n" +
	"\bqos_list\x18\x02 \x03(\v2\x13.crane.grpc.QosInfoR\aqosList\x12=\n" +
	"\x0frich_error_list\x18\x03 \x03(\v2\x15.crane.grpc.RichErrorR\rrichErrorList\"\xb7\x01\n" +
	"\x19BlockAccountOrUserRequest\x12\x10\n" +
	"\x03uid\x18\x01 \x01(\rR\x03uid\x12\x14\n" +
	"\x05block\x18\x02 \x01(\bR\x05block\x127\n" +
	"\ventity_type\x18\x03 \x01(\x0e2\x16.crane.grpc.EntityTypeR\n" +
	"entityType\x12\x1f\n" +
	"\ventity_list\x18\x04 \x03(\tR\n" +
	"entityList\x12\x18\n" +
	"\aaccount\x18\x05 \x01(\tR\aaccount\"h\n" +
	"\x17BlockAccountOrUserReply\x12\x0e\n" +
	"\x02ok\x18\x01 \x01(\bR\x02ok\x12=\n" +
	"\x0frich_error_list\x18\x02 \x03(\v2\x15.crane.grpc.RichErrorR\rrichErrorList\"\x8f\x01\n" +
	"\x19ModifyPartitionAclRequest\x12\x10\n" +
	"\x03uid\x18\x01 \x01(\rR\x03uid\x12\x1c\n" +
	"\tpartition\x18\x02 \x01(\tR\tpartition\x12&\n" +
	"\x0fis_allowed_list\x18\x03 \x01(\bR\risAllowedList\x12\x1a\n" +
	"\baccounts\x18\x04 \x03(\tR\baccounts\"R\n" +
	"\x17ModifyPartitionAclReply\x12\x0e\n" +
	"\x02ok\x18\x01 \x01(\bR\x02ok\x12'\n" +
	"\x04code\x18\x02 \x01(\x0e2\x13.crane.grpc.ErrCodeR\x04code\"J\n" +
	"\x1dMigrateSshProcToCgroupRequest\x12\x10\n" +
	"\x03pid\x18\x01 \x01(\x05R\x03pid\x12\x17\n" +
	"\atask_id\x18\x02 \x01(\rR\x06taskId\"-\n" +
	"\x1bMigrateSshProcToCgroupReply\x12\x0e\n" +
	"\x02ok\x18\x01 \x01(\bR\x02ok\":\n" +
	"\x1fQuerySshStepEnvVariablesRequest\x12\x17\n" +
	"\atask_id\x18\x01 \x01(\rR\x06taskId\"\xba\x01\n" +
	"\x1dQuerySshStepEnvVariablesReply\x12\x0e\n" +
	"\x02ok\x18\x01 \x01(\bR\x02ok\x12N\n" +
	"\aenv_map\x18\x02 \x03(\v25.crane.grpc.QuerySshStepEnvVariablesReply.EnvMapEntryR\x06envMap\x1a9\n" +
	"\vEnvMapEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"h\n" +
	"&QuerySshStepEnvVariablesForwardRequest\x12\x17\n" +
	"\atask_id\x18\x01 \x01(\rR\x06taskId\x12%\n" +
	"\x0eexecution_node\x18\x02 \x01(\tR\rexecutionNode\"\xc8\x01\n" +
	"$QuerySshStepEnvVariablesForwardReply\x12\x0e\n" +
	"\x02ok\x18\x01 \x01(\bR\x02ok\x12U\n" +
	"\aenv_map\x18\x02 \x03(\v2<.crane.grpc.QuerySshStepEnvVariablesForwardReply.EnvMapEntryR\x06envMap\x1a9\n" +
	"\vEnvMapEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"\x89\x03\n" +
	"\x17QueryClusterInfoRequest\x12+\n" +
	"\x11filter_partitions\x18\x01 \x03(\tR\x10filterPartitions\x12!\n" +
	"\ffilter_nodes\x18\x02 \x03(\tR\vfilterNodes\x12b\n" +
	"\x1dfilter_craned_resource_states\x18\x03 \x03(\x0e2\x1f.crane.grpc.CranedResourceStateR\x1afilterCranedResourceStates\x12_\n" +
	"\x1cfilter_craned_control_states\x18\x04 \x03(\x0e2\x1e.crane.grpc.CranedControlStateR\x19filterCranedControlStates\x12Y\n" +
	"\x1afilter_craned_power_states\x18\x05 \x03(\x0e2\x1c.crane.grpc.CranedPowerStateR\x17filterCranedPowerStates\"i\n" +
	"\x15QueryClusterInfoReply\x12\x0e\n" +
	"\x02ok\x18\x01 \x01(\bR\x02ok\x12@\n" +
	"\n" +
	"partitions\x18\x02 \x03(\v2 .crane.grpc.TrimmedPartitionInfoR\n" +
	"partitions\"\xae\x05\n" +
	"\x15QueryTasksInfoRequest\x12&\n" +
	"\x0ffilter_task_ids\x18\x01 \x03(\rR\rfilterTaskIds\x12+\n" +
	"\x11filter_partitions\x18\x02 \x03(\tR\x10filterPartitions\x12\x1b\n" +
	"\tnum_limit\x18\x03 \x01(\rR\bnumLimit\x12*\n" +
	"\x11filter_task_names\x18\x04 \x03(\tR\x0ffilterTaskNames\x12\x1d\n" +
	"\n" +
	"filter_qos\x18\x05 \x03(\tR\tfilterQos\x12D\n" +
	"\x12filter_task_states\x18\x06 \x03(\x0e2\x16.crane.grpc.TaskStatusR\x10filterTaskStates\x12!\n" +
	"\ffilter_users\x18\a \x03(\tR\vfilterUsers\x12'\n" +
	"\x0ffilter_accounts\x18\b \x03(\tR\x0efilterAccounts\x12W\n" +
	"\x1bfilter_submit_time_interval\x18\t \x01(\v2\x18.crane.grpc.TimeIntervalR\x18filterSubmitTimeInterval\x12U\n" +
	"\x1afilter_start_time_interval\x18\n" +
	" \x01(\v2\x18.crane.grpc.TimeIntervalR\x17filterStartTimeInterval\x12Q\n" +
	"\x18filter_end_time_interval\x18\v \x01(\v2\x18.crane.grpc.TimeIntervalR\x15filterEndTimeInterval\x12C\n" +
	"\x1eoption_include_completed_tasks\x18\x0f \x01(\bR\x1boptionIncludeCompletedTasks\"a\n" +
	"\x13QueryTasksInfoReply\x12\x0e\n" +
	"\x02ok\x18\x01 \x01(\bR\x02ok\x12:\n" +
	"\x0etask_info_list\x18\x02 \x03(\v2\x14.crane.grpc.TaskInfoR\ftaskInfoList\"\xb1\x03\n" +
	"\x18CreateReservationRequest\x12\x10\n" +
	"\x03uid\x18\x01 \x01(\rR\x03uid\x12)\n" +
	"\x10reservation_name\x18\x02 \x01(\tR\x0freservationName\x125\n" +
	"\x17start_time_unix_seconds\x18\x03 \x01(\x03R\x14startTimeUnixSeconds\x12)\n" +
	"\x10duration_seconds\x18\x04 \x01(\x03R\x0fdurationSeconds\x12\x1c\n" +
	"\tpartition\x18\x05 \x01(\tR\tpartition\x12!\n" +
	"\fcraned_regex\x18\x06 \x01(\tR\vcranedRegex\x12)\n" +
	"\x10allowed_accounts\x18\a \x03(\tR\x0fallowedAccounts\x12'\n" +
	"\x0fdenied_accounts\x18\b \x03(\tR\x0edeniedAccounts\x12#\n" +
	"\rallowed_users\x18\t \x03(\tR\fallowedUsers\x12!\n" +
	"\fdenied_users\x18\n" +
	" \x03(\tR\vdeniedUsers\x12\x19\n" +
	"\bnode_num\x18\v \x01(\rR\anodeNum\"@\n" +
	"\x16CreateReservationReply\x12\x0e\n" +
	"\x02ok\x18\x01 \x01(\bR\x02ok\x12\x16\n" +
	"\x06reason\x18\x02 \x01(\tR\x06reason\"W\n" +
	"\x18DeleteReservationRequest\x12\x10\n" +
	"\x03uid\x18\x01 \x01(\rR\x03uid\x12)\n" +
	"\x10reservation_name\x18\x02 \x01(\tR\x0freservationName\"@\n" +
	"\x16DeleteReservationReply\x12\x0e\n" +
	"\x02ok\x18\x01 \x01(\bR\x02ok\x12\x16\n" +
	"\x06reason\x18\x02 \x01(\tR\x06reason\"\xa0\x04\n" +
	"\x13StreamCallocRequest\x12E\n" +
	"\x04type\x18\x01 \x01(\x0e21.crane.grpc.StreamCallocRequest.CallocRequestTypeR\x04type\x12S\n" +
	"\x10payload_task_req\x18\x02 \x01(\v2'.crane.grpc.StreamCallocRequest.TaskReqH\x00R\x0epayloadTaskReq\x12l\n" +
	"\x19payload_task_complete_req\x18\x03 \x01(\v2/.crane.grpc.StreamCallocRequest.TaskCompleteReqH\x00R\x16payloadTaskCompleteReq\x1aT\n" +
	"\aTaskReq\x12\x1d\n" +
	"\n" +
	"calloc_pid\x18\x01 \x01(\x05R\tcallocPid\x12*\n" +
	"\x04task\x18\x02 \x01(\v2\x16.crane.grpc.TaskToCtldR\x04task\x1aZ\n" +
	"\x0fTaskCompleteReq\x12\x17\n" +
	"\atask_id\x18\x01 \x01(\rR\x06taskId\x12.\n" +
	"\x06status\x18\x02 \x01(\x0e2\x16.crane.grpc.TaskStatusR\x06status\"B\n" +
	"\x11CallocRequestType\x12\x10\n" +
	"\fTASK_REQUEST\x10\x00\x12\x1b\n" +
	"\x17TASK_COMPLETION_REQUEST\x10\x01B\t\n" +
	"\apayload\"\xb4\a\n" +
	"\x11StreamCallocReply\x12A\n" +
	"\x04type\x18\x01 \x01(\x0e2-.crane.grpc.StreamCallocReply.CforedReplyTypeR\x04type\x12^\n" +
	"\x15payload_task_id_reply\x18\x02 \x01(\v2).crane.grpc.StreamCallocReply.TaskIdReplyH\x00R\x12payloadTaskIdReply\x12n\n" +
	"\x18payload_task_alloc_reply\x18\x03 \x01(\v23.crane.grpc.StreamCallocReply.TaskResAllocatedReplyH\x00R\x15payloadTaskAllocReply\x12p\n" +
	"\x1bpayload_task_cancel_request\x18\x04 \x01(\v2/.crane.grpc.StreamCallocReply.TaskCancelRequestH\x00R\x18payloadTaskCancelRequest\x12\x80\x01\n" +
	"!payload_task_completion_ack_reply\x18\x05 \x01(\v24.crane.grpc.StreamCallocReply.TaskCompletionAckReplyH\x00R\x1dpayloadTaskCompletionAckReply\x1a]\n" +
	"\vTaskIdReply\x12\x0e\n" +
	"\x02ok\x18\x01 \x01(\bR\x02ok\x12\x17\n" +
	"\atask_id\x18\x02 \x01(\rR\x06taskId\x12%\n" +
	"\x0efailure_reason\x18\x03 \x01(\tR\rfailureReason\x1a]\n" +
	"\x15TaskResAllocatedReply\x12\x0e\n" +
	"\x02ok\x18\x01 \x01(\bR\x02ok\x124\n" +
	"\x16allocated_craned_regex\x18\x02 \x01(\tR\x14allocatedCranedRegex\x1a,\n" +
	"\x11TaskCancelRequest\x12\x17\n" +
	"\atask_id\x18\x01 \x01(\rR\x06taskId\x1a(\n" +
	"\x16TaskCompletionAckReply\x12\x0e\n" +
	"\x02ok\x18\x01 \x01(\bR\x02ok\"v\n" +
	"\x0fCforedReplyType\x12\x11\n" +
	"\rTASK_ID_REPLY\x10\x00\x12\x18\n" +
	"\x14TASK_RES_ALLOC_REPLY\x10\x01\x12\x17\n" +
	"\x13TASK_CANCEL_REQUEST\x10\x02\x12\x1d\n" +
	"\x19TASK_COMPLETION_ACK_REPLY\x10\x03B\t\n" +
	"\apayload\"\x80\b\n" +
	"\x13StreamCforedRequest\x12E\n" +
	"\x04type\x18\x01 \x01(\x0e21.crane.grpc.StreamCforedRequest.CforedRequestTypeR\x04type\x12Y\n" +
	"\x12payload_cfored_reg\x18\x02 \x01(\v2).crane.grpc.StreamCforedRequest.CforedRegH\x00R\x10payloadCforedReg\x12S\n" +
	"\x10payload_task_req\x18\x03 \x01(\v2'.crane.grpc.StreamCforedRequest.TaskReqH\x00R\x0epayloadTaskReq\x12l\n" +
	"\x19payload_task_complete_req\x18\x04 \x01(\v2/.crane.grpc.StreamCforedRequest.TaskCompleteReqH\x00R\x16payloadTaskCompleteReq\x12l\n" +
	"\x19payload_graceful_exit_req\x18\x05 \x01(\v2/.crane.grpc.StreamCforedRequest.GracefulExitReqH\x00R\x16payloadGracefulExitReq\x1a,\n" +
	"\tCforedReg\x12\x1f\n" +
	"\vcfored_name\x18\x01 \x01(\tR\n" +
	"cforedName\x1ah\n" +
	"\aTaskReq\x12\x1f\n" +
	"\vcfored_name\x18\x01 \x01(\tR\n" +
	"cforedName\x12\x10\n" +
	"\x03pid\x18\x02 \x01(\x05R\x03pid\x12*\n" +
	"\x04task\x18\x03 \x01(\v2\x16.crane.grpc.TaskToCtldR\x04task\x1a\xc7\x01\n" +
	"\x0fTaskCompleteReq\x12\x1f\n" +
	"\vcfored_name\x18\x01 \x01(\tR\n" +
	"cforedName\x12\x17\n" +
	"\atask_id\x18\x02 \x01(\rR\x06taskId\x12.\n" +
	"\x06status\x18\x03 \x01(\x0e2\x16.crane.grpc.TaskStatusR\x06status\x12J\n" +
	"\x10interactive_type\x18\x04 \x01(\x0e2\x1f.crane.grpc.InteractiveTaskTypeR\x0finteractiveType\x1a2\n" +
	"\x0fGracefulExitReq\x12\x1f\n" +
	"\vcfored_name\x18\x01 \x01(\tR\n" +
	"cforedName\"u\n" +
	"\x11CforedRequestType\x12\x17\n" +
	"\x13CFORED_REGISTRATION\x10\x00\x12\x10\n" +
	"\fTASK_REQUEST\x10\x01\x12\x1b\n" +
	"\x17TASK_COMPLETION_REQUEST\x10\x02\x12\x18\n" +
	"\x14CFORED_GRACEFUL_EXIT\x10\x03B\t\n" +
	"\apayload\"\xa9\v\n" +
	"\x0fStreamCtldReply\x12=\n" +
	"\x04type\x18\x01 \x01(\x0e2).crane.grpc.StreamCtldReply.CtldReplyTypeR\x04type\x12h\n" +
	"\x16payload_cfored_reg_ack\x18\x02 \x01(\v21.crane.grpc.StreamCtldReply.CforedRegistrationAckH\x00R\x13payloadCforedRegAck\x12s\n" +
	"\x1cpayload_task_res_alloc_reply\x18\x03 \x01(\v21.crane.grpc.StreamCtldReply.TaskResAllocatedReplyH\x00R\x18payloadTaskResAllocReply\x12n\n" +
	"\x1bpayload_task_cancel_request\x18\x04 \x01(\v2-.crane.grpc.StreamCtldReply.TaskCancelRequestH\x00R\x18payloadTaskCancelRequest\x12s\n" +
	"\x1bpayload_task_completion_ack\x18\x05 \x01(\v22.crane.grpc.StreamCtldReply.TaskCompletionAckReplyH\x00R\x18payloadTaskCompletionAck\x12\\\n" +
	"\x15payload_task_id_reply\x18\x06 \x01(\v2'.crane.grpc.StreamCtldReply.TaskIdReplyH\x00R\x12payloadTaskIdReply\x12n\n" +
	"\x19payload_graceful_exit_ack\x18\a \x01(\v21.crane.grpc.StreamCtldReply.CforedGracefulExitAckH\x00R\x16payloadGracefulExitAck\x1ao\n" +
	"\vTaskIdReply\x12\x10\n" +
	"\x03pid\x18\x01 \x01(\x05R\x03pid\x12\x0e\n" +
	"\x02ok\x18\x02 \x01(\bR\x02ok\x12\x17\n" +
	"\atask_id\x18\x03 \x01(\rR\x06taskId\x12%\n" +
	"\x0efailure_reason\x18\x04 \x01(\tR\rfailureReason\x1a\xbc\x01\n" +
	"\x15TaskResAllocatedReply\x12\x17\n" +
	"\atask_id\x18\x01 \x01(\rR\x06taskId\x12\x0e\n" +
	"\x02ok\x18\x02 \x01(\bR\x02ok\x124\n" +
	"\x16allocated_craned_regex\x18\x03 \x01(\tR\x14allocatedCranedRegex\x12%\n" +
	"\x0efailure_reason\x18\x04 \x01(\tR\rfailureReason\x12\x1d\n" +
	"\n" +
	"craned_ids\x18\x05 \x03(\tR\tcranedIds\x1a,\n" +
	"\x11TaskCancelRequest\x12\x17\n" +
	"\atask_id\x18\x01 \x01(\rR\x06taskId\x1a1\n" +
	"\x16TaskCompletionAckReply\x12\x17\n" +
	"\atask_id\x18\x01 \x01(\rR\x06taskId\x1aN\n" +
	"\x15CforedRegistrationAck\x12\x0e\n" +
	"\x02ok\x18\x01 \x01(\bR\x02ok\x12%\n" +
	"\x0efailure_reason\x18\x02 \x01(\tR\rfailureReason\x1a'\n" +
	"\x15CforedGracefulExitAck\x12\x0e\n" +
	"\x02ok\x18\x01 \x01(\bR\x02ok\"\xaf\x01\n" +
	"\rCtldReplyType\x12\x11\n" +
	"\rTASK_ID_REPLY\x10\x00\x12\x18\n" +
	"\x14TASK_RES_ALLOC_REPLY\x10\x01\x12\x17\n" +
	"\x13TASK_CANCEL_REQUEST\x10\x02\x12\x1d\n" +
	"\x19TASK_COMPLETION_ACK_REPLY\x10\x03\x12\x1b\n" +
	"\x17CFORED_REGISTRATION_ACK\x10\x04\x12\x1c\n" +
	"\x18CFORED_GRACEFUL_EXIT_ACK\x10\x05B\t\n" +
	"\apayload\"\xaf\a\n" +
	"\x11StreamCrunRequest\x12A\n" +
	"\x04type\x18\x01 \x01(\x0e2-.crane.grpc.StreamCrunRequest.CrunRequestTypeR\x04type\x12Q\n" +
	"\x10payload_task_req\x18\x02 \x01(\v2%.crane.grpc.StreamCrunRequest.TaskReqH\x00R\x0epayloadTaskReq\x12j\n" +
	"\x19payload_task_complete_req\x18\x03 \x01(\v2-.crane.grpc.StreamCrunRequest.TaskCompleteReqH\x00R\x16payloadTaskCompleteReq\x12n\n" +
	"\x1bpayload_task_io_forward_req\x18\x04 \x01(\v2..crane.grpc.StreamCrunRequest.TaskIOForwardReqH\x00R\x17payloadTaskIoForwardReq\x12q\n" +
	"\x1cpayload_task_x11_forward_req\x18\x05 \x01(\v2/.crane.grpc.StreamCrunRequest.TaskX11ForwardReqH\x00R\x18payloadTaskX11ForwardReq\x1aP\n" +
	"\aTaskReq\x12\x19\n" +
	"\bcrun_pid\x18\x01 \x01(\x05R\acrunPid\x12*\n" +
	"\x04task\x18\x02 \x01(\v2\x16.crane.grpc.TaskToCtldR\x04task\x1aZ\n" +
	"\x0fTaskCompleteReq\x12\x17\n" +
	"\atask_id\x18\x01 \x01(\rR\x06taskId\x12.\n" +
	"\x06status\x18\x02 \x01(\x0e2\x16.crane.grpc.TaskStatusR\x06status\x1aO\n" +
	"\x10TaskIOForwardReq\x12\x17\n" +
	"\atask_id\x18\x01 \x01(\rR\x06taskId\x12\x10\n" +
	"\x03msg\x18\x02 \x01(\fR\x03msg\x12\x10\n" +
	"\x03eof\x18\x03 \x01(\bR\x03eof\x1a>\n" +
	"\x11TaskX11ForwardReq\x12\x17\n" +
	"\atask_id\x18\x01 \x01(\rR\x06taskId\x12\x10\n" +
	"\x03msg\x18\x02 \x01(\fR\x03msg\"k\n" +
	"\x0fCrunRequestType\x12\x10\n" +
	"\fTASK_REQUEST\x10\x00\x12\x1b\n" +
	"\x17TASK_COMPLETION_REQUEST\x10\x01\x12\x13\n" +
	"\x0fTASK_IO_FORWARD\x10\x02\x12\x14\n" +
	"\x10TASK_X11_FORWARD\x10\x03B\t\n" +
	"\apayload\"\xe2\v\n" +
	"\x0fStreamCrunReply\x12C\n" +
	"\x04type\x18\x01 \x01(\x0e2/.crane.grpc.StreamCrunReply.CforedCrunReplyTypeR\x04type\x12\\\n" +
	"\x15payload_task_id_reply\x18\x02 \x01(\v2'.crane.grpc.StreamCrunReply.TaskIdReplyH\x00R\x12payloadTaskIdReply\x12l\n" +
	"\x18payload_task_alloc_reply\x18\x03 \x01(\v21.crane.grpc.StreamCrunReply.TaskResAllocatedReplyH\x00R\x15payloadTaskAllocReply\x12n\n" +
	"\x1bpayload_task_cancel_request\x18\x04 \x01(\v2-.crane.grpc.StreamCrunReply.TaskCancelRequestH\x00R\x18payloadTaskCancelRequest\x12~\n" +
	"!payload_task_completion_ack_reply\x18\x05 \x01(\v22.crane.grpc.StreamCrunReply.TaskCompletionAckReplyH\x00R\x1dpayloadTaskCompletionAckReply\x12\x82\x01\n" +
	"#payload_task_io_forward_ready_reply\x18\x06 \x01(\v23.crane.grpc.StreamCrunReply.TaskIOForwardReadyReplyH\x00R\x1epayloadTaskIoForwardReadyReply\x12r\n" +
	"\x1dpayload_task_io_forward_reply\x18\a \x01(\v2..crane.grpc.StreamCrunReply.TaskIOForwardReplyH\x00R\x19payloadTaskIoForwardReply\x12u\n" +
	"\x1epayload_task_x11_forward_reply\x18\b \x01(\v2/.crane.grpc.StreamCrunReply.TaskX11ForwardReplyH\x00R\x1apayloadTaskX11ForwardReply\x1a]\n" +
	"\vTaskIdReply\x12\x0e\n" +
	"\x02ok\x18\x01 \x01(\bR\x02ok\x12\x17\n" +
	"\atask_id\x18\x02 \x01(\rR\x06taskId\x12%\n" +
	"\x0efailure_reason\x18\x03 \x01(\tR\rfailureReason\x1a]\n" +
	"\x15TaskResAllocatedReply\x12\x0e\n" +
	"\x02ok\x18\x01 \x01(\bR\x02ok\x124\n" +
	"\x16allocated_craned_regex\x18\x02 \x01(\tR\x14allocatedCranedRegex\x1a,\n" +
	"\x11TaskCancelRequest\x12\x17\n" +
	"\atask_id\x18\x01 \x01(\rR\x06taskId\x1a(\n" +
	"\x16TaskCompletionAckReply\x12\x0e\n" +
	"\x02ok\x18\x01 \x01(\bR\x02ok\x1a)\n" +
	"\x17TaskIOForwardReadyReply\x12\x0e\n" +
	"\x02ok\x18\x01 \x01(\bR\x02ok\x1a&\n" +
	"\x12TaskIOForwardReply\x12\x10\n" +
	"\x03msg\x18\x01 \x01(\fR\x03msg\x1a'\n" +
	"\x13TaskX11ForwardReply\x12\x10\n" +
	"\x03msg\x18\x01 \x01(\fR\x03msg\"\xc0\x01\n" +
	"\x13CforedCrunReplyType\x12\x11\n" +
	"\rTASK_ID_REPLY\x10\x00\x12\x18\n" +
	"\x14TASK_RES_ALLOC_REPLY\x10\x01\x12\x17\n" +
	"\x13TASK_CANCEL_REQUEST\x10\x02\x12\x1d\n" +
	"\x19TASK_COMPLETION_ACK_REPLY\x10\x03\x12\x13\n" +
	"\x0fTASK_IO_FORWARD\x10\x04\x12\x19\n" +
	"\x15TASK_IO_FORWARD_READY\x10\x05\x12\x14\n" +
	"\x10TASK_X11_FORWARD\x10\x06B\t\n" +
	"\apayload\"\xe1\a\n" +
	"\x13StreamTaskIORequest\x12I\n" +
	"\x04type\x18\x01 \x01(\x0e25.crane.grpc.StreamTaskIORequest.SupervisorRequestTypeR\x04type\x12i\n" +
	"\x14payload_register_req\x18\x02 \x01(\v25.crane.grpc.StreamTaskIORequest.SupervisorRegisterReqH\x00R\x12payloadRegisterReq\x12f\n" +
	"\x17payload_task_output_req\x18\x03 \x01(\v2-.crane.grpc.StreamTaskIORequest.TaskOutputReqH\x00R\x14payloadTaskOutputReq\x12o\n" +
	"\x16payload_unregister_req\x18\x04 \x01(\v27.crane.grpc.StreamTaskIORequest.SupervisorUnRegisterReqH\x00R\x14payloadUnregisterReq\x12p\n" +
	"\x1bpayload_task_x11_output_req\x18\x05 \x01(\v20.crane.grpc.StreamTaskIORequest.TaskX11OutputReqH\x00R\x17payloadTaskX11OutputReq\x1af\n" +
	"\x15SupervisorRegisterReq\x12\x1b\n" +
	"\tcraned_id\x18\x01 \x01(\tR\bcranedId\x12\x17\n" +
	"\atask_id\x18\x02 \x01(\rR\x06taskId\x12\x17\n" +
	"\astep_id\x18\x03 \x01(\rR\x06stepId\x1a!\n" +
	"\rTaskOutputReq\x12\x10\n" +
	"\x03msg\x18\x02 \x01(\fR\x03msg\x1ah\n" +
	"\x17SupervisorUnRegisterReq\x12\x1b\n" +
	"\tcraned_id\x18\x01 \x01(\tR\bcranedId\x12\x17\n" +
	"\atask_id\x18\x02 \x01(\rR\x06taskId\x12\x17\n" +
	"\astep_id\x18\x03 \x01(\rR\x06stepId\x1aV\n" +
	"\x10TaskX11OutputReq\x12\x17\n" +
	"\atask_id\x18\x01 \x01(\rR\x06taskId\x12\x17\n" +
	"\astep_id\x18\x02 \x01(\rR\x06stepId\x12\x10\n" +
	"\x03msg\x18\x03 \x01(\fR\x03msg\"q\n" +
	"\x15SupervisorRequestType\x12\x17\n" +
	"\x13SUPERVISOR_REGISTER\x10\x00\x12\x0f\n" +
	"\vTASK_OUTPUT\x10\x01\x12\x19\n" +
	"\x15SUPERVISOR_UNREGISTER\x10\x02\x12\x13\n" +
	"\x0fTASK_X11_OUTPUT\x10\x03B\t\n" +
	"\apayload\"\xd5\a\n" +
	"\x11StreamTaskIOReply\x12E\n" +
	"\x04type\x18\x01 \x01(\x0e21.crane.grpc.StreamTaskIOReply.SupervisorReplyTypeR\x04type\x12\x82\x01\n" +
	"!payload_supervisor_register_reply\x18\x02 \x01(\v25.crane.grpc.StreamTaskIOReply.SupervisorRegisterReplyH\x00R\x1epayloadSupervisorRegisterReply\x12a\n" +
	"\x16payload_task_input_req\x18\x03 \x01(\v2*.crane.grpc.StreamTaskIOReply.TaskInputReqH\x00R\x13payloadTaskInputReq\x12\x88\x01\n" +
	"#payload_supervisor_unregister_reply\x18\x04 \x01(\v27.crane.grpc.StreamTaskIOReply.SupervisorUnregisterReplyH\x00R payloadSupervisorUnregisterReply\x12k\n" +
	"\x1apayload_task_x11_input_req\x18\x05 \x01(\v2-.crane.grpc.StreamTaskIOReply.TaskX11InputReqH\x00R\x16payloadTaskX11InputReq\x1a)\n" +
	"\x17SupervisorRegisterReply\x12\x0e\n" +
	"\x02ok\x18\x01 \x01(\bR\x02ok\x1ad\n" +
	"\fTaskInputReq\x12\x17\n" +
	"\atask_id\x18\x01 \x01(\rR\x06taskId\x12\x17\n" +
	"\astep_id\x18\x02 \x01(\rR\x06stepId\x12\x10\n" +
	"\x03msg\x18\x03 \x01(\fR\x03msg\x12\x10\n" +
	"\x03eof\x18\x04 \x01(\bR\x03eof\x1a+\n" +
	"\x19SupervisorUnregisterReply\x12\x0e\n" +
	"\x02ok\x18\x01 \x01(\bR\x02ok\x1aU\n" +
	"\x0fTaskX11InputReq\x12\x17\n" +
	"\atask_id\x18\x01 \x01(\rR\x06taskId\x12\x17\n" +
	"\astep_id\x18\x02 \x01(\rR\x06stepId\x12\x10\n" +
	"\x03msg\x18\x03 \x01(\fR\x03msg\"y\n" +
	"\x13SupervisorReplyType\x12\x1d\n" +
	"\x19SUPERVISOR_REGISTER_REPLY\x10\x00\x12\x0e\n" +
	"\n" +
	"TASK_INPUT\x10\x01\x12\x1f\n" +
	"\x1bSUPERVISOR_UNREGISTER_REPLY\x10\x02\x12\x12\n" +
	"\x0eTASK_X11_INPUT\x10\x03B\t\n" +
	"\apayload\"\x82\x01\n" +
	"\x17PowerStateChangeRequest\x12\x1b\n" +
	"\tcraned_id\x18\x01 \x01(\tR\bcranedId\x122\n" +
	"\x05state\x18\x02 \x01(\x0e2\x1c.crane.grpc.CranedPowerStateR\x05state\x12\x16\n" +
	"\x06reason\x18\x03 \x01(\tR\x06reason\"'\n" +
	"\x15PowerStateChangeReply\x12\x0e\n" +
	"\x02ok\x18\x01 \x01(\bR\x02ok\"h\n" +
	"\x1dEnableAutoPowerControlRequest\x12\x10\n" +
	"\x03uid\x18\x01 \x01(\rR\x03uid\x12\x1d\n" +
	"\n" +
	"craned_ids\x18\x02 \x03(\tR\tcranedIds\x12\x16\n" +
	"\x06enable\x18\x03 \x01(\bR\x06enable\"\xa4\x01\n" +
	"\x1bEnableAutoPowerControlReply\x12%\n" +
	"\x0emodified_nodes\x18\x01 \x03(\tR\rmodifiedNodes\x12,\n" +
	"\x12not_modified_nodes\x18\x02 \x03(\tR\x10notModifiedNodes\x120\n" +
	"\x14not_modified_reasons\x18\x03 \x03(\tR\x12notModifiedReasons\"l\n" +
	"\x1aSignUserCertificateRequest\x12\x10\n" +
	"\x03uid\x18\x01 \x01(\rR\x03uid\x12\x1f\n" +
	"\vcsr_content\x18\x02 \x01(\tR\n" +
	"csrContent\x12\x1b\n" +
	"\talt_names\x18\x03 \x01(\tR\baltNames\"|\n" +
	"\x1bSignUserCertificateResponse\x12\x0e\n" +
	"\x02ok\x18\x01 \x01(\bR\x02ok\x12 \n" +
	"\vcertificate\x18\x02 \x01(\tR\vcertificate\x12+\n" +
	"\x06reason\x18\x03 \x01(\x0e2\x13.crane.grpc.ErrCodeR\x06reason\"K\n" +
	"\x1aResetUserCredentialRequest\x12\x10\n" +
	"\x03uid\x18\x01 \x01(\rR\x03uid\x12\x1b\n" +
	"\tuser_list\x18\x02 \x03(\tR\buserList\"i\n" +
	"\x18ResetUserCredentialReply\x12\x0e\n" +
	"\x02ok\x18\x01 \x01(\bR\x02ok\x12=\n" +
	"\x0frich_error_list\x18\x02 \x03(\v2\x15.crane.grpc.RichErrorR\rrichErrorList\"\xbf\x01\n" +
	"\x12QueryTxnLogRequest\x12\x10\n" +
	"\x03uid\x18\x01 \x01(\rR\x03uid\x12\x14\n" +
	"\x05actor\x18\x02 \x01(\tR\x05actor\x12\x16\n" +
	"\x06target\x18\x03 \x01(\tR\x06target\x12\x16\n" +
	"\x06action\x18\x04 \x01(\tR\x06action\x12\x12\n" +
	"\x04info\x18\x05 \x01(\tR\x04info\x12=\n" +
	"\rtime_interval\x18\x06 \x01(\v2\x18.crane.grpc.TimeIntervalR\ftimeInterval\"\xad\x02\n" +
	"\x10QueryTxnLogReply\x12\x0e\n" +
	"\x02ok\x18\x01 \x01(\bR\x02ok\x12'\n" +
	"\x04code\x18\x02 \x01(\x0e2\x13.crane.grpc.ErrCodeR\x04code\x12B\n" +
	"\ftxn_log_list\x18\x03 \x03(\v2 .crane.grpc.QueryTxnLogReply.TxnR\n" +
	"txnLogList\x1a\x9b\x01\n" +
	"\x03Txn\x12\x14\n" +
	"\x05actor\x18\x01 \x01(\tR\x05actor\x12\x16\n" +
	"\x06target\x18\x02 \x01(\tR\x06target\x12-\n" +
	"\x06action\x18\x03 \x01(\x0e2\x15.crane.grpc.TxnActionR\x06action\x12\x12\n" +
	"\x04info\x18\x04 \x01(\tR\x04info\x12#\n" +
	"\rcreation_time\x18\x05 \x01(\x03R\fcreationTime2\xe2\x15\n" +
	"\tCraneCtld\x12H\n" +
	"\n" +
	"CancelTask\x12\x1d.crane.grpc.CancelTaskRequest\x1a\x1b.crane.grpc.CancelTaskReply\x12W\n" +
	"\x0fSubmitBatchTask\x12\".crane.grpc.SubmitBatchTaskRequest\x1a .crane.grpc.SubmitBatchTaskReply\x12Z\n" +
	"\x10SubmitBatchTasks\x12#.crane.grpc.SubmitBatchTasksRequest\x1a!.crane.grpc.SubmitBatchTasksReply\x12W\n" +
	"\x0fQueryCranedInfo\x12\".crane.grpc.QueryCranedInfoRequest\x1a .crane.grpc.QueryCranedInfoReply\x12`\n" +
	"\x12QueryPartitionInfo\x12%.crane.grpc.QueryPartitionInfoRequest\x1a#.crane.grpc.QueryPartitionInfoReply\x12f\n" +
	"\x14QueryReservationInfo\x12'.crane.grpc.QueryReservationInfoRequest\x1a%.crane.grpc.QueryReservationInfoReply\x12H\n" +
	"\n" +
	"ModifyTask\x12\x1d.crane.grpc.ModifyTaskRequest\x1a\x1b.crane.grpc.ModifyTaskReply\x12V\n" +
	"\n" +
	"ModifyNode\x12$.crane.grpc.ModifyCranedStateRequest\x1a\".crane.grpc.ModifyCranedStateReply\x12`\n" +
	"\x12ModifyPartitionAcl\x12%.crane.grpc.ModifyPartitionAclRequest\x1a#.crane.grpc.ModifyPartitionAclReply\x12l\n" +
	"\x16EnableAutoPowerControl\x12).crane.grpc.EnableAutoPowerControlRequest\x1a'.crane.grpc.EnableAutoPowerControlReply\x12i\n" +
	"\x15ModifyTasksExtraAttrs\x12(.crane.grpc.ModifyTasksExtraAttrsRequest\x1a&.crane.grpc.ModifyTasksExtraAttrsReply\x12H\n" +
	"\n" +
	"AddAccount\x12\x1d.crane.grpc.AddAccountRequest\x1a\x1b.crane.grpc.AddAccountReply\x12?\n" +
	"\aAddUser\x12\x1a.crane.grpc.AddUserRequest\x1a\x18.crane.grpc.AddUserReply\x12<\n" +
	"\x06AddQos\x12\x19.crane.grpc.AddQosRequest\x1a\x17.crane.grpc.AddQosReply\x12Q\n" +
	"\rDeleteAccount\x12 .crane.grpc.DeleteAccountRequest\x1a\x1e.crane.grpc.DeleteAccountReply\x12H\n" +
	"\n" +
	"DeleteUser\x12\x1d.crane.grpc.DeleteUserRequest\x1a\x1b.crane.grpc.DeleteUserReply\x12E\n" +
	"\tDeleteQos\x12\x1c.crane.grpc.DeleteQosRequest\x1a\x1a.crane.grpc.DeleteQosReply\x12Z\n" +
	"\x10QueryAccountInfo\x12#.crane.grpc.QueryAccountInfoRequest\x1a!.crane.grpc.QueryAccountInfoReply\x12Q\n" +
	"\rQueryUserInfo\x12 .crane.grpc.QueryUserInfoRequest\x1a\x1e.crane.grpc.QueryUserInfoReply\x12N\n" +
	"\fQueryQosInfo\x12\x1f.crane.grpc.QueryQosInfoRequest\x1a\x1d.crane.grpc.QueryQosInfoReply\x12Q\n" +
	"\rModifyAccount\x12 .crane.grpc.ModifyAccountRequest\x1a\x1e.crane.grpc.ModifyAccountReply\x12H\n" +
	"\n" +
	"ModifyUser\x12\x1d.crane.grpc.ModifyUserRequest\x1a\x1b.crane.grpc.ModifyUserReply\x12E\n" +
	"\tModifyQos\x12\x1c.crane.grpc.ModifyQosRequest\x1a\x1a.crane.grpc.ModifyQosReply\x12`\n" +
	"\x12BlockAccountOrUser\x12%.crane.grpc.BlockAccountOrUserRequest\x1a#.crane.grpc.BlockAccountOrUserReply\x12c\n" +
	"\x13ResetUserCredential\x12&.crane.grpc.ResetUserCredentialRequest\x1a$.crane.grpc.ResetUserCredentialReply\x12K\n" +
	"\vQueryTxnLog\x12\x1e.crane.grpc.QueryTxnLogRequest\x1a\x1c.crane.grpc.QueryTxnLogReply\x12Z\n" +
	"\x10QueryClusterInfo\x12#.crane.grpc.QueryClusterInfoRequest\x1a!.crane.grpc.QueryClusterInfoReply\x12T\n" +
	"\x0eQueryTasksInfo\x12!.crane.grpc.QueryTasksInfoRequest\x1a\x1f.crane.grpc.QueryTasksInfoReply\x12]\n" +
	"\x11CreateReservation\x12$.crane.grpc.CreateReservationRequest\x1a\".crane.grpc.CreateReservationReply\x12]\n" +
	"\x11DeleteReservation\x12$.crane.grpc.DeleteReservationRequest\x1a\".crane.grpc.DeleteReservationReply\x12Z\n" +
	"\x10PowerStateChange\x12#.crane.grpc.PowerStateChangeRequest\x1a!.crane.grpc.PowerStateChangeReply\x12f\n" +
	"\x13SignUserCertificate\x12&.crane.grpc.SignUserCertificateRequest\x1a'.crane.grpc.SignUserCertificateResponse2\xc5\x03\n" +
	"\x14CraneCtldForInternal\x12Z\n" +
	"\x10StepStatusChange\x12#.crane.grpc.StepStatusChangeRequest\x1a!.crane.grpc.StepStatusChangeReply\x12_\n" +
	"\x18CranedTriggerReverseConn\x12+.crane.grpc.CranedTriggerReverseConnRequest\x1a\x16.google.protobuf.Empty\x12T\n" +
	"\x0eCranedRegister\x12!.crane.grpc.CranedRegisterRequest\x1a\x1f.crane.grpc.CranedRegisterReply\x12H\n" +
	"\n" +
	"CranedPing\x12\x1d.crane.grpc.CranedPingRequest\x1a\x1b.crane.grpc.CranedPingReply\x12P\n" +
	"\fCforedStream\x12\x1f.crane.grpc.StreamCforedRequest\x1a\x1b.crane.grpc.StreamCtldReply(\x010\x012\x87\b\n" +
	"\x06Craned\x12G\n" +
	"\tConfigure\x12\".crane.grpc.ConfigureCranedRequest\x1a\x16.google.protobuf.Empty\x12N\n" +
	"\fExecuteSteps\x12\x1f.crane.grpc.ExecuteStepsRequest\x1a\x1d.crane.grpc.ExecuteStepsReply\x12c\n" +
	"\x13CreateCgroupForJobs\x12&.crane.grpc.CreateCgroupForJobsRequest\x1a$.crane.grpc.CreateCgroupForJobsReply\x12E\n" +
	"\tFreeSteps\x12\x1c.crane.grpc.FreeStepsRequest\x1a\x1a.crane.grpc.FreeStepsReply\x12f\n" +
	"\x14ReleaseCgroupForJobs\x12'.crane.grpc.ReleaseCgroupForJobsRequest\x1a%.crane.grpc.ReleaseCgroupForJobsReply\x12T\n" +
	"\x0eTerminateSteps\x12!.crane.grpc.TerminateStepsRequest\x1a\x1f.crane.grpc.TerminateStepsReply\x12i\n" +
	"\x15TerminateOrphanedStep\x12(.crane.grpc.TerminateOrphanedStepRequest\x1a&.crane.grpc.TerminateOrphanedStepReply\x12`\n" +
	"\x12ChangeJobTimeLimit\x12%.crane.grpc.ChangeJobTimeLimitRequest\x1a#.crane.grpc.ChangeJobTimeLimitReply\x12]\n" +
	"\x11QueryStepFromPort\x12$.crane.grpc.QueryStepFromPortRequest\x1a\".crane.grpc.QueryStepFromPortReply\x12r\n" +
	"\x18QuerySshStepEnvVariables\x12+.crane.grpc.QuerySshStepEnvVariablesRequest\x1a).crane.grpc.QuerySshStepEnvVariablesReply\x12Z\n" +
	"\x10StepStatusChange\x12#.crane.grpc.StepStatusChangeRequest\x1a!.crane.grpc.StepStatusChangeReply2\xfa\x02\n" +
	"\fCranedForPam\x12r\n" +
	"\x18QueryStepFromPortForward\x12+.crane.grpc.QueryStepFromPortForwardRequest\x1a).crane.grpc.QueryStepFromPortForwardReply\x12l\n" +
	"\x16MigrateSshProcToCgroup\x12).crane.grpc.MigrateSshProcToCgroupRequest\x1a'.crane.grpc.MigrateSshProcToCgroupReply\x12\x87\x01\n" +
	"\x1fQuerySshStepEnvVariablesForward\x122.crane.grpc.QuerySshStepEnvVariablesForwardRequest\x1a0.crane.grpc.QuerySshStepEnvVariablesForwardReply2\xe1\x02\n" +
	"\n" +
	"CraneForeD\x12R\n" +
	"\fCallocStream\x12\x1f.crane.grpc.StreamCallocRequest\x1a\x1d.crane.grpc.StreamCallocReply(\x010\x01\x12L\n" +
	"\n" +
	"CrunStream\x12\x1d.crane.grpc.StreamCrunRequest\x1a\x1b.crane.grpc.StreamCrunReply(\x010\x01\x12R\n" +
	"\fTaskIOStream\x12\x1f.crane.grpc.StreamTaskIORequest\x1a\x1d.crane.grpc.StreamTaskIOReply(\x010\x01\x12]\n" +
	"\x11QueryStepFromPort\x12$.crane.grpc.QueryStepFromPortRequest\x1a\".crane.grpc.QueryStepFromPortReplyB}\n" +
	"\x0ecom.crane.grpcB\n" +
	"CraneProtoP\x01Z\x16scow-crane-adapter/gen\xa2\x02\x03CGX\xaa\x02\n" +
	"Crane.Grpc\xca\x02\n" +
	"Crane\\Grpc\xe2\x02\x16Crane\\Grpc\\GPBMetadata\xea\x02\vCrane::Grpcb\x06proto3"

var (
	file_Crane_proto_rawDescOnce sync.Once
	file_Crane_proto_rawDescData []byte
)

func file_Crane_proto_rawDescGZIP() []byte {
	file_Crane_proto_rawDescOnce.Do(func() {
		file_Crane_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_Crane_proto_rawDesc), len(file_Crane_proto_rawDesc)))
	})
	return file_Crane_proto_rawDescData
}

var file_Crane_proto_enumTypes = make([]protoimpl.EnumInfo, 9)
var file_Crane_proto_msgTypes = make([]protoimpl.MessageInfo, 147)
var file_Crane_proto_goTypes = []any{
	(ModifyTaskRequest_TargetAttributes)(0),             // 0: crane.grpc.ModifyTaskRequest.TargetAttributes
	(StreamCallocRequest_CallocRequestType)(0),          // 1: crane.grpc.StreamCallocRequest.CallocRequestType
	(StreamCallocReply_CforedReplyType)(0),              // 2: crane.grpc.StreamCallocReply.CforedReplyType
	(StreamCforedRequest_CforedRequestType)(0),          // 3: crane.grpc.StreamCforedRequest.CforedRequestType
	(StreamCtldReply_CtldReplyType)(0),                  // 4: crane.grpc.StreamCtldReply.CtldReplyType
	(StreamCrunRequest_CrunRequestType)(0),              // 5: crane.grpc.StreamCrunRequest.CrunRequestType
	(StreamCrunReply_CforedCrunReplyType)(0),            // 6: crane.grpc.StreamCrunReply.CforedCrunReplyType
	(StreamTaskIORequest_SupervisorRequestType)(0),      // 7: crane.grpc.StreamTaskIORequest.SupervisorRequestType
	(StreamTaskIOReply_SupervisorReplyType)(0),          // 8: crane.grpc.StreamTaskIOReply.SupervisorReplyType
	(*StepStatusChangeRequest)(nil),                     // 9: crane.grpc.StepStatusChangeRequest
	(*StepStatusChangeReply)(nil),                       // 10: crane.grpc.StepStatusChangeReply
	(*CranedTriggerReverseConnRequest)(nil),             // 11: crane.grpc.CranedTriggerReverseConnRequest
	(*ConfigureCranedRequest)(nil),                      // 12: crane.grpc.ConfigureCranedRequest
	(*CranedRegisterRequest)(nil),                       // 13: crane.grpc.CranedRegisterRequest
	(*CranedRegisterReply)(nil),                         // 14: crane.grpc.CranedRegisterReply
	(*CranedPingRequest)(nil),                           // 15: crane.grpc.CranedPingRequest
	(*CranedPingReply)(nil),                             // 16: crane.grpc.CranedPingReply
	(*QueryCranedListFromTaskIdRequest)(nil),            // 17: crane.grpc.QueryCranedListFromTaskIdRequest
	(*QueryCranedListFromTaskIdReply)(nil),              // 18: crane.grpc.QueryCranedListFromTaskIdReply
	(*SubmitBatchTaskRequest)(nil),                      // 19: crane.grpc.SubmitBatchTaskRequest
	(*SubmitBatchTaskReply)(nil),                        // 20: crane.grpc.SubmitBatchTaskReply
	(*SubmitBatchTasksRequest)(nil),                     // 21: crane.grpc.SubmitBatchTasksRequest
	(*SubmitBatchTasksReply)(nil),                       // 22: crane.grpc.SubmitBatchTasksReply
	(*ExecuteStepsRequest)(nil),                         // 23: crane.grpc.ExecuteStepsRequest
	(*ExecuteStepsReply)(nil),                           // 24: crane.grpc.ExecuteStepsReply
	(*CreateCgroupForJobsRequest)(nil),                  // 25: crane.grpc.CreateCgroupForJobsRequest
	(*CreateCgroupForJobsReply)(nil),                    // 26: crane.grpc.CreateCgroupForJobsReply
	(*FreeStepsRequest)(nil),                            // 27: crane.grpc.FreeStepsRequest
	(*FreeStepsReply)(nil),                              // 28: crane.grpc.FreeStepsReply
	(*ReleaseCgroupForJobsRequest)(nil),                 // 29: crane.grpc.ReleaseCgroupForJobsRequest
	(*ReleaseCgroupForJobsReply)(nil),                   // 30: crane.grpc.ReleaseCgroupForJobsReply
	(*TerminateStepsRequest)(nil),                       // 31: crane.grpc.TerminateStepsRequest
	(*TerminateStepsReply)(nil),                         // 32: crane.grpc.TerminateStepsReply
	(*TerminateOrphanedStepRequest)(nil),                // 33: crane.grpc.TerminateOrphanedStepRequest
	(*TerminateOrphanedStepReply)(nil),                  // 34: crane.grpc.TerminateOrphanedStepReply
	(*ChangeJobTimeLimitRequest)(nil),                   // 35: crane.grpc.ChangeJobTimeLimitRequest
	(*ChangeJobTimeLimitReply)(nil),                     // 36: crane.grpc.ChangeJobTimeLimitReply
	(*CancelTaskRequest)(nil),                           // 37: crane.grpc.CancelTaskRequest
	(*CancelTaskReply)(nil),                             // 38: crane.grpc.CancelTaskReply
	(*QueryStepFromPortRequest)(nil),                    // 39: crane.grpc.QueryStepFromPortRequest
	(*QueryStepFromPortReply)(nil),                      // 40: crane.grpc.QueryStepFromPortReply
	(*QueryStepFromPortForwardRequest)(nil),             // 41: crane.grpc.QueryStepFromPortForwardRequest
	(*QueryStepFromPortForwardReply)(nil),               // 42: crane.grpc.QueryStepFromPortForwardReply
	(*QueryCranedInfoRequest)(nil),                      // 43: crane.grpc.QueryCranedInfoRequest
	(*QueryCranedInfoReply)(nil),                        // 44: crane.grpc.QueryCranedInfoReply
	(*QueryPartitionInfoRequest)(nil),                   // 45: crane.grpc.QueryPartitionInfoRequest
	(*QueryPartitionInfoReply)(nil),                     // 46: crane.grpc.QueryPartitionInfoReply
	(*QueryReservationInfoRequest)(nil),                 // 47: crane.grpc.QueryReservationInfoRequest
	(*QueryReservationInfoReply)(nil),                   // 48: crane.grpc.QueryReservationInfoReply
	(*ModifyTaskRequest)(nil),                           // 49: crane.grpc.ModifyTaskRequest
	(*ModifyTaskReply)(nil),                             // 50: crane.grpc.ModifyTaskReply
	(*ModifyTasksExtraAttrsRequest)(nil),                // 51: crane.grpc.ModifyTasksExtraAttrsRequest
	(*ModifyTasksExtraAttrsReply)(nil),                  // 52: crane.grpc.ModifyTasksExtraAttrsReply
	(*ModifyCranedStateRequest)(nil),                    // 53: crane.grpc.ModifyCranedStateRequest
	(*ModifyCranedStateReply)(nil),                      // 54: crane.grpc.ModifyCranedStateReply
	(*AddAccountRequest)(nil),                           // 55: crane.grpc.AddAccountRequest
	(*AddAccountReply)(nil),                             // 56: crane.grpc.AddAccountReply
	(*AddUserRequest)(nil),                              // 57: crane.grpc.AddUserRequest
	(*AddUserReply)(nil),                                // 58: crane.grpc.AddUserReply
	(*AddQosRequest)(nil),                               // 59: crane.grpc.AddQosRequest
	(*AddQosReply)(nil),                                 // 60: crane.grpc.AddQosReply
	(*DeleteAccountRequest)(nil),                        // 61: crane.grpc.DeleteAccountRequest
	(*DeleteAccountReply)(nil),                          // 62: crane.grpc.DeleteAccountReply
	(*DeleteUserRequest)(nil),                           // 63: crane.grpc.DeleteUserRequest
	(*DeleteUserReply)(nil),                             // 64: crane.grpc.DeleteUserReply
	(*DeleteQosRequest)(nil),                            // 65: crane.grpc.DeleteQosRequest
	(*DeleteQosReply)(nil),                              // 66: crane.grpc.DeleteQosReply
	(*ModifyAccountRequest)(nil),                        // 67: crane.grpc.ModifyAccountRequest
	(*ModifyAccountReply)(nil),                          // 68: crane.grpc.ModifyAccountReply
	(*ModifyUserRequest)(nil),                           // 69: crane.grpc.ModifyUserRequest
	(*ModifyUserReply)(nil),                             // 70: crane.grpc.ModifyUserReply
	(*ModifyQosRequest)(nil),                            // 71: crane.grpc.ModifyQosRequest
	(*ModifyQosReply)(nil),                              // 72: crane.grpc.ModifyQosReply
	(*QueryAccountInfoRequest)(nil),                     // 73: crane.grpc.QueryAccountInfoRequest
	(*QueryAccountInfoReply)(nil),                       // 74: crane.grpc.QueryAccountInfoReply
	(*QueryUserInfoRequest)(nil),                        // 75: crane.grpc.QueryUserInfoRequest
	(*QueryUserInfoReply)(nil),                          // 76: crane.grpc.QueryUserInfoReply
	(*QueryQosInfoRequest)(nil),                         // 77: crane.grpc.QueryQosInfoRequest
	(*QueryQosInfoReply)(nil),                           // 78: crane.grpc.QueryQosInfoReply
	(*BlockAccountOrUserRequest)(nil),                   // 79: crane.grpc.BlockAccountOrUserRequest
	(*BlockAccountOrUserReply)(nil),                     // 80: crane.grpc.BlockAccountOrUserReply
	(*ModifyPartitionAclRequest)(nil),                   // 81: crane.grpc.ModifyPartitionAclRequest
	(*ModifyPartitionAclReply)(nil),                     // 82: crane.grpc.ModifyPartitionAclReply
	(*MigrateSshProcToCgroupRequest)(nil),               // 83: crane.grpc.MigrateSshProcToCgroupRequest
	(*MigrateSshProcToCgroupReply)(nil),                 // 84: crane.grpc.MigrateSshProcToCgroupReply
	(*QuerySshStepEnvVariablesRequest)(nil),             // 85: crane.grpc.QuerySshStepEnvVariablesRequest
	(*QuerySshStepEnvVariablesReply)(nil),               // 86: crane.grpc.QuerySshStepEnvVariablesReply
	(*QuerySshStepEnvVariablesForwardRequest)(nil),      // 87: crane.grpc.QuerySshStepEnvVariablesForwardRequest
	(*QuerySshStepEnvVariablesForwardReply)(nil),        // 88: crane.grpc.QuerySshStepEnvVariablesForwardReply
	(*QueryClusterInfoRequest)(nil),                     // 89: crane.grpc.QueryClusterInfoRequest
	(*QueryClusterInfoReply)(nil),                       // 90: crane.grpc.QueryClusterInfoReply
	(*QueryTasksInfoRequest)(nil),                       // 91: crane.grpc.QueryTasksInfoRequest
	(*QueryTasksInfoReply)(nil),                         // 92: crane.grpc.QueryTasksInfoReply
	(*CreateReservationRequest)(nil),                    // 93: crane.grpc.CreateReservationRequest
	(*CreateReservationReply)(nil),                      // 94: crane.grpc.CreateReservationReply
	(*DeleteReservationRequest)(nil),                    // 95: crane.grpc.DeleteReservationRequest
	(*DeleteReservationReply)(nil),                      // 96: crane.grpc.DeleteReservationReply
	(*StreamCallocRequest)(nil),                         // 97: crane.grpc.StreamCallocRequest
	(*StreamCallocReply)(nil),                           // 98: crane.grpc.StreamCallocReply
	(*StreamCforedRequest)(nil),                         // 99: crane.grpc.StreamCforedRequest
	(*StreamCtldReply)(nil),                             // 100: crane.grpc.StreamCtldReply
	(*StreamCrunRequest)(nil),                           // 101: crane.grpc.StreamCrunRequest
	(*StreamCrunReply)(nil),                             // 102: crane.grpc.StreamCrunReply
	(*StreamTaskIORequest)(nil),                         // 103: crane.grpc.StreamTaskIORequest
	(*StreamTaskIOReply)(nil),                           // 104: crane.grpc.StreamTaskIOReply
	(*PowerStateChangeRequest)(nil),                     // 105: crane.grpc.PowerStateChangeRequest
	(*PowerStateChangeReply)(nil),                       // 106: crane.grpc.PowerStateChangeReply
	(*EnableAutoPowerControlRequest)(nil),               // 107: crane.grpc.EnableAutoPowerControlRequest
	(*EnableAutoPowerControlReply)(nil),                 // 108: crane.grpc.EnableAutoPowerControlReply
	(*SignUserCertificateRequest)(nil),                  // 109: crane.grpc.SignUserCertificateRequest
	(*SignUserCertificateResponse)(nil),                 // 110: crane.grpc.SignUserCertificateResponse
	(*ResetUserCredentialRequest)(nil),                  // 111: crane.grpc.ResetUserCredentialRequest
	(*ResetUserCredentialReply)(nil),                    // 112: crane.grpc.ResetUserCredentialReply
	(*QueryTxnLogRequest)(nil),                          // 113: crane.grpc.QueryTxnLogRequest
	(*QueryTxnLogReply)(nil),                            // 114: crane.grpc.QueryTxnLogReply
	nil,                                                 // 115: crane.grpc.ConfigureCranedRequest.JobMapEntry
	nil,                                                 // 116: crane.grpc.ConfigureCranedRequest.JobTasksMapEntry
	nil,                                                 // 117: crane.grpc.ModifyTasksExtraAttrsRequest.ExtraAttrsListEntry
	nil,                                                 // 118: crane.grpc.QuerySshStepEnvVariablesReply.EnvMapEntry
	nil,                                                 // 119: crane.grpc.QuerySshStepEnvVariablesForwardReply.EnvMapEntry
	(*StreamCallocRequest_TaskReq)(nil),                 // 120: crane.grpc.StreamCallocRequest.TaskReq
	(*StreamCallocRequest_TaskCompleteReq)(nil),         // 121: crane.grpc.StreamCallocRequest.TaskCompleteReq
	(*StreamCallocReply_TaskIdReply)(nil),               // 122: crane.grpc.StreamCallocReply.TaskIdReply
	(*StreamCallocReply_TaskResAllocatedReply)(nil),     // 123: crane.grpc.StreamCallocReply.TaskResAllocatedReply
	(*StreamCallocReply_TaskCancelRequest)(nil),         // 124: crane.grpc.StreamCallocReply.TaskCancelRequest
	(*StreamCallocReply_TaskCompletionAckReply)(nil),    // 125: crane.grpc.StreamCallocReply.TaskCompletionAckReply
	(*StreamCforedRequest_CforedReg)(nil),               // 126: crane.grpc.StreamCforedRequest.CforedReg
	(*StreamCforedRequest_TaskReq)(nil),                 // 127: crane.grpc.StreamCforedRequest.TaskReq
	(*StreamCforedRequest_TaskCompleteReq)(nil),         // 128: crane.grpc.StreamCforedRequest.TaskCompleteReq
	(*StreamCforedRequest_GracefulExitReq)(nil),         // 129: crane.grpc.StreamCforedRequest.GracefulExitReq
	(*StreamCtldReply_TaskIdReply)(nil),                 // 130: crane.grpc.StreamCtldReply.TaskIdReply
	(*StreamCtldReply_TaskResAllocatedReply)(nil),       // 131: crane.grpc.StreamCtldReply.TaskResAllocatedReply
	(*StreamCtldReply_TaskCancelRequest)(nil),           // 132: crane.grpc.StreamCtldReply.TaskCancelRequest
	(*StreamCtldReply_TaskCompletionAckReply)(nil),      // 133: crane.grpc.StreamCtldReply.TaskCompletionAckReply
	(*StreamCtldReply_CforedRegistrationAck)(nil),       // 134: crane.grpc.StreamCtldReply.CforedRegistrationAck
	(*StreamCtldReply_CforedGracefulExitAck)(nil),       // 135: crane.grpc.StreamCtldReply.CforedGracefulExitAck
	(*StreamCrunRequest_TaskReq)(nil),                   // 136: crane.grpc.StreamCrunRequest.TaskReq
	(*StreamCrunRequest_TaskCompleteReq)(nil),           // 137: crane.grpc.StreamCrunRequest.TaskCompleteReq
	(*StreamCrunRequest_TaskIOForwardReq)(nil),          // 138: crane.grpc.StreamCrunRequest.TaskIOForwardReq
	(*StreamCrunRequest_TaskX11ForwardReq)(nil),         // 139: crane.grpc.StreamCrunRequest.TaskX11ForwardReq
	(*StreamCrunReply_TaskIdReply)(nil),                 // 140: crane.grpc.StreamCrunReply.TaskIdReply
	(*StreamCrunReply_TaskResAllocatedReply)(nil),       // 141: crane.grpc.StreamCrunReply.TaskResAllocatedReply
	(*StreamCrunReply_TaskCancelRequest)(nil),           // 142: crane.grpc.StreamCrunReply.TaskCancelRequest
	(*StreamCrunReply_TaskCompletionAckReply)(nil),      // 143: crane.grpc.StreamCrunReply.TaskCompletionAckReply
	(*StreamCrunReply_TaskIOForwardReadyReply)(nil),     // 144: crane.grpc.StreamCrunReply.TaskIOForwardReadyReply
	(*StreamCrunReply_TaskIOForwardReply)(nil),          // 145: crane.grpc.StreamCrunReply.TaskIOForwardReply
	(*StreamCrunReply_TaskX11ForwardReply)(nil),         // 146: crane.grpc.StreamCrunReply.TaskX11ForwardReply
	(*StreamTaskIORequest_SupervisorRegisterReq)(nil),   // 147: crane.grpc.StreamTaskIORequest.SupervisorRegisterReq
	(*StreamTaskIORequest_TaskOutputReq)(nil),           // 148: crane.grpc.StreamTaskIORequest.TaskOutputReq
	(*StreamTaskIORequest_SupervisorUnRegisterReq)(nil), // 149: crane.grpc.StreamTaskIORequest.SupervisorUnRegisterReq
	(*StreamTaskIORequest_TaskX11OutputReq)(nil),        // 150: crane.grpc.StreamTaskIORequest.TaskX11OutputReq
	(*StreamTaskIOReply_SupervisorRegisterReply)(nil),   // 151: crane.grpc.StreamTaskIOReply.SupervisorRegisterReply
	(*StreamTaskIOReply_TaskInputReq)(nil),              // 152: crane.grpc.StreamTaskIOReply.TaskInputReq
	(*StreamTaskIOReply_SupervisorUnregisterReply)(nil), // 153: crane.grpc.StreamTaskIOReply.SupervisorUnregisterReply
	(*StreamTaskIOReply_TaskX11InputReq)(nil),           // 154: crane.grpc.StreamTaskIOReply.TaskX11InputReq
	(*QueryTxnLogReply_Txn)(nil),                        // 155: crane.grpc.QueryTxnLogReply.Txn
	(TaskStatus)(0),                                     // 156: crane.grpc.TaskStatus
	(*timestamppb.Timestamp)(nil),                       // 157: google.protobuf.Timestamp
	(*CranedRemoteMeta)(nil),                            // 158: crane.grpc.CranedRemoteMeta
	(*TaskToCtld)(nil),                                  // 159: crane.grpc.TaskToCtld
	(ErrCode)(0),                                        // 160: crane.grpc.ErrCode
	(*TaskToD)(nil),                                     // 161: crane.grpc.TaskToD
	(*JobToD)(nil),                                      // 162: crane.grpc.JobToD
	(*CranedInfo)(nil),                                  // 163: crane.grpc.CranedInfo
	(*PartitionInfo)(nil),                               // 164: crane.grpc.PartitionInfo
	(*ReservationInfo)(nil),                             // 165: crane.grpc.ReservationInfo
	(CranedControlState)(0),                             // 166: crane.grpc.CranedControlState
	(*AccountInfo)(nil),                                 // 167: crane.grpc.AccountInfo
	(*UserInfo)(nil),                                    // 168: crane.grpc.UserInfo
	(*QosInfo)(nil),                                     // 169: crane.grpc.QosInfo
	(*RichError)(nil),                                   // 170: crane.grpc.RichError
	(ModifyField)(0),                                    // 171: crane.grpc.ModifyField
	(OperationType)(0),                                  // 172: crane.grpc.OperationType
	(EntityType)(0),                                     // 173: crane.grpc.EntityType
	(CranedResourceState)(0),                            // 174: crane.grpc.CranedResourceState
	(CranedPowerState)(0),                               // 175: crane.grpc.CranedPowerState
	(*TrimmedPartitionInfo)(nil),                        // 176: crane.grpc.TrimmedPartitionInfo
	(*TimeInterval)(nil),                                // 177: crane.grpc.TimeInterval
	(*TaskInfo)(nil),                                    // 178: crane.grpc.TaskInfo
	(InteractiveTaskType)(0),                            // 179: crane.grpc.InteractiveTaskType
	(TxnAction)(0),                                      // 180: crane.grpc.TxnAction
	(*emptypb.Empty)(nil),                               // 181: google.protobuf.Empty
}
var file_Crane_proto_depIdxs = []int32{
	156, // 0: crane.grpc.StepStatusChangeRequest.new_status:type_name -> crane.grpc.TaskStatus
	157, // 1: crane.grpc.CranedTriggerReverseConnRequest.token:type_name -> google.protobuf.Timestamp
	115, // 2: crane.grpc.ConfigureCranedRequest.job_map:type_name -> crane.grpc.ConfigureCranedRequest.JobMapEntry
	116, // 3: crane.grpc.ConfigureCranedRequest.job_tasks_map:type_name -> crane.grpc.ConfigureCranedRequest.JobTasksMapEntry
	157, // 4: crane.grpc.ConfigureCranedRequest.token:type_name -> google.protobuf.Timestamp
	158, // 5: crane.grpc.CranedRegisterRequest.remote_meta:type_name -> crane.grpc.CranedRemoteMeta
	157, // 6: crane.grpc.CranedRegisterRequest.token:type_name -> google.protobuf.Timestamp
	159, // 7: crane.grpc.SubmitBatchTaskRequest.task:type_name -> crane.grpc.TaskToCtld
	160, // 8: crane.grpc.SubmitBatchTaskReply.code:type_name -> crane.grpc.ErrCode
	159, // 9: crane.grpc.SubmitBatchTasksRequest.task:type_name -> crane.grpc.TaskToCtld
	160, // 10: crane.grpc.SubmitBatchTasksReply.code_list:type_name -> crane.grpc.ErrCode
	161, // 11: crane.grpc.ExecuteStepsRequest.tasks:type_name -> crane.grpc.TaskToD
	162, // 12: crane.grpc.CreateCgroupForJobsRequest.job_list:type_name -> crane.grpc.JobToD
	156, // 13: crane.grpc.CancelTaskRequest.filter_state:type_name -> crane.grpc.TaskStatus
	163, // 14: crane.grpc.QueryCranedInfoReply.craned_info_list:type_name -> crane.grpc.CranedInfo
	164, // 15: crane.grpc.QueryPartitionInfoReply.partition_info_list:type_name -> crane.grpc.PartitionInfo
	165, // 16: crane.grpc.QueryReservationInfoReply.reservation_info_list:type_name -> crane.grpc.ReservationInfo
	0,   // 17: crane.grpc.ModifyTaskRequest.attribute:type_name -> crane.grpc.ModifyTaskRequest.TargetAttributes
	117, // 18: crane.grpc.ModifyTasksExtraAttrsRequest.extra_attrs_list:type_name -> crane.grpc.ModifyTasksExtraAttrsRequest.ExtraAttrsListEntry
	166, // 19: crane.grpc.ModifyCranedStateRequest.new_state:type_name -> crane.grpc.CranedControlState
	167, // 20: crane.grpc.AddAccountRequest.account:type_name -> crane.grpc.AccountInfo
	160, // 21: crane.grpc.AddAccountReply.code:type_name -> crane.grpc.ErrCode
	168, // 22: crane.grpc.AddUserRequest.user:type_name -> crane.grpc.UserInfo
	160, // 23: crane.grpc.AddUserReply.code:type_name -> crane.grpc.ErrCode
	169, // 24: crane.grpc.AddQosRequest.qos:type_name -> crane.grpc.QosInfo
	160, // 25: crane.grpc.AddQosReply.code:type_name -> crane.grpc.ErrCode
	170, // 26: crane.grpc.DeleteAccountReply.rich_error_list:type_name -> crane.grpc.RichError
	170, // 27: crane.grpc.DeleteUserReply.rich_error_list:type_name -> crane.grpc.RichError
	170, // 28: crane.grpc.DeleteQosReply.rich_error_list:type_name -> crane.grpc.RichError
	171, // 29: crane.grpc.ModifyAccountRequest.modify_field:type_name -> crane.grpc.ModifyField
	172, // 30: crane.grpc.ModifyAccountRequest.type:type_name -> crane.grpc.OperationType
	170, // 31: crane.grpc.ModifyAccountReply.rich_error_list:type_name -> crane.grpc.RichError
	171, // 32: crane.grpc.ModifyUserRequest.modify_field:type_name -> crane.grpc.ModifyField
	172, // 33: crane.grpc.ModifyUserRequest.type:type_name -> crane.grpc.OperationType
	170, // 34: crane.grpc.ModifyUserReply.rich_error_list:type_name -> crane.grpc.RichError
	171, // 35: crane.grpc.ModifyQosRequest.modify_field:type_name -> crane.grpc.ModifyField
	160, // 36: crane.grpc.ModifyQosReply.code:type_name -> crane.grpc.ErrCode
	167, // 37: crane.grpc.QueryAccountInfoReply.account_list:type_name -> crane.grpc.AccountInfo
	170, // 38: crane.grpc.QueryAccountInfoReply.rich_error_list:type_name -> crane.grpc.RichError
	168, // 39: crane.grpc.QueryUserInfoReply.user_list:type_name -> crane.grpc.UserInfo
	170, // 40: crane.grpc.QueryUserInfoReply.rich_error_list:type_name -> crane.grpc.RichError
	169, // 41: crane.grpc.QueryQosInfoReply.qos_list:type_name -> crane.grpc.QosInfo
	170, // 42: crane.grpc.QueryQosInfoReply.rich_error_list:type_name -> crane.grpc.RichError
	173, // 43: crane.grpc.BlockAccountOrUserRequest.entity_type:type_name -> crane.grpc.EntityType
	170, // 44: crane.grpc.BlockAccountOrUserReply.rich_error_list:type_name -> crane.grpc.RichError
	160, // 45: crane.grpc.ModifyPartitionAclReply.code:type_name -> crane.grpc.ErrCode
	118, // 46: crane.grpc.QuerySshStepEnvVariablesReply.env_map:type_name -> crane.grpc.QuerySshStepEnvVariablesReply.EnvMapEntry
	119, // 47: crane.grpc.QuerySshStepEnvVariablesForwardReply.env_map:type_name -> crane.grpc.QuerySshStepEnvVariablesForwardReply.EnvMapEntry
	174, // 48: crane.grpc.QueryClusterInfoRequest.filter_craned_resource_states:type_name -> crane.grpc.CranedResourceState
	166, // 49: crane.grpc.QueryClusterInfoRequest.filter_craned_control_states:type_name -> crane.grpc.CranedControlState
	175, // 50: crane.grpc.QueryClusterInfoRequest.filter_craned_power_states:type_name -> crane.grpc.CranedPowerState
	176, // 51: crane.grpc.QueryClusterInfoReply.partitions:type_name -> crane.grpc.TrimmedPartitionInfo
	156, // 52: crane.grpc.QueryTasksInfoRequest.filter_task_states:type_name -> crane.grpc.TaskStatus
	177, // 53: crane.grpc.QueryTasksInfoRequest.filter_submit_time_interval:type_name -> crane.grpc.TimeInterval
	177, // 54: crane.grpc.QueryTasksInfoRequest.filter_start_time_interval:type_name -> crane.grpc.TimeInterval
	177, // 55: crane.grpc.QueryTasksInfoRequest.filter_end_time_interval:type_name -> crane.grpc.TimeInterval
	178, // 56: crane.grpc.QueryTasksInfoReply.task_info_list:type_name -> crane.grpc.TaskInfo
	1,   // 57: crane.grpc.StreamCallocRequest.type:type_name -> crane.grpc.StreamCallocRequest.CallocRequestType
	120, // 58: crane.grpc.StreamCallocRequest.payload_task_req:type_name -> crane.grpc.StreamCallocRequest.TaskReq
	121, // 59: crane.grpc.StreamCallocRequest.payload_task_complete_req:type_name -> crane.grpc.StreamCallocRequest.TaskCompleteReq
	2,   // 60: crane.grpc.StreamCallocReply.type:type_name -> crane.grpc.StreamCallocReply.CforedReplyType
	122, // 61: crane.grpc.StreamCallocReply.payload_task_id_reply:type_name -> crane.grpc.StreamCallocReply.TaskIdReply
	123, // 62: crane.grpc.StreamCallocReply.payload_task_alloc_reply:type_name -> crane.grpc.StreamCallocReply.TaskResAllocatedReply
	124, // 63: crane.grpc.StreamCallocReply.payload_task_cancel_request:type_name -> crane.grpc.StreamCallocReply.TaskCancelRequest
	125, // 64: crane.grpc.StreamCallocReply.payload_task_completion_ack_reply:type_name -> crane.grpc.StreamCallocReply.TaskCompletionAckReply
	3,   // 65: crane.grpc.StreamCforedRequest.type:type_name -> crane.grpc.StreamCforedRequest.CforedRequestType
	126, // 66: crane.grpc.StreamCforedRequest.payload_cfored_reg:type_name -> crane.grpc.StreamCforedRequest.CforedReg
	127, // 67: crane.grpc.StreamCforedRequest.payload_task_req:type_name -> crane.grpc.StreamCforedRequest.TaskReq
	128, // 68: crane.grpc.StreamCforedRequest.payload_task_complete_req:type_name -> crane.grpc.StreamCforedRequest.TaskCompleteReq
	129, // 69: crane.grpc.StreamCforedRequest.payload_graceful_exit_req:type_name -> crane.grpc.StreamCforedRequest.GracefulExitReq
	4,   // 70: crane.grpc.StreamCtldReply.type:type_name -> crane.grpc.StreamCtldReply.CtldReplyType
	134, // 71: crane.grpc.StreamCtldReply.payload_cfored_reg_ack:type_name -> crane.grpc.StreamCtldReply.CforedRegistrationAck
	131, // 72: crane.grpc.StreamCtldReply.payload_task_res_alloc_reply:type_name -> crane.grpc.StreamCtldReply.TaskResAllocatedReply
	132, // 73: crane.grpc.StreamCtldReply.payload_task_cancel_request:type_name -> crane.grpc.StreamCtldReply.TaskCancelRequest
	133, // 74: crane.grpc.StreamCtldReply.payload_task_completion_ack:type_name -> crane.grpc.StreamCtldReply.TaskCompletionAckReply
	130, // 75: crane.grpc.StreamCtldReply.payload_task_id_reply:type_name -> crane.grpc.StreamCtldReply.TaskIdReply
	135, // 76: crane.grpc.StreamCtldReply.payload_graceful_exit_ack:type_name -> crane.grpc.StreamCtldReply.CforedGracefulExitAck
	5,   // 77: crane.grpc.StreamCrunRequest.type:type_name -> crane.grpc.StreamCrunRequest.CrunRequestType
	136, // 78: crane.grpc.StreamCrunRequest.payload_task_req:type_name -> crane.grpc.StreamCrunRequest.TaskReq
	137, // 79: crane.grpc.StreamCrunRequest.payload_task_complete_req:type_name -> crane.grpc.StreamCrunRequest.TaskCompleteReq
	138, // 80: crane.grpc.StreamCrunRequest.payload_task_io_forward_req:type_name -> crane.grpc.StreamCrunRequest.TaskIOForwardReq
	139, // 81: crane.grpc.StreamCrunRequest.payload_task_x11_forward_req:type_name -> crane.grpc.StreamCrunRequest.TaskX11ForwardReq
	6,   // 82: crane.grpc.StreamCrunReply.type:type_name -> crane.grpc.StreamCrunReply.CforedCrunReplyType
	140, // 83: crane.grpc.StreamCrunReply.payload_task_id_reply:type_name -> crane.grpc.StreamCrunReply.TaskIdReply
	141, // 84: crane.grpc.StreamCrunReply.payload_task_alloc_reply:type_name -> crane.grpc.StreamCrunReply.TaskResAllocatedReply
	142, // 85: crane.grpc.StreamCrunReply.payload_task_cancel_request:type_name -> crane.grpc.StreamCrunReply.TaskCancelRequest
	143, // 86: crane.grpc.StreamCrunReply.payload_task_completion_ack_reply:type_name -> crane.grpc.StreamCrunReply.TaskCompletionAckReply
	144, // 87: crane.grpc.StreamCrunReply.payload_task_io_forward_ready_reply:type_name -> crane.grpc.StreamCrunReply.TaskIOForwardReadyReply
	145, // 88: crane.grpc.StreamCrunReply.payload_task_io_forward_reply:type_name -> crane.grpc.StreamCrunReply.TaskIOForwardReply
	146, // 89: crane.grpc.StreamCrunReply.payload_task_x11_forward_reply:type_name -> crane.grpc.StreamCrunReply.TaskX11ForwardReply
	7,   // 90: crane.grpc.StreamTaskIORequest.type:type_name -> crane.grpc.StreamTaskIORequest.SupervisorRequestType
	147, // 91: crane.grpc.StreamTaskIORequest.payload_register_req:type_name -> crane.grpc.StreamTaskIORequest.SupervisorRegisterReq
	148, // 92: crane.grpc.StreamTaskIORequest.payload_task_output_req:type_name -> crane.grpc.StreamTaskIORequest.TaskOutputReq
	149, // 93: crane.grpc.StreamTaskIORequest.payload_unregister_req:type_name -> crane.grpc.StreamTaskIORequest.SupervisorUnRegisterReq
	150, // 94: crane.grpc.StreamTaskIORequest.payload_task_x11_output_req:type_name -> crane.grpc.StreamTaskIORequest.TaskX11OutputReq
	8,   // 95: crane.grpc.StreamTaskIOReply.type:type_name -> crane.grpc.StreamTaskIOReply.SupervisorReplyType
	151, // 96: crane.grpc.StreamTaskIOReply.payload_supervisor_register_reply:type_name -> crane.grpc.StreamTaskIOReply.SupervisorRegisterReply
	152, // 97: crane.grpc.StreamTaskIOReply.payload_task_input_req:type_name -> crane.grpc.StreamTaskIOReply.TaskInputReq
	153, // 98: crane.grpc.StreamTaskIOReply.payload_supervisor_unregister_reply:type_name -> crane.grpc.StreamTaskIOReply.SupervisorUnregisterReply
	154, // 99: crane.grpc.StreamTaskIOReply.payload_task_x11_input_req:type_name -> crane.grpc.StreamTaskIOReply.TaskX11InputReq
	175, // 100: crane.grpc.PowerStateChangeRequest.state:type_name -> crane.grpc.CranedPowerState
	160, // 101: crane.grpc.SignUserCertificateResponse.reason:type_name -> crane.grpc.ErrCode
	170, // 102: crane.grpc.ResetUserCredentialReply.rich_error_list:type_name -> crane.grpc.RichError
	177, // 103: crane.grpc.QueryTxnLogRequest.time_interval:type_name -> crane.grpc.TimeInterval
	160, // 104: crane.grpc.QueryTxnLogReply.code:type_name -> crane.grpc.ErrCode
	155, // 105: crane.grpc.QueryTxnLogReply.txn_log_list:type_name -> crane.grpc.QueryTxnLogReply.Txn
	162, // 106: crane.grpc.ConfigureCranedRequest.JobMapEntry.value:type_name -> crane.grpc.JobToD
	161, // 107: crane.grpc.ConfigureCranedRequest.JobTasksMapEntry.value:type_name -> crane.grpc.TaskToD
	159, // 108: crane.grpc.StreamCallocRequest.TaskReq.task:type_name -> crane.grpc.TaskToCtld
	156, // 109: crane.grpc.StreamCallocRequest.TaskCompleteReq.status:type_name -> crane.grpc.TaskStatus
	159, // 110: crane.grpc.StreamCforedRequest.TaskReq.task:type_name -> crane.grpc.TaskToCtld
	156, // 111: crane.grpc.StreamCforedRequest.TaskCompleteReq.status:type_name -> crane.grpc.TaskStatus
	179, // 112: crane.grpc.StreamCforedRequest.TaskCompleteReq.interactive_type:type_name -> crane.grpc.InteractiveTaskType
	159, // 113: crane.grpc.StreamCrunRequest.TaskReq.task:type_name -> crane.grpc.TaskToCtld
	156, // 114: crane.grpc.StreamCrunRequest.TaskCompleteReq.status:type_name -> crane.grpc.TaskStatus
	180, // 115: crane.grpc.QueryTxnLogReply.Txn.action:type_name -> crane.grpc.TxnAction
	37,  // 116: crane.grpc.CraneCtld.CancelTask:input_type -> crane.grpc.CancelTaskRequest
	19,  // 117: crane.grpc.CraneCtld.SubmitBatchTask:input_type -> crane.grpc.SubmitBatchTaskRequest
	21,  // 118: crane.grpc.CraneCtld.SubmitBatchTasks:input_type -> crane.grpc.SubmitBatchTasksRequest
	43,  // 119: crane.grpc.CraneCtld.QueryCranedInfo:input_type -> crane.grpc.QueryCranedInfoRequest
	45,  // 120: crane.grpc.CraneCtld.QueryPartitionInfo:input_type -> crane.grpc.QueryPartitionInfoRequest
	47,  // 121: crane.grpc.CraneCtld.QueryReservationInfo:input_type -> crane.grpc.QueryReservationInfoRequest
	49,  // 122: crane.grpc.CraneCtld.ModifyTask:input_type -> crane.grpc.ModifyTaskRequest
	53,  // 123: crane.grpc.CraneCtld.ModifyNode:input_type -> crane.grpc.ModifyCranedStateRequest
	81,  // 124: crane.grpc.CraneCtld.ModifyPartitionAcl:input_type -> crane.grpc.ModifyPartitionAclRequest
	107, // 125: crane.grpc.CraneCtld.EnableAutoPowerControl:input_type -> crane.grpc.EnableAutoPowerControlRequest
	51,  // 126: crane.grpc.CraneCtld.ModifyTasksExtraAttrs:input_type -> crane.grpc.ModifyTasksExtraAttrsRequest
	55,  // 127: crane.grpc.CraneCtld.AddAccount:input_type -> crane.grpc.AddAccountRequest
	57,  // 128: crane.grpc.CraneCtld.AddUser:input_type -> crane.grpc.AddUserRequest
	59,  // 129: crane.grpc.CraneCtld.AddQos:input_type -> crane.grpc.AddQosRequest
	61,  // 130: crane.grpc.CraneCtld.DeleteAccount:input_type -> crane.grpc.DeleteAccountRequest
	63,  // 131: crane.grpc.CraneCtld.DeleteUser:input_type -> crane.grpc.DeleteUserRequest
	65,  // 132: crane.grpc.CraneCtld.DeleteQos:input_type -> crane.grpc.DeleteQosRequest
	73,  // 133: crane.grpc.CraneCtld.QueryAccountInfo:input_type -> crane.grpc.QueryAccountInfoRequest
	75,  // 134: crane.grpc.CraneCtld.QueryUserInfo:input_type -> crane.grpc.QueryUserInfoRequest
	77,  // 135: crane.grpc.CraneCtld.QueryQosInfo:input_type -> crane.grpc.QueryQosInfoRequest
	67,  // 136: crane.grpc.CraneCtld.ModifyAccount:input_type -> crane.grpc.ModifyAccountRequest
	69,  // 137: crane.grpc.CraneCtld.ModifyUser:input_type -> crane.grpc.ModifyUserRequest
	71,  // 138: crane.grpc.CraneCtld.ModifyQos:input_type -> crane.grpc.ModifyQosRequest
	79,  // 139: crane.grpc.CraneCtld.BlockAccountOrUser:input_type -> crane.grpc.BlockAccountOrUserRequest
	111, // 140: crane.grpc.CraneCtld.ResetUserCredential:input_type -> crane.grpc.ResetUserCredentialRequest
	113, // 141: crane.grpc.CraneCtld.QueryTxnLog:input_type -> crane.grpc.QueryTxnLogRequest
	89,  // 142: crane.grpc.CraneCtld.QueryClusterInfo:input_type -> crane.grpc.QueryClusterInfoRequest
	91,  // 143: crane.grpc.CraneCtld.QueryTasksInfo:input_type -> crane.grpc.QueryTasksInfoRequest
	93,  // 144: crane.grpc.CraneCtld.CreateReservation:input_type -> crane.grpc.CreateReservationRequest
	95,  // 145: crane.grpc.CraneCtld.DeleteReservation:input_type -> crane.grpc.DeleteReservationRequest
	105, // 146: crane.grpc.CraneCtld.PowerStateChange:input_type -> crane.grpc.PowerStateChangeRequest
	109, // 147: crane.grpc.CraneCtld.SignUserCertificate:input_type -> crane.grpc.SignUserCertificateRequest
	9,   // 148: crane.grpc.CraneCtldForInternal.StepStatusChange:input_type -> crane.grpc.StepStatusChangeRequest
	11,  // 149: crane.grpc.CraneCtldForInternal.CranedTriggerReverseConn:input_type -> crane.grpc.CranedTriggerReverseConnRequest
	13,  // 150: crane.grpc.CraneCtldForInternal.CranedRegister:input_type -> crane.grpc.CranedRegisterRequest
	15,  // 151: crane.grpc.CraneCtldForInternal.CranedPing:input_type -> crane.grpc.CranedPingRequest
	99,  // 152: crane.grpc.CraneCtldForInternal.CforedStream:input_type -> crane.grpc.StreamCforedRequest
	12,  // 153: crane.grpc.Craned.Configure:input_type -> crane.grpc.ConfigureCranedRequest
	23,  // 154: crane.grpc.Craned.ExecuteSteps:input_type -> crane.grpc.ExecuteStepsRequest
	25,  // 155: crane.grpc.Craned.CreateCgroupForJobs:input_type -> crane.grpc.CreateCgroupForJobsRequest
	27,  // 156: crane.grpc.Craned.FreeSteps:input_type -> crane.grpc.FreeStepsRequest
	29,  // 157: crane.grpc.Craned.ReleaseCgroupForJobs:input_type -> crane.grpc.ReleaseCgroupForJobsRequest
	31,  // 158: crane.grpc.Craned.TerminateSteps:input_type -> crane.grpc.TerminateStepsRequest
	33,  // 159: crane.grpc.Craned.TerminateOrphanedStep:input_type -> crane.grpc.TerminateOrphanedStepRequest
	35,  // 160: crane.grpc.Craned.ChangeJobTimeLimit:input_type -> crane.grpc.ChangeJobTimeLimitRequest
	39,  // 161: crane.grpc.Craned.QueryStepFromPort:input_type -> crane.grpc.QueryStepFromPortRequest
	85,  // 162: crane.grpc.Craned.QuerySshStepEnvVariables:input_type -> crane.grpc.QuerySshStepEnvVariablesRequest
	9,   // 163: crane.grpc.Craned.StepStatusChange:input_type -> crane.grpc.StepStatusChangeRequest
	41,  // 164: crane.grpc.CranedForPam.QueryStepFromPortForward:input_type -> crane.grpc.QueryStepFromPortForwardRequest
	83,  // 165: crane.grpc.CranedForPam.MigrateSshProcToCgroup:input_type -> crane.grpc.MigrateSshProcToCgroupRequest
	87,  // 166: crane.grpc.CranedForPam.QuerySshStepEnvVariablesForward:input_type -> crane.grpc.QuerySshStepEnvVariablesForwardRequest
	97,  // 167: crane.grpc.CraneForeD.CallocStream:input_type -> crane.grpc.StreamCallocRequest
	101, // 168: crane.grpc.CraneForeD.CrunStream:input_type -> crane.grpc.StreamCrunRequest
	103, // 169: crane.grpc.CraneForeD.TaskIOStream:input_type -> crane.grpc.StreamTaskIORequest
	39,  // 170: crane.grpc.CraneForeD.QueryStepFromPort:input_type -> crane.grpc.QueryStepFromPortRequest
	38,  // 171: crane.grpc.CraneCtld.CancelTask:output_type -> crane.grpc.CancelTaskReply
	20,  // 172: crane.grpc.CraneCtld.SubmitBatchTask:output_type -> crane.grpc.SubmitBatchTaskReply
	22,  // 173: crane.grpc.CraneCtld.SubmitBatchTasks:output_type -> crane.grpc.SubmitBatchTasksReply
	44,  // 174: crane.grpc.CraneCtld.QueryCranedInfo:output_type -> crane.grpc.QueryCranedInfoReply
	46,  // 175: crane.grpc.CraneCtld.QueryPartitionInfo:output_type -> crane.grpc.QueryPartitionInfoReply
	48,  // 176: crane.grpc.CraneCtld.QueryReservationInfo:output_type -> crane.grpc.QueryReservationInfoReply
	50,  // 177: crane.grpc.CraneCtld.ModifyTask:output_type -> crane.grpc.ModifyTaskReply
	54,  // 178: crane.grpc.CraneCtld.ModifyNode:output_type -> crane.grpc.ModifyCranedStateReply
	82,  // 179: crane.grpc.CraneCtld.ModifyPartitionAcl:output_type -> crane.grpc.ModifyPartitionAclReply
	108, // 180: crane.grpc.CraneCtld.EnableAutoPowerControl:output_type -> crane.grpc.EnableAutoPowerControlReply
	52,  // 181: crane.grpc.CraneCtld.ModifyTasksExtraAttrs:output_type -> crane.grpc.ModifyTasksExtraAttrsReply
	56,  // 182: crane.grpc.CraneCtld.AddAccount:output_type -> crane.grpc.AddAccountReply
	58,  // 183: crane.grpc.CraneCtld.AddUser:output_type -> crane.grpc.AddUserReply
	60,  // 184: crane.grpc.CraneCtld.AddQos:output_type -> crane.grpc.AddQosReply
	62,  // 185: crane.grpc.CraneCtld.DeleteAccount:output_type -> crane.grpc.DeleteAccountReply
	64,  // 186: crane.grpc.CraneCtld.DeleteUser:output_type -> crane.grpc.DeleteUserReply
	66,  // 187: crane.grpc.CraneCtld.DeleteQos:output_type -> crane.grpc.DeleteQosReply
	74,  // 188: crane.grpc.CraneCtld.QueryAccountInfo:output_type -> crane.grpc.QueryAccountInfoReply
	76,  // 189: crane.grpc.CraneCtld.QueryUserInfo:output_type -> crane.grpc.QueryUserInfoReply
	78,  // 190: crane.grpc.CraneCtld.QueryQosInfo:output_type -> crane.grpc.QueryQosInfoReply
	68,  // 191: crane.grpc.CraneCtld.ModifyAccount:output_type -> crane.grpc.ModifyAccountReply
	70,  // 192: crane.grpc.CraneCtld.ModifyUser:output_type -> crane.grpc.ModifyUserReply
	72,  // 193: crane.grpc.CraneCtld.ModifyQos:output_type -> crane.grpc.ModifyQosReply
	80,  // 194: crane.grpc.CraneCtld.BlockAccountOrUser:output_type -> crane.grpc.BlockAccountOrUserReply
	112, // 195: crane.grpc.CraneCtld.ResetUserCredential:output_type -> crane.grpc.ResetUserCredentialReply
	114, // 196: crane.grpc.CraneCtld.QueryTxnLog:output_type -> crane.grpc.QueryTxnLogReply
	90,  // 197: crane.grpc.CraneCtld.QueryClusterInfo:output_type -> crane.grpc.QueryClusterInfoReply
	92,  // 198: crane.grpc.CraneCtld.QueryTasksInfo:output_type -> crane.grpc.QueryTasksInfoReply
	94,  // 199: crane.grpc.CraneCtld.CreateReservation:output_type -> crane.grpc.CreateReservationReply
	96,  // 200: crane.grpc.CraneCtld.DeleteReservation:output_type -> crane.grpc.DeleteReservationReply
	106, // 201: crane.grpc.CraneCtld.PowerStateChange:output_type -> crane.grpc.PowerStateChangeReply
	110, // 202: crane.grpc.CraneCtld.SignUserCertificate:output_type -> crane.grpc.SignUserCertificateResponse
	10,  // 203: crane.grpc.CraneCtldForInternal.StepStatusChange:output_type -> crane.grpc.StepStatusChangeReply
	181, // 204: crane.grpc.CraneCtldForInternal.CranedTriggerReverseConn:output_type -> google.protobuf.Empty
	14,  // 205: crane.grpc.CraneCtldForInternal.CranedRegister:output_type -> crane.grpc.CranedRegisterReply
	16,  // 206: crane.grpc.CraneCtldForInternal.CranedPing:output_type -> crane.grpc.CranedPingReply
	100, // 207: crane.grpc.CraneCtldForInternal.CforedStream:output_type -> crane.grpc.StreamCtldReply
	181, // 208: crane.grpc.Craned.Configure:output_type -> google.protobuf.Empty
	24,  // 209: crane.grpc.Craned.ExecuteSteps:output_type -> crane.grpc.ExecuteStepsReply
	26,  // 210: crane.grpc.Craned.CreateCgroupForJobs:output_type -> crane.grpc.CreateCgroupForJobsReply
	28,  // 211: crane.grpc.Craned.FreeSteps:output_type -> crane.grpc.FreeStepsReply
	30,  // 212: crane.grpc.Craned.ReleaseCgroupForJobs:output_type -> crane.grpc.ReleaseCgroupForJobsReply
	32,  // 213: crane.grpc.Craned.TerminateSteps:output_type -> crane.grpc.TerminateStepsReply
	34,  // 214: crane.grpc.Craned.TerminateOrphanedStep:output_type -> crane.grpc.TerminateOrphanedStepReply
	36,  // 215: crane.grpc.Craned.ChangeJobTimeLimit:output_type -> crane.grpc.ChangeJobTimeLimitReply
	40,  // 216: crane.grpc.Craned.QueryStepFromPort:output_type -> crane.grpc.QueryStepFromPortReply
	86,  // 217: crane.grpc.Craned.QuerySshStepEnvVariables:output_type -> crane.grpc.QuerySshStepEnvVariablesReply
	10,  // 218: crane.grpc.Craned.StepStatusChange:output_type -> crane.grpc.StepStatusChangeReply
	42,  // 219: crane.grpc.CranedForPam.QueryStepFromPortForward:output_type -> crane.grpc.QueryStepFromPortForwardReply
	84,  // 220: crane.grpc.CranedForPam.MigrateSshProcToCgroup:output_type -> crane.grpc.MigrateSshProcToCgroupReply
	88,  // 221: crane.grpc.CranedForPam.QuerySshStepEnvVariablesForward:output_type -> crane.grpc.QuerySshStepEnvVariablesForwardReply
	98,  // 222: crane.grpc.CraneForeD.CallocStream:output_type -> crane.grpc.StreamCallocReply
	102, // 223: crane.grpc.CraneForeD.CrunStream:output_type -> crane.grpc.StreamCrunReply
	104, // 224: crane.grpc.CraneForeD.TaskIOStream:output_type -> crane.grpc.StreamTaskIOReply
	40,  // 225: crane.grpc.CraneForeD.QueryStepFromPort:output_type -> crane.grpc.QueryStepFromPortReply
	171, // [171:226] is the sub-list for method output_type
	116, // [116:171] is the sub-list for method input_type
	116, // [116:116] is the sub-list for extension type_name
	116, // [116:116] is the sub-list for extension extendee
	0,   // [0:116] is the sub-list for field type_name
}

func init() { file_Crane_proto_init() }
func file_Crane_proto_init() {
	if File_Crane_proto != nil {
		return
	}
	file_PublicDefs_proto_init()
	file_Crane_proto_msgTypes[11].OneofWrappers = []any{
		(*SubmitBatchTaskReply_TaskId)(nil),
		(*SubmitBatchTaskReply_Code)(nil),
	}
	file_Crane_proto_msgTypes[40].OneofWrappers = []any{
		(*ModifyTaskRequest_TimeLimitSeconds)(nil),
		(*ModifyTaskRequest_MandatedPriority)(nil),
		(*ModifyTaskRequest_HoldSeconds)(nil),
	}
	file_Crane_proto_msgTypes[88].OneofWrappers = []any{
		(*StreamCallocRequest_PayloadTaskReq)(nil),
		(*StreamCallocRequest_PayloadTaskCompleteReq)(nil),
	}
	file_Crane_proto_msgTypes[89].OneofWrappers = []any{
		(*StreamCallocReply_PayloadTaskIdReply)(nil),
		(*StreamCallocReply_PayloadTaskAllocReply)(nil),
		(*StreamCallocReply_PayloadTaskCancelRequest)(nil),
		(*StreamCallocReply_PayloadTaskCompletionAckReply)(nil),
	}
	file_Crane_proto_msgTypes[90].OneofWrappers = []any{
		(*StreamCforedRequest_PayloadCforedReg)(nil),
		(*StreamCforedRequest_PayloadTaskReq)(nil),
		(*StreamCforedRequest_PayloadTaskCompleteReq)(nil),
		(*StreamCforedRequest_PayloadGracefulExitReq)(nil),
	}
	file_Crane_proto_msgTypes[91].OneofWrappers = []any{
		(*StreamCtldReply_PayloadCforedRegAck)(nil),
		(*StreamCtldReply_PayloadTaskResAllocReply)(nil),
		(*StreamCtldReply_PayloadTaskCancelRequest)(nil),
		(*StreamCtldReply_PayloadTaskCompletionAck)(nil),
		(*StreamCtldReply_PayloadTaskIdReply)(nil),
		(*StreamCtldReply_PayloadGracefulExitAck)(nil),
	}
	file_Crane_proto_msgTypes[92].OneofWrappers = []any{
		(*StreamCrunRequest_PayloadTaskReq)(nil),
		(*StreamCrunRequest_PayloadTaskCompleteReq)(nil),
		(*StreamCrunRequest_PayloadTaskIoForwardReq)(nil),
		(*StreamCrunRequest_PayloadTaskX11ForwardReq)(nil),
	}
	file_Crane_proto_msgTypes[93].OneofWrappers = []any{
		(*StreamCrunReply_PayloadTaskIdReply)(nil),
		(*StreamCrunReply_PayloadTaskAllocReply)(nil),
		(*StreamCrunReply_PayloadTaskCancelRequest)(nil),
		(*StreamCrunReply_PayloadTaskCompletionAckReply)(nil),
		(*StreamCrunReply_PayloadTaskIoForwardReadyReply)(nil),
		(*StreamCrunReply_PayloadTaskIoForwardReply)(nil),
		(*StreamCrunReply_PayloadTaskX11ForwardReply)(nil),
	}
	file_Crane_proto_msgTypes[94].OneofWrappers = []any{
		(*StreamTaskIORequest_PayloadRegisterReq)(nil),
		(*StreamTaskIORequest_PayloadTaskOutputReq)(nil),
		(*StreamTaskIORequest_PayloadUnregisterReq)(nil),
		(*StreamTaskIORequest_PayloadTaskX11OutputReq)(nil),
	}
	file_Crane_proto_msgTypes[95].OneofWrappers = []any{
		(*StreamTaskIOReply_PayloadSupervisorRegisterReply)(nil),
		(*StreamTaskIOReply_PayloadTaskInputReq)(nil),
		(*StreamTaskIOReply_PayloadSupervisorUnregisterReply)(nil),
		(*StreamTaskIOReply_PayloadTaskX11InputReq)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_Crane_proto_rawDesc), len(file_Crane_proto_rawDesc)),
			NumEnums:      9,
			NumMessages:   147,
			NumExtensions: 0,
			NumServices:   5,
		},
		GoTypes:           file_Crane_proto_goTypes,
		DependencyIndexes: file_Crane_proto_depIdxs,
		EnumInfos:         file_Crane_proto_enumTypes,
		MessageInfos:      file_Crane_proto_msgTypes,
	}.Build()
	File_Crane_proto = out.File
	file_Crane_proto_goTypes = nil
	file_Crane_proto_depIdxs = nil
}
