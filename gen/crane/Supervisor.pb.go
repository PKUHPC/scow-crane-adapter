//*
// Copyright (c) 2024 Peking University and Peking University
// Changsha Institute for Computing and Digital Economy
//
// This program is free software: you can redistribute it and/or modify
// it under the terms of the GNU Affero General Public License as
// published by the Free Software Foundation, either version 3 of the
// License, or (at your option) any later version.
//
// This program is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU Affero General Public License for more details.
//
// You should have received a copy of the GNU Affero General Public License
// along with this program.  If not, see <https://www.gnu.org/licenses/>.

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.10
// 	protoc        (unknown)
// source: Supervisor.proto

package gen

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type CanStartMessage struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Ok            bool                   `protobuf:"varint,1,opt,name=ok,proto3" json:"ok,omitempty"`
	X11Port       uint32                 `protobuf:"varint,2,opt,name=x11_port,json=x11Port,proto3" json:"x11_port,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CanStartMessage) Reset() {
	*x = CanStartMessage{}
	mi := &file_Supervisor_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CanStartMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CanStartMessage) ProtoMessage() {}

func (x *CanStartMessage) ProtoReflect() protoreflect.Message {
	mi := &file_Supervisor_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CanStartMessage.ProtoReflect.Descriptor instead.
func (*CanStartMessage) Descriptor() ([]byte, []int) {
	return file_Supervisor_proto_rawDescGZIP(), []int{0}
}

func (x *CanStartMessage) GetOk() bool {
	if x != nil {
		return x.Ok
	}
	return false
}

func (x *CanStartMessage) GetX11Port() uint32 {
	if x != nil {
		return x.X11Port
	}
	return 0
}

type ChildProcessReady struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Ok            bool                   `protobuf:"varint,1,opt,name=ok,proto3" json:"ok,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ChildProcessReady) Reset() {
	*x = ChildProcessReady{}
	mi := &file_Supervisor_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ChildProcessReady) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChildProcessReady) ProtoMessage() {}

func (x *ChildProcessReady) ProtoReflect() protoreflect.Message {
	mi := &file_Supervisor_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChildProcessReady.ProtoReflect.Descriptor instead.
func (*ChildProcessReady) Descriptor() ([]byte, []int) {
	return file_Supervisor_proto_rawDescGZIP(), []int{1}
}

func (x *ChildProcessReady) GetOk() bool {
	if x != nil {
		return x.Ok
	}
	return false
}

type InitSupervisorRequest struct {
	state                protoimpl.MessageState                  `protogen:"open.v1"`
	JobId                uint32                                  `protobuf:"varint,1,opt,name=job_id,json=jobId,proto3" json:"job_id,omitempty"`
	DebugLevel           string                                  `protobuf:"bytes,2,opt,name=debug_level,json=debugLevel,proto3" json:"debug_level,omitempty"`
	CranedId             string                                  `protobuf:"bytes,3,opt,name=craned_id,json=cranedId,proto3" json:"craned_id,omitempty"`
	CranedUnixSocketPath string                                  `protobuf:"bytes,4,opt,name=craned_unix_socket_path,json=cranedUnixSocketPath,proto3" json:"craned_unix_socket_path,omitempty"`
	CraneBaseDir         string                                  `protobuf:"bytes,5,opt,name=crane_base_dir,json=craneBaseDir,proto3" json:"crane_base_dir,omitempty"`
	CraneScriptDir       string                                  `protobuf:"bytes,6,opt,name=crane_script_dir,json=craneScriptDir,proto3" json:"crane_script_dir,omitempty"`
	ContainerConfig      *InitSupervisorRequest_ContainerConfig  `protobuf:"bytes,7,opt,name=container_config,json=containerConfig,proto3" json:"container_config,omitempty"`
	PluginConfig         *InitSupervisorRequest_PluginConfig     `protobuf:"bytes,8,opt,name=plugin_config,json=pluginConfig,proto3" json:"plugin_config,omitempty"`
	StepSpec             *TaskToD                                `protobuf:"bytes,9,opt,name=step_spec,json=stepSpec,proto3" json:"step_spec,omitempty"`
	Env                  map[string]string                       `protobuf:"bytes,10,rep,name=env,proto3" json:"env,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	LogDir               string                                  `protobuf:"bytes,11,opt,name=log_dir,json=logDir,proto3" json:"log_dir,omitempty"`
	CgroupPath           string                                  `protobuf:"bytes,12,opt,name=cgroup_path,json=cgroupPath,proto3" json:"cgroup_path,omitempty"` // resolved cgroup path for OOM monitoring
	CforedListenConf     *InitSupervisorRequest_CforedListenConf `protobuf:"bytes,13,opt,name=cfored_listen_conf,json=cforedListenConf,proto3" json:"cfored_listen_conf,omitempty"`
	unknownFields        protoimpl.UnknownFields
	sizeCache            protoimpl.SizeCache
}

func (x *InitSupervisorRequest) Reset() {
	*x = InitSupervisorRequest{}
	mi := &file_Supervisor_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *InitSupervisorRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InitSupervisorRequest) ProtoMessage() {}

func (x *InitSupervisorRequest) ProtoReflect() protoreflect.Message {
	mi := &file_Supervisor_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InitSupervisorRequest.ProtoReflect.Descriptor instead.
func (*InitSupervisorRequest) Descriptor() ([]byte, []int) {
	return file_Supervisor_proto_rawDescGZIP(), []int{2}
}

func (x *InitSupervisorRequest) GetJobId() uint32 {
	if x != nil {
		return x.JobId
	}
	return 0
}

func (x *InitSupervisorRequest) GetDebugLevel() string {
	if x != nil {
		return x.DebugLevel
	}
	return ""
}

func (x *InitSupervisorRequest) GetCranedId() string {
	if x != nil {
		return x.CranedId
	}
	return ""
}

func (x *InitSupervisorRequest) GetCranedUnixSocketPath() string {
	if x != nil {
		return x.CranedUnixSocketPath
	}
	return ""
}

func (x *InitSupervisorRequest) GetCraneBaseDir() string {
	if x != nil {
		return x.CraneBaseDir
	}
	return ""
}

func (x *InitSupervisorRequest) GetCraneScriptDir() string {
	if x != nil {
		return x.CraneScriptDir
	}
	return ""
}

func (x *InitSupervisorRequest) GetContainerConfig() *InitSupervisorRequest_ContainerConfig {
	if x != nil {
		return x.ContainerConfig
	}
	return nil
}

func (x *InitSupervisorRequest) GetPluginConfig() *InitSupervisorRequest_PluginConfig {
	if x != nil {
		return x.PluginConfig
	}
	return nil
}

func (x *InitSupervisorRequest) GetStepSpec() *TaskToD {
	if x != nil {
		return x.StepSpec
	}
	return nil
}

func (x *InitSupervisorRequest) GetEnv() map[string]string {
	if x != nil {
		return x.Env
	}
	return nil
}

func (x *InitSupervisorRequest) GetLogDir() string {
	if x != nil {
		return x.LogDir
	}
	return ""
}

func (x *InitSupervisorRequest) GetCgroupPath() string {
	if x != nil {
		return x.CgroupPath
	}
	return ""
}

func (x *InitSupervisorRequest) GetCforedListenConf() *InitSupervisorRequest_CforedListenConf {
	if x != nil {
		return x.CforedListenConf
	}
	return nil
}

type SupervisorReady struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Ok            bool                   `protobuf:"varint,1,opt,name=ok,proto3" json:"ok,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SupervisorReady) Reset() {
	*x = SupervisorReady{}
	mi := &file_Supervisor_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SupervisorReady) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SupervisorReady) ProtoMessage() {}

func (x *SupervisorReady) ProtoReflect() protoreflect.Message {
	mi := &file_Supervisor_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SupervisorReady.ProtoReflect.Descriptor instead.
func (*SupervisorReady) Descriptor() ([]byte, []int) {
	return file_Supervisor_proto_rawDescGZIP(), []int{3}
}

func (x *SupervisorReady) GetOk() bool {
	if x != nil {
		return x.Ok
	}
	return false
}

type TaskExecutionRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TaskExecutionRequest) Reset() {
	*x = TaskExecutionRequest{}
	mi := &file_Supervisor_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TaskExecutionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TaskExecutionRequest) ProtoMessage() {}

func (x *TaskExecutionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_Supervisor_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TaskExecutionRequest.ProtoReflect.Descriptor instead.
func (*TaskExecutionRequest) Descriptor() ([]byte, []int) {
	return file_Supervisor_proto_rawDescGZIP(), []int{4}
}

type TaskExecutionReply struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Code          ErrCode                `protobuf:"varint,1,opt,name=code,proto3,enum=crane.grpc.ErrCode" json:"code,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TaskExecutionReply) Reset() {
	*x = TaskExecutionReply{}
	mi := &file_Supervisor_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TaskExecutionReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TaskExecutionReply) ProtoMessage() {}

func (x *TaskExecutionReply) ProtoReflect() protoreflect.Message {
	mi := &file_Supervisor_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TaskExecutionReply.ProtoReflect.Descriptor instead.
func (*TaskExecutionReply) Descriptor() ([]byte, []int) {
	return file_Supervisor_proto_rawDescGZIP(), []int{5}
}

func (x *TaskExecutionReply) GetCode() ErrCode {
	if x != nil {
		return x.Code
	}
	return ErrCode_SUCCESS
}

type QueryStepEnvRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *QueryStepEnvRequest) Reset() {
	*x = QueryStepEnvRequest{}
	mi := &file_Supervisor_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *QueryStepEnvRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryStepEnvRequest) ProtoMessage() {}

func (x *QueryStepEnvRequest) ProtoReflect() protoreflect.Message {
	mi := &file_Supervisor_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryStepEnvRequest.ProtoReflect.Descriptor instead.
func (*QueryStepEnvRequest) Descriptor() ([]byte, []int) {
	return file_Supervisor_proto_rawDescGZIP(), []int{6}
}

type QueryStepEnvReply struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Ok            bool                   `protobuf:"varint,1,opt,name=ok,proto3" json:"ok,omitempty"`
	Env           map[string]string      `protobuf:"bytes,2,rep,name=env,proto3" json:"env,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *QueryStepEnvReply) Reset() {
	*x = QueryStepEnvReply{}
	mi := &file_Supervisor_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *QueryStepEnvReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryStepEnvReply) ProtoMessage() {}

func (x *QueryStepEnvReply) ProtoReflect() protoreflect.Message {
	mi := &file_Supervisor_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryStepEnvReply.ProtoReflect.Descriptor instead.
func (*QueryStepEnvReply) Descriptor() ([]byte, []int) {
	return file_Supervisor_proto_rawDescGZIP(), []int{7}
}

func (x *QueryStepEnvReply) GetOk() bool {
	if x != nil {
		return x.Ok
	}
	return false
}

func (x *QueryStepEnvReply) GetEnv() map[string]string {
	if x != nil {
		return x.Env
	}
	return nil
}

type CheckStatusRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CheckStatusRequest) Reset() {
	*x = CheckStatusRequest{}
	mi := &file_Supervisor_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CheckStatusRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CheckStatusRequest) ProtoMessage() {}

func (x *CheckStatusRequest) ProtoReflect() protoreflect.Message {
	mi := &file_Supervisor_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CheckStatusRequest.ProtoReflect.Descriptor instead.
func (*CheckStatusRequest) Descriptor() ([]byte, []int) {
	return file_Supervisor_proto_rawDescGZIP(), []int{8}
}

type CheckStatusReply struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	JobId         int32                  `protobuf:"varint,1,opt,name=job_id,json=jobId,proto3" json:"job_id,omitempty"`
	SupervisorPid int32                  `protobuf:"varint,2,opt,name=supervisor_pid,json=supervisorPid,proto3" json:"supervisor_pid,omitempty"`
	Ok            bool                   `protobuf:"varint,3,opt,name=ok,proto3" json:"ok,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CheckStatusReply) Reset() {
	*x = CheckStatusReply{}
	mi := &file_Supervisor_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CheckStatusReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CheckStatusReply) ProtoMessage() {}

func (x *CheckStatusReply) ProtoReflect() protoreflect.Message {
	mi := &file_Supervisor_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CheckStatusReply.ProtoReflect.Descriptor instead.
func (*CheckStatusReply) Descriptor() ([]byte, []int) {
	return file_Supervisor_proto_rawDescGZIP(), []int{9}
}

func (x *CheckStatusReply) GetJobId() int32 {
	if x != nil {
		return x.JobId
	}
	return 0
}

func (x *CheckStatusReply) GetSupervisorPid() int32 {
	if x != nil {
		return x.SupervisorPid
	}
	return 0
}

func (x *CheckStatusReply) GetOk() bool {
	if x != nil {
		return x.Ok
	}
	return false
}

type ChangeTaskTimeLimitRequest struct {
	state            protoimpl.MessageState `protogen:"open.v1"`
	TimeLimitSeconds int64                  `protobuf:"varint,1,opt,name=time_limit_seconds,json=timeLimitSeconds,proto3" json:"time_limit_seconds,omitempty"`
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *ChangeTaskTimeLimitRequest) Reset() {
	*x = ChangeTaskTimeLimitRequest{}
	mi := &file_Supervisor_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ChangeTaskTimeLimitRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChangeTaskTimeLimitRequest) ProtoMessage() {}

func (x *ChangeTaskTimeLimitRequest) ProtoReflect() protoreflect.Message {
	mi := &file_Supervisor_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChangeTaskTimeLimitRequest.ProtoReflect.Descriptor instead.
func (*ChangeTaskTimeLimitRequest) Descriptor() ([]byte, []int) {
	return file_Supervisor_proto_rawDescGZIP(), []int{10}
}

func (x *ChangeTaskTimeLimitRequest) GetTimeLimitSeconds() int64 {
	if x != nil {
		return x.TimeLimitSeconds
	}
	return 0
}

type ChangeTaskTimeLimitReply struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Ok            bool                   `protobuf:"varint,1,opt,name=ok,proto3" json:"ok,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ChangeTaskTimeLimitReply) Reset() {
	*x = ChangeTaskTimeLimitReply{}
	mi := &file_Supervisor_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ChangeTaskTimeLimitReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChangeTaskTimeLimitReply) ProtoMessage() {}

func (x *ChangeTaskTimeLimitReply) ProtoReflect() protoreflect.Message {
	mi := &file_Supervisor_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChangeTaskTimeLimitReply.ProtoReflect.Descriptor instead.
func (*ChangeTaskTimeLimitReply) Descriptor() ([]byte, []int) {
	return file_Supervisor_proto_rawDescGZIP(), []int{11}
}

func (x *ChangeTaskTimeLimitReply) GetOk() bool {
	if x != nil {
		return x.Ok
	}
	return false
}

type TerminateTaskRequest struct {
	state            protoimpl.MessageState `protogen:"open.v1"`
	MarkOrphaned     bool                   `protobuf:"varint,1,opt,name=mark_orphaned,json=markOrphaned,proto3" json:"mark_orphaned,omitempty"`
	TerminatedByUser bool                   `protobuf:"varint,2,opt,name=terminated_by_user,json=terminatedByUser,proto3" json:"terminated_by_user,omitempty"`
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *TerminateTaskRequest) Reset() {
	*x = TerminateTaskRequest{}
	mi := &file_Supervisor_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TerminateTaskRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TerminateTaskRequest) ProtoMessage() {}

func (x *TerminateTaskRequest) ProtoReflect() protoreflect.Message {
	mi := &file_Supervisor_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TerminateTaskRequest.ProtoReflect.Descriptor instead.
func (*TerminateTaskRequest) Descriptor() ([]byte, []int) {
	return file_Supervisor_proto_rawDescGZIP(), []int{12}
}

func (x *TerminateTaskRequest) GetMarkOrphaned() bool {
	if x != nil {
		return x.MarkOrphaned
	}
	return false
}

func (x *TerminateTaskRequest) GetTerminatedByUser() bool {
	if x != nil {
		return x.TerminatedByUser
	}
	return false
}

type TerminateTaskReply struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Ok            bool                   `protobuf:"varint,1,opt,name=ok,proto3" json:"ok,omitempty"`
	Reason        string                 `protobuf:"bytes,2,opt,name=reason,proto3" json:"reason,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TerminateTaskReply) Reset() {
	*x = TerminateTaskReply{}
	mi := &file_Supervisor_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TerminateTaskReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TerminateTaskReply) ProtoMessage() {}

func (x *TerminateTaskReply) ProtoReflect() protoreflect.Message {
	mi := &file_Supervisor_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TerminateTaskReply.ProtoReflect.Descriptor instead.
func (*TerminateTaskReply) Descriptor() ([]byte, []int) {
	return file_Supervisor_proto_rawDescGZIP(), []int{13}
}

func (x *TerminateTaskReply) GetOk() bool {
	if x != nil {
		return x.Ok
	}
	return false
}

func (x *TerminateTaskReply) GetReason() string {
	if x != nil {
		return x.Reason
	}
	return ""
}

type ShutdownSupervisorRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ShutdownSupervisorRequest) Reset() {
	*x = ShutdownSupervisorRequest{}
	mi := &file_Supervisor_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ShutdownSupervisorRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ShutdownSupervisorRequest) ProtoMessage() {}

func (x *ShutdownSupervisorRequest) ProtoReflect() protoreflect.Message {
	mi := &file_Supervisor_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ShutdownSupervisorRequest.ProtoReflect.Descriptor instead.
func (*ShutdownSupervisorRequest) Descriptor() ([]byte, []int) {
	return file_Supervisor_proto_rawDescGZIP(), []int{14}
}

type ShutdownSupervisorReply struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ShutdownSupervisorReply) Reset() {
	*x = ShutdownSupervisorReply{}
	mi := &file_Supervisor_proto_msgTypes[15]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ShutdownSupervisorReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ShutdownSupervisorReply) ProtoMessage() {}

func (x *ShutdownSupervisorReply) ProtoReflect() protoreflect.Message {
	mi := &file_Supervisor_proto_msgTypes[15]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ShutdownSupervisorReply.ProtoReflect.Descriptor instead.
func (*ShutdownSupervisorReply) Descriptor() ([]byte, []int) {
	return file_Supervisor_proto_rawDescGZIP(), []int{15}
}

type InitSupervisorRequest_ContainerConfig struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	TempDir       string                 `protobuf:"bytes,1,opt,name=temp_dir,json=tempDir,proto3" json:"temp_dir,omitempty"`
	RuntimeBin    string                 `protobuf:"bytes,2,opt,name=runtime_bin,json=runtimeBin,proto3" json:"runtime_bin,omitempty"`
	StateCmd      string                 `protobuf:"bytes,3,opt,name=state_cmd,json=stateCmd,proto3" json:"state_cmd,omitempty"`
	RunCmd        string                 `protobuf:"bytes,4,opt,name=run_cmd,json=runCmd,proto3" json:"run_cmd,omitempty"`
	KillCmd       string                 `protobuf:"bytes,5,opt,name=kill_cmd,json=killCmd,proto3" json:"kill_cmd,omitempty"`
	DeleteCmd     string                 `protobuf:"bytes,6,opt,name=delete_cmd,json=deleteCmd,proto3" json:"delete_cmd,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *InitSupervisorRequest_ContainerConfig) Reset() {
	*x = InitSupervisorRequest_ContainerConfig{}
	mi := &file_Supervisor_proto_msgTypes[16]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *InitSupervisorRequest_ContainerConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InitSupervisorRequest_ContainerConfig) ProtoMessage() {}

func (x *InitSupervisorRequest_ContainerConfig) ProtoReflect() protoreflect.Message {
	mi := &file_Supervisor_proto_msgTypes[16]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InitSupervisorRequest_ContainerConfig.ProtoReflect.Descriptor instead.
func (*InitSupervisorRequest_ContainerConfig) Descriptor() ([]byte, []int) {
	return file_Supervisor_proto_rawDescGZIP(), []int{2, 0}
}

func (x *InitSupervisorRequest_ContainerConfig) GetTempDir() string {
	if x != nil {
		return x.TempDir
	}
	return ""
}

func (x *InitSupervisorRequest_ContainerConfig) GetRuntimeBin() string {
	if x != nil {
		return x.RuntimeBin
	}
	return ""
}

func (x *InitSupervisorRequest_ContainerConfig) GetStateCmd() string {
	if x != nil {
		return x.StateCmd
	}
	return ""
}

func (x *InitSupervisorRequest_ContainerConfig) GetRunCmd() string {
	if x != nil {
		return x.RunCmd
	}
	return ""
}

func (x *InitSupervisorRequest_ContainerConfig) GetKillCmd() string {
	if x != nil {
		return x.KillCmd
	}
	return ""
}

func (x *InitSupervisorRequest_ContainerConfig) GetDeleteCmd() string {
	if x != nil {
		return x.DeleteCmd
	}
	return ""
}

type InitSupervisorRequest_PluginConfig struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	SocketPath    string                 `protobuf:"bytes,1,opt,name=socket_path,json=socketPath,proto3" json:"socket_path,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *InitSupervisorRequest_PluginConfig) Reset() {
	*x = InitSupervisorRequest_PluginConfig{}
	mi := &file_Supervisor_proto_msgTypes[17]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *InitSupervisorRequest_PluginConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InitSupervisorRequest_PluginConfig) ProtoMessage() {}

func (x *InitSupervisorRequest_PluginConfig) ProtoReflect() protoreflect.Message {
	mi := &file_Supervisor_proto_msgTypes[17]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InitSupervisorRequest_PluginConfig.ProtoReflect.Descriptor instead.
func (*InitSupervisorRequest_PluginConfig) Descriptor() ([]byte, []int) {
	return file_Supervisor_proto_rawDescGZIP(), []int{2, 1}
}

func (x *InitSupervisorRequest_PluginConfig) GetSocketPath() string {
	if x != nil {
		return x.SocketPath
	}
	return ""
}

type InitSupervisorRequest_CforedListenConf struct {
	state         protoimpl.MessageState                                  `protogen:"open.v1"`
	UseTls        bool                                                    `protobuf:"varint,1,opt,name=use_tls,json=useTls,proto3" json:"use_tls,omitempty"`
	TlsCerts      *InitSupervisorRequest_CforedListenConf_TlsCertificates `protobuf:"bytes,2,opt,name=tls_certs,json=tlsCerts,proto3" json:"tls_certs,omitempty"`
	DomainSuffix  string                                                  `protobuf:"bytes,3,opt,name=domain_suffix,json=domainSuffix,proto3" json:"domain_suffix,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *InitSupervisorRequest_CforedListenConf) Reset() {
	*x = InitSupervisorRequest_CforedListenConf{}
	mi := &file_Supervisor_proto_msgTypes[19]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *InitSupervisorRequest_CforedListenConf) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InitSupervisorRequest_CforedListenConf) ProtoMessage() {}

func (x *InitSupervisorRequest_CforedListenConf) ProtoReflect() protoreflect.Message {
	mi := &file_Supervisor_proto_msgTypes[19]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InitSupervisorRequest_CforedListenConf.ProtoReflect.Descriptor instead.
func (*InitSupervisorRequest_CforedListenConf) Descriptor() ([]byte, []int) {
	return file_Supervisor_proto_rawDescGZIP(), []int{2, 3}
}

func (x *InitSupervisorRequest_CforedListenConf) GetUseTls() bool {
	if x != nil {
		return x.UseTls
	}
	return false
}

func (x *InitSupervisorRequest_CforedListenConf) GetTlsCerts() *InitSupervisorRequest_CforedListenConf_TlsCertificates {
	if x != nil {
		return x.TlsCerts
	}
	return nil
}

func (x *InitSupervisorRequest_CforedListenConf) GetDomainSuffix() string {
	if x != nil {
		return x.DomainSuffix
	}
	return ""
}

type InitSupervisorRequest_CforedListenConf_TlsCertificates struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	CertContent   string                 `protobuf:"bytes,1,opt,name=cert_content,json=certContent,proto3" json:"cert_content,omitempty"`
	KeyContent    string                 `protobuf:"bytes,2,opt,name=key_content,json=keyContent,proto3" json:"key_content,omitempty"`
	CaContent     string                 `protobuf:"bytes,3,opt,name=ca_content,json=caContent,proto3" json:"ca_content,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *InitSupervisorRequest_CforedListenConf_TlsCertificates) Reset() {
	*x = InitSupervisorRequest_CforedListenConf_TlsCertificates{}
	mi := &file_Supervisor_proto_msgTypes[20]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *InitSupervisorRequest_CforedListenConf_TlsCertificates) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InitSupervisorRequest_CforedListenConf_TlsCertificates) ProtoMessage() {}

func (x *InitSupervisorRequest_CforedListenConf_TlsCertificates) ProtoReflect() protoreflect.Message {
	mi := &file_Supervisor_proto_msgTypes[20]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InitSupervisorRequest_CforedListenConf_TlsCertificates.ProtoReflect.Descriptor instead.
func (*InitSupervisorRequest_CforedListenConf_TlsCertificates) Descriptor() ([]byte, []int) {
	return file_Supervisor_proto_rawDescGZIP(), []int{2, 3, 0}
}

func (x *InitSupervisorRequest_CforedListenConf_TlsCertificates) GetCertContent() string {
	if x != nil {
		return x.CertContent
	}
	return ""
}

func (x *InitSupervisorRequest_CforedListenConf_TlsCertificates) GetKeyContent() string {
	if x != nil {
		return x.KeyContent
	}
	return ""
}

func (x *InitSupervisorRequest_CforedListenConf_TlsCertificates) GetCaContent() string {
	if x != nil {
		return x.CaContent
	}
	return ""
}

var File_Supervisor_proto protoreflect.FileDescriptor

const file_Supervisor_proto_rawDesc = "" +
	"\n" +
	"\x10Supervisor.proto\x12\x15crane.grpc.supervisor\x1a\x10PublicDefs.proto\"<\n" +
	"\x0fCanStartMessage\x12\x0e\n" +
	"\x02ok\x18\x01 \x01(\bR\x02ok\x12\x19\n" +
	"\bx11_port\x18\x02 \x01(\rR\ax11Port\"#\n" +
	"\x11ChildProcessReady\x12\x0e\n" +
	"\x02ok\x18\x01 \x01(\bR\x02ok\"\xbc\n" +
	"\n" +
	"\x15InitSupervisorRequest\x12\x15\n" +
	"\x06job_id\x18\x01 \x01(\rR\x05jobId\x12\x1f\n" +
	"\vdebug_level\x18\x02 \x01(\tR\n" +
	"debugLevel\x12\x1b\n" +
	"\tcraned_id\x18\x03 \x01(\tR\bcranedId\x125\n" +
	"\x17craned_unix_socket_path\x18\x04 \x01(\tR\x14cranedUnixSocketPath\x12$\n" +
	"\x0ecrane_base_dir\x18\x05 \x01(\tR\fcraneBaseDir\x12(\n" +
	"\x10crane_script_dir\x18\x06 \x01(\tR\x0ecraneScriptDir\x12g\n" +
	"\x10container_config\x18\a \x01(\v2<.crane.grpc.supervisor.InitSupervisorRequest.ContainerConfigR\x0fcontainerConfig\x12^\n" +
	"\rplugin_config\x18\b \x01(\v29.crane.grpc.supervisor.InitSupervisorRequest.PluginConfigR\fpluginConfig\x120\n" +
	"\tstep_spec\x18\t \x01(\v2\x13.crane.grpc.TaskToDR\bstepSpec\x12G\n" +
	"\x03env\x18\n" +
	" \x03(\v25.crane.grpc.supervisor.InitSupervisorRequest.EnvEntryR\x03env\x12\x17\n" +
	"\alog_dir\x18\v \x01(\tR\x06logDir\x12\x1f\n" +
	"\vcgroup_path\x18\f \x01(\tR\n" +
	"cgroupPath\x12k\n" +
	"\x12cfored_listen_conf\x18\r \x01(\v2=.crane.grpc.supervisor.InitSupervisorRequest.CforedListenConfR\x10cforedListenConf\x1a\xbd\x01\n" +
	"\x0fContainerConfig\x12\x19\n" +
	"\btemp_dir\x18\x01 \x01(\tR\atempDir\x12\x1f\n" +
	"\vruntime_bin\x18\x02 \x01(\tR\n" +
	"runtimeBin\x12\x1b\n" +
	"\tstate_cmd\x18\x03 \x01(\tR\bstateCmd\x12\x17\n" +
	"\arun_cmd\x18\x04 \x01(\tR\x06runCmd\x12\x19\n" +
	"\bkill_cmd\x18\x05 \x01(\tR\akillCmd\x12\x1d\n" +
	"\n" +
	"delete_cmd\x18\x06 \x01(\tR\tdeleteCmd\x1a/\n" +
	"\fPluginConfig\x12\x1f\n" +
	"\vsocket_path\x18\x01 \x01(\tR\n" +
	"socketPath\x1a6\n" +
	"\bEnvEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\x1a\xb2\x02\n" +
	"\x10CforedListenConf\x12\x17\n" +
	"\ause_tls\x18\x01 \x01(\bR\x06useTls\x12j\n" +
	"\ttls_certs\x18\x02 \x01(\v2M.crane.grpc.supervisor.InitSupervisorRequest.CforedListenConf.TlsCertificatesR\btlsCerts\x12#\n" +
	"\rdomain_suffix\x18\x03 \x01(\tR\fdomainSuffix\x1at\n" +
	"\x0fTlsCertificates\x12!\n" +
	"\fcert_content\x18\x01 \x01(\tR\vcertContent\x12\x1f\n" +
	"\vkey_content\x18\x02 \x01(\tR\n" +
	"keyContent\x12\x1d\n" +
	"\n" +
	"ca_content\x18\x03 \x01(\tR\tcaContent\"!\n" +
	"\x0fSupervisorReady\x12\x0e\n" +
	"\x02ok\x18\x01 \x01(\bR\x02ok\"\x16\n" +
	"\x14TaskExecutionRequest\"=\n" +
	"\x12TaskExecutionReply\x12'\n" +
	"\x04code\x18\x01 \x01(\x0e2\x13.crane.grpc.ErrCodeR\x04code\"\x15\n" +
	"\x13QueryStepEnvRequest\"\xa0\x01\n" +
	"\x11QueryStepEnvReply\x12\x0e\n" +
	"\x02ok\x18\x01 \x01(\bR\x02ok\x12C\n" +
	"\x03env\x18\x02 \x03(\v21.crane.grpc.supervisor.QueryStepEnvReply.EnvEntryR\x03env\x1a6\n" +
	"\bEnvEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"\x14\n" +
	"\x12CheckStatusRequest\"`\n" +
	"\x10CheckStatusReply\x12\x15\n" +
	"\x06job_id\x18\x01 \x01(\x05R\x05jobId\x12%\n" +
	"\x0esupervisor_pid\x18\x02 \x01(\x05R\rsupervisorPid\x12\x0e\n" +
	"\x02ok\x18\x03 \x01(\bR\x02ok\"J\n" +
	"\x1aChangeTaskTimeLimitRequest\x12,\n" +
	"\x12time_limit_seconds\x18\x01 \x01(\x03R\x10timeLimitSeconds\"*\n" +
	"\x18ChangeTaskTimeLimitReply\x12\x0e\n" +
	"\x02ok\x18\x01 \x01(\bR\x02ok\"i\n" +
	"\x14TerminateTaskRequest\x12#\n" +
	"\rmark_orphaned\x18\x01 \x01(\bR\fmarkOrphaned\x12,\n" +
	"\x12terminated_by_user\x18\x02 \x01(\bR\x10terminatedByUser\"<\n" +
	"\x12TerminateTaskReply\x12\x0e\n" +
	"\x02ok\x18\x01 \x01(\bR\x02ok\x12\x16\n" +
	"\x06reason\x18\x02 \x01(\tR\x06reason\"\x1b\n" +
	"\x19ShutdownSupervisorRequest\"\x19\n" +
	"\x17ShutdownSupervisorReply2\x97\x05\n" +
	"\n" +
	"Supervisor\x12e\n" +
	"\vExecuteTask\x12+.crane.grpc.supervisor.TaskExecutionRequest\x1a).crane.grpc.supervisor.TaskExecutionReply\x12c\n" +
	"\vQueryEnvMap\x12*.crane.grpc.supervisor.QueryStepEnvRequest\x1a(.crane.grpc.supervisor.QueryStepEnvReply\x12a\n" +
	"\vCheckStatus\x12).crane.grpc.supervisor.CheckStatusRequest\x1a'.crane.grpc.supervisor.CheckStatusReply\x12y\n" +
	"\x13ChangeTaskTimeLimit\x121.crane.grpc.supervisor.ChangeTaskTimeLimitRequest\x1a/.crane.grpc.supervisor.ChangeTaskTimeLimitReply\x12g\n" +
	"\rTerminateTask\x12+.crane.grpc.supervisor.TerminateTaskRequest\x1a).crane.grpc.supervisor.TerminateTaskReply\x12v\n" +
	"\x12ShutdownSupervisor\x120.crane.grpc.supervisor.ShutdownSupervisorRequest\x1a..crane.grpc.supervisor.ShutdownSupervisorReplyB\xba\x01\n" +
	"\x19com.crane.grpc.supervisorB\x0fSupervisorProtoP\x01Z\x16scow-crane-adapter/gen\xa2\x02\x03CGS\xaa\x02\x15Crane.Grpc.Supervisor\xca\x02\x15Crane\\Grpc\\Supervisor\xe2\x02!Crane\\Grpc\\Supervisor\\GPBMetadata\xea\x02\x17Crane::Grpc::Supervisorb\x06proto3"

var (
	file_Supervisor_proto_rawDescOnce sync.Once
	file_Supervisor_proto_rawDescData []byte
)

func file_Supervisor_proto_rawDescGZIP() []byte {
	file_Supervisor_proto_rawDescOnce.Do(func() {
		file_Supervisor_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_Supervisor_proto_rawDesc), len(file_Supervisor_proto_rawDesc)))
	})
	return file_Supervisor_proto_rawDescData
}

var file_Supervisor_proto_msgTypes = make([]protoimpl.MessageInfo, 22)
var file_Supervisor_proto_goTypes = []any{
	(*CanStartMessage)(nil),                       // 0: crane.grpc.supervisor.CanStartMessage
	(*ChildProcessReady)(nil),                     // 1: crane.grpc.supervisor.ChildProcessReady
	(*InitSupervisorRequest)(nil),                 // 2: crane.grpc.supervisor.InitSupervisorRequest
	(*SupervisorReady)(nil),                       // 3: crane.grpc.supervisor.SupervisorReady
	(*TaskExecutionRequest)(nil),                  // 4: crane.grpc.supervisor.TaskExecutionRequest
	(*TaskExecutionReply)(nil),                    // 5: crane.grpc.supervisor.TaskExecutionReply
	(*QueryStepEnvRequest)(nil),                   // 6: crane.grpc.supervisor.QueryStepEnvRequest
	(*QueryStepEnvReply)(nil),                     // 7: crane.grpc.supervisor.QueryStepEnvReply
	(*CheckStatusRequest)(nil),                    // 8: crane.grpc.supervisor.CheckStatusRequest
	(*CheckStatusReply)(nil),                      // 9: crane.grpc.supervisor.CheckStatusReply
	(*ChangeTaskTimeLimitRequest)(nil),            // 10: crane.grpc.supervisor.ChangeTaskTimeLimitRequest
	(*ChangeTaskTimeLimitReply)(nil),              // 11: crane.grpc.supervisor.ChangeTaskTimeLimitReply
	(*TerminateTaskRequest)(nil),                  // 12: crane.grpc.supervisor.TerminateTaskRequest
	(*TerminateTaskReply)(nil),                    // 13: crane.grpc.supervisor.TerminateTaskReply
	(*ShutdownSupervisorRequest)(nil),             // 14: crane.grpc.supervisor.ShutdownSupervisorRequest
	(*ShutdownSupervisorReply)(nil),               // 15: crane.grpc.supervisor.ShutdownSupervisorReply
	(*InitSupervisorRequest_ContainerConfig)(nil), // 16: crane.grpc.supervisor.InitSupervisorRequest.ContainerConfig
	(*InitSupervisorRequest_PluginConfig)(nil),    // 17: crane.grpc.supervisor.InitSupervisorRequest.PluginConfig
	nil, // 18: crane.grpc.supervisor.InitSupervisorRequest.EnvEntry
	(*InitSupervisorRequest_CforedListenConf)(nil),                 // 19: crane.grpc.supervisor.InitSupervisorRequest.CforedListenConf
	(*InitSupervisorRequest_CforedListenConf_TlsCertificates)(nil), // 20: crane.grpc.supervisor.InitSupervisorRequest.CforedListenConf.TlsCertificates
	nil,             // 21: crane.grpc.supervisor.QueryStepEnvReply.EnvEntry
	(*TaskToD)(nil), // 22: crane.grpc.TaskToD
	(ErrCode)(0),    // 23: crane.grpc.ErrCode
}
var file_Supervisor_proto_depIdxs = []int32{
	16, // 0: crane.grpc.supervisor.InitSupervisorRequest.container_config:type_name -> crane.grpc.supervisor.InitSupervisorRequest.ContainerConfig
	17, // 1: crane.grpc.supervisor.InitSupervisorRequest.plugin_config:type_name -> crane.grpc.supervisor.InitSupervisorRequest.PluginConfig
	22, // 2: crane.grpc.supervisor.InitSupervisorRequest.step_spec:type_name -> crane.grpc.TaskToD
	18, // 3: crane.grpc.supervisor.InitSupervisorRequest.env:type_name -> crane.grpc.supervisor.InitSupervisorRequest.EnvEntry
	19, // 4: crane.grpc.supervisor.InitSupervisorRequest.cfored_listen_conf:type_name -> crane.grpc.supervisor.InitSupervisorRequest.CforedListenConf
	23, // 5: crane.grpc.supervisor.TaskExecutionReply.code:type_name -> crane.grpc.ErrCode
	21, // 6: crane.grpc.supervisor.QueryStepEnvReply.env:type_name -> crane.grpc.supervisor.QueryStepEnvReply.EnvEntry
	20, // 7: crane.grpc.supervisor.InitSupervisorRequest.CforedListenConf.tls_certs:type_name -> crane.grpc.supervisor.InitSupervisorRequest.CforedListenConf.TlsCertificates
	4,  // 8: crane.grpc.supervisor.Supervisor.ExecuteTask:input_type -> crane.grpc.supervisor.TaskExecutionRequest
	6,  // 9: crane.grpc.supervisor.Supervisor.QueryEnvMap:input_type -> crane.grpc.supervisor.QueryStepEnvRequest
	8,  // 10: crane.grpc.supervisor.Supervisor.CheckStatus:input_type -> crane.grpc.supervisor.CheckStatusRequest
	10, // 11: crane.grpc.supervisor.Supervisor.ChangeTaskTimeLimit:input_type -> crane.grpc.supervisor.ChangeTaskTimeLimitRequest
	12, // 12: crane.grpc.supervisor.Supervisor.TerminateTask:input_type -> crane.grpc.supervisor.TerminateTaskRequest
	14, // 13: crane.grpc.supervisor.Supervisor.ShutdownSupervisor:input_type -> crane.grpc.supervisor.ShutdownSupervisorRequest
	5,  // 14: crane.grpc.supervisor.Supervisor.ExecuteTask:output_type -> crane.grpc.supervisor.TaskExecutionReply
	7,  // 15: crane.grpc.supervisor.Supervisor.QueryEnvMap:output_type -> crane.grpc.supervisor.QueryStepEnvReply
	9,  // 16: crane.grpc.supervisor.Supervisor.CheckStatus:output_type -> crane.grpc.supervisor.CheckStatusReply
	11, // 17: crane.grpc.supervisor.Supervisor.ChangeTaskTimeLimit:output_type -> crane.grpc.supervisor.ChangeTaskTimeLimitReply
	13, // 18: crane.grpc.supervisor.Supervisor.TerminateTask:output_type -> crane.grpc.supervisor.TerminateTaskReply
	15, // 19: crane.grpc.supervisor.Supervisor.ShutdownSupervisor:output_type -> crane.grpc.supervisor.ShutdownSupervisorReply
	14, // [14:20] is the sub-list for method output_type
	8,  // [8:14] is the sub-list for method input_type
	8,  // [8:8] is the sub-list for extension type_name
	8,  // [8:8] is the sub-list for extension extendee
	0,  // [0:8] is the sub-list for field type_name
}

func init() { file_Supervisor_proto_init() }
func file_Supervisor_proto_init() {
	if File_Supervisor_proto != nil {
		return
	}
	file_PublicDefs_proto_init()
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_Supervisor_proto_rawDesc), len(file_Supervisor_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   22,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_Supervisor_proto_goTypes,
		DependencyIndexes: file_Supervisor_proto_depIdxs,
		MessageInfos:      file_Supervisor_proto_msgTypes,
	}.Build()
	File_Supervisor_proto = out.File
	file_Supervisor_proto_goTypes = nil
	file_Supervisor_proto_depIdxs = nil
}
